<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://asdlkjqpwoei.github.io</id>
    <title>Jager的工地</title>
    <link href="https://asdlkjqpwoei.github.io" />
    <updated>2023-08-18T10:22:55.954Z</updated>
    <entry>
        <id>https://asdlkjqpwoei.github.io/2023/08/18/Gossip/</id>
        <title>杂谈/碎碎念</title>
        <link rel="alternate" href="https://asdlkjqpwoei.github.io/2023/08/18/Gossip/"/>
        <content type="html">&lt;h1 id=&#34;Assassins’-Creed-III&#34;&gt;&lt;a href=&#34;#Assassins’-Creed-III&#34; class=&#34;headerlink&#34; title=&#34;Assassins’ Creed III&#34;&gt;&lt;/a&gt;Assassins’ Creed III&lt;/h1&gt;&lt;h1 id=&#34;BioShock-Infinite&#34;&gt;&lt;a href=&#34;#BioShock-Infinite&#34; class=&#34;headerlink&#34; title=&#34;BioShock : Infinite&#34;&gt;&lt;/a&gt;BioShock : Infinite&lt;/h1&gt;&lt;h1 id=&#34;Battlefield-1&#34;&gt;&lt;a href=&#34;#Battlefield-1&#34; class=&#34;headerlink&#34; title=&#34;Battlefield 1&#34;&gt;&lt;/a&gt;Battlefield 1&lt;/h1&gt;&lt;h1 id=&#34;Borderlands-2&#34;&gt;&lt;a href=&#34;#Borderlands-2&#34; class=&#34;headerlink&#34; title=&#34;Borderlands 2&#34;&gt;&lt;/a&gt;Borderlands 2&lt;/h1&gt;&lt;h1 id=&#34;Borderlands-3&#34;&gt;&lt;a href=&#34;#Borderlands-3&#34; class=&#34;headerlink&#34; title=&#34;Borderlands 3&#34;&gt;&lt;/a&gt;Borderlands 3&lt;/h1&gt;&lt;h1 id=&#34;Call-of-Duty-Black-Ops-II&#34;&gt;&lt;a href=&#34;#Call-of-Duty-Black-Ops-II&#34; class=&#34;headerlink&#34; title=&#34;Call of Duty: Black Ops II&#34;&gt;&lt;/a&gt;Call of Duty: Black Ops II&lt;/h1&gt;&lt;h1 id=&#34;Call-of-Duty-Black-Ops-III&#34;&gt;&lt;a href=&#34;#Call-of-Duty-Black-Ops-III&#34; class=&#34;headerlink&#34; title=&#34;Call of Duty: Black Ops III&#34;&gt;&lt;/a&gt;Call of Duty: Black Ops III&lt;/h1&gt;&lt;h1 id=&#34;Call-of-Duty-Modern-Warfare-2019&#34;&gt;&lt;a href=&#34;#Call-of-Duty-Modern-Warfare-2019&#34; class=&#34;headerlink&#34; title=&#34;Call of Duty: Modern Warfare(2019)&#34;&gt;&lt;/a&gt;Call of Duty: Modern Warfare(2019)&lt;/h1&gt;&lt;p&gt;场景、特效、模型、动画：业界顶尖&lt;/p&gt;
&lt;p&gt;枪械反馈和击杀反馈：业界顶尖&lt;/p&gt;
&lt;p&gt;多人游戏平衡性：传统艺能&lt;/p&gt;
&lt;p&gt;综合游戏体验：勉强过得去&lt;/p&gt;
&lt;p&gt;地图设计：业界顶尖的稀烂&lt;/p&gt;
&lt;h1 id=&#34;Call-of-Duty-Modern-Warfare-II-2022&#34;&gt;&lt;a href=&#34;#Call-of-Duty-Modern-Warfare-II-2022&#34; class=&#34;headerlink&#34; title=&#34;Call of Duty: Modern Warfare II(2022)&#34;&gt;&lt;/a&gt;Call of Duty: Modern Warfare II(2022)&lt;/h1&gt;&lt;p&gt;场景、特效、模型、动画：业界顶尖&lt;/p&gt;
&lt;p&gt;枪械反馈和击杀反馈：业界顶尖&lt;/p&gt;
&lt;p&gt;多人游戏平衡性：传统艺能&lt;/p&gt;
&lt;p&gt;综合游戏体验：一坨大便&lt;/p&gt;
&lt;p&gt;地图设计：业界顶尖的稀烂&lt;/p&gt;
&lt;p&gt;&lt;em&gt;地图真就搁这里玩写实和战术是吧，拉出去就是4、5个枪位，道具还少得要死，CNM想要找人对枪还得集齐队友的道具才能从一个交叉点过去是吧。哦过完这一个交叉点过不了下一个，嘻嘻，纯纯的傻逼设计，能藏人的位置一堆还不好搜。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;游戏性相关的机制设计：退步&lt;/p&gt;
&lt;p&gt;&lt;em&gt;静步成为技能这个设计已经在前一作就实装了，极大地降低进攻欲望，这一作仍然继承。人物不可以滑铲取消和机动性问题已经被喷烂了，再来个新的特长系统，开局没有鬼影无踪，快速恢复成为终极特长，不能跟鬼影无踪一起带，一旦被别人滚起雪球开出UAV，那一整局的体验都是被人乱杀，为什么呢，因为最极限的情况就是被人轮流用连杀奖励捞薯条，还有SBMM的存在，吃一把屎吃一把肉，坦克世界是吧？删除连杀特长奖励给这破新特长系统让路，连杀奖励的直升机和炮艇大改并削弱使用反馈，吐了。地图设计烂就算了，还在这里下毒的，真就全员战术哥，与前作传统的爽游体验大相径庭。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;单人游戏剧情及关卡游戏体验：大退步，稀烂&lt;/p&gt;
&lt;p&gt;单人游戏已经沦为给多人游戏做新手教程的附属品了，反恐战争与前几作世界大战就不比什么恢宏和格局了。故事描写的都是已知明面上的天下乌鸦一般黑，没有什么扣人心弦、跌宕起伏。关卡设计就是给你做战区新手教程的，没错骂的就是潜行、拾荒、追车和炸坦克。一些关卡或许还能保持一下传统艺能稳定发挥，剩下的纯纯制作组觉得自己设计得很好玩发癫。&lt;/p&gt;
&lt;p&gt;结论：700块钱买首发教训，傻逼游戏，狗都不玩。&lt;/p&gt;
&lt;h1 id=&#34;Cyberpunk-2077&#34;&gt;&lt;a href=&#34;#Cyberpunk-2077&#34; class=&#34;headerlink&#34; title=&#34;Cyberpunk 2077&#34;&gt;&lt;/a&gt;Cyberpunk 2077&lt;/h1&gt;&lt;h1 id=&#34;Devil-May-Cry-DMC&#34;&gt;&lt;a href=&#34;#Devil-May-Cry-DMC&#34; class=&#34;headerlink&#34; title=&#34;Devil May Cry - DMC&#34;&gt;&lt;/a&gt;Devil May Cry - DMC&lt;/h1&gt;&lt;h1 id=&#34;Devil-May-Cry-5&#34;&gt;&lt;a href=&#34;#Devil-May-Cry-5&#34; class=&#34;headerlink&#34; title=&#34;Devil May Cry 5&#34;&gt;&lt;/a&gt;Devil May Cry 5&lt;/h1&gt;&lt;h1 id=&#34;Elden-Ring&#34;&gt;&lt;a href=&#34;#Elden-Ring&#34; class=&#34;headerlink&#34; title=&#34;Elden Ring&#34;&gt;&lt;/a&gt;Elden Ring&lt;/h1&gt;&lt;p&gt;不愧是TGA年度游戏，在适应并且克服From Software ARPG游戏一脉相承的主角残疾人性能以后，二周目收集到足够的道具和资源，真正的乐趣就此显现，可以当个法爷丢法术，可以力敏战士拼熟练度，可以力量猛男带盾纯莽。玩法多样，动作丰富，开放世界是为了提供更多的过关方法，而不是重复的罐头，地图设计的每一个角落都有其存在的意义。&lt;/p&gt;
&lt;h1 id=&#34;Genshin-Impact&#34;&gt;&lt;a href=&#34;#Genshin-Impact&#34; class=&#34;headerlink&#34; title=&#34;Genshin Impact&#34;&gt;&lt;/a&gt;Genshin Impact&lt;/h1&gt;&lt;p&gt;为什么会玩呢，在上海条件不好只能退而求其次。一开始确实感觉挺惊艳的，美术和音乐良好（为什么良好呢，因为除了美术和音乐别的都很烂），过了三天后发现没啥意思，12+的故事相当弱智，播片和画面表现力也没有让人感到惊艳。战斗系统虽然好，但是收费模式和运营模式极大的拉长和限制在短时间免费游玩条件下能够体验到的战斗系统多样性。再后来发现不过是套着开放世界皮的抽卡手游，探索给的奖励就是打发乞丐的，无法提升游戏体验，甚至是降低，战斗系统很好玩但是收费和运营限制，美术很好看但也就只有好看，配乐也是花了重金砸出来不错的效果，然而游戏体验就是一坨，比起其他手游不过是剧情、美术、配乐更加突出，别的均是一丘之貉。&lt;/p&gt;
&lt;h1 id=&#34;The-Witcher-3-Wild-Hunt&#34;&gt;&lt;a href=&#34;#The-Witcher-3-Wild-Hunt&#34; class=&#34;headerlink&#34; title=&#34;The Witcher 3: Wild Hunt&#34;&gt;&lt;/a&gt;The Witcher 3: Wild Hunt&lt;/h1&gt;&lt;h1 id=&#34;Red-Alert-2-Mental-Omega&#34;&gt;&lt;a href=&#34;#Red-Alert-2-Mental-Omega&#34; class=&#34;headerlink&#34; title=&#34;Red Alert 2 Mental Omega&#34;&gt;&lt;/a&gt;Red Alert 2 Mental Omega&lt;/h1&gt;&lt;p&gt;难得一！好玩得一！&lt;/p&gt;
&lt;h1 id=&#34;Sekiro-Shadow-Die-Twice&#34;&gt;&lt;a href=&#34;#Sekiro-Shadow-Die-Twice&#34; class=&#34;headerlink&#34; title=&#34;Sekiro Shadow Die Twice&#34;&gt;&lt;/a&gt;Sekiro Shadow Die Twice&lt;/h1&gt;&lt;h1 id=&#34;Warframe&#34;&gt;&lt;a href=&#34;#Warframe&#34; class=&#34;headerlink&#34; title=&#34;Warframe&#34;&gt;&lt;/a&gt;Warframe&lt;/h1&gt;&lt;p&gt;玩法很多，但是都不精，并且都是为了拉长玩家游戏时间而设计，独狼体验相当垃圾，多人游玩也不太行。&lt;/p&gt;
&lt;h1 id=&#34;World-of-Tank&#34;&gt;&lt;a href=&#34;#World-of-Tank&#34; class=&#34;headerlink&#34; title=&#34;World of Tank&#34;&gt;&lt;/a&gt;World of Tank&lt;/h1&gt;&lt;p&gt;别碰，别玩，别了解，除非身患严重的低血压。&lt;/p&gt;
</content>
        <updated>2023-08-18T10:22:55.954Z</updated>
    </entry>
    <entry>
        <id>https://asdlkjqpwoei.github.io/2023/08/18/PrinciplesOfMathematicalAnalysis/</id>
        <title>Principles of Mathematical Analysis</title>
        <link rel="alternate" href="https://asdlkjqpwoei.github.io/2023/08/18/PrinciplesOfMathematicalAnalysis/"/>
        <content type="html">&lt;h1 id=&#34;The-Real-and-Complex-Number-Systems-实数和复数&#34;&gt;&lt;a href=&#34;#The-Real-and-Complex-Number-Systems-实数和复数&#34; class=&#34;headerlink&#34; title=&#34;The Real and Complex Number Systems(实数和复数)&#34;&gt;&lt;/a&gt;The Real and Complex Number Systems(实数和复数)&lt;/h1&gt;&lt;p&gt;全面的主要数学分析讨论（比如收敛性、连续性、不同和积分）必须建立在准确定义的数字概念。有理数不足以表示许多数字，比如没有有理数$a$能满足$a^2 &amp;#x3D; 2$。&lt;/p&gt;
&lt;h1 id=&#34;Basic-Topology-基本拓扑&#34;&gt;&lt;a href=&#34;#Basic-Topology-基本拓扑&#34; class=&#34;headerlink&#34; title=&#34;Basic Topology(基本拓扑)&#34;&gt;&lt;/a&gt;Basic Topology(基本拓扑)&lt;/h1&gt;&lt;h2 id=&#34;Metric-Space-度量空间&#34;&gt;&lt;a href=&#34;#Metric-Space-度量空间&#34; class=&#34;headerlink&#34; title=&#34;Metric Space(度量空间)&#34;&gt;&lt;/a&gt;Metric Space(度量空间)&lt;/h2&gt;&lt;h1 id=&#34;Reference&#34;&gt;&lt;a href=&#34;#Reference&#34; class=&#34;headerlink&#34; title=&#34;Reference&#34;&gt;&lt;/a&gt;Reference&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Principles of Mathematical Analysis - Walter Rudin&lt;/li&gt;
&lt;/ol&gt;
</content>
        <updated>2023-08-18T08:26:29.492Z</updated>
    </entry>
    <entry>
        <id>https://asdlkjqpwoei.github.io/2023/08/17/WarFirstPersonNote/</id>
        <title>War First Person Development Note</title>
        <link rel="alternate" href="https://asdlkjqpwoei.github.io/2023/08/17/WarFirstPersonNote/"/>
        <content type="html">&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FzZGxranFwd29laS9XYXJGaXJzdFBlcnNvbg==&#34;&gt;War First Person&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;Plan&#34;&gt;&lt;a href=&#34;#Plan&#34; class=&#34;headerlink&#34; title=&#34;Plan&#34;&gt;&lt;/a&gt;Plan&lt;/h1&gt;&lt;h2 id=&#34;基本框架&#34;&gt;&lt;a href=&#34;#基本框架&#34; class=&#34;headerlink&#34; title=&#34;基本框架&#34;&gt;&lt;/a&gt;基本框架&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;基本的人物模型和角色移动。&lt;/li&gt;
&lt;li&gt;动画资源整合及动画后期处理。&lt;/li&gt;
&lt;li&gt;武器和射击方案初步成型。&lt;/li&gt;
&lt;li&gt;摄像机人称切换。&lt;/li&gt;
&lt;li&gt;调试输出界面。&lt;/li&gt;
&lt;li&gt;基本抬头显示器。&lt;/li&gt;
&lt;li&gt;建立基本游戏模式和玩家状态。&lt;/li&gt;
&lt;li&gt;基本的敌对AI。&lt;/li&gt;
&lt;li&gt;主界面。&lt;/li&gt;
&lt;li&gt;将多余的资源和插件移除。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;进阶&#34;&gt;&lt;a href=&#34;#进阶&#34; class=&#34;headerlink&#34; title=&#34;进阶&#34;&gt;&lt;/a&gt;进阶&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;将射击方案替换成投射物物理碰撞，而不是射线检测。&lt;/li&gt;
&lt;li&gt;提供更多的武器和更多样的射击。&lt;/li&gt;
&lt;li&gt;提供更多的道具以扩展玩法。&lt;/li&gt;
&lt;li&gt;添加人物技能以扩展玩法。&lt;/li&gt;
&lt;li&gt;扩展敌对AI使游戏更具趣味性和挑战性。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;优化&#34;&gt;&lt;a href=&#34;#优化&#34; class=&#34;headerlink&#34; title=&#34;优化&#34;&gt;&lt;/a&gt;优化&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;寻找科幻风格的抬头显示器样式和界面样式。&lt;/li&gt;
&lt;li&gt;尝试自行设计关卡和地形，使其具有线性展示的作品。&lt;/li&gt;
&lt;li&gt;整合更多的动画，提供更多的动作可能。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;Issue&#34;&gt;&lt;a href=&#34;#Issue&#34; class=&#34;headerlink&#34; title=&#34;Issue&#34;&gt;&lt;/a&gt;Issue&lt;/h1&gt;&lt;h2 id=&#34;编译Unreal-Engine出现UBT被占用的问题&#34;&gt;&lt;a href=&#34;#编译Unreal-Engine出现UBT被占用的问题&#34; class=&#34;headerlink&#34; title=&#34;编译Unreal Engine出现UBT被占用的问题&#34;&gt;&lt;/a&gt;编译Unreal Engine出现UBT被占用的问题&lt;/h2&gt;&lt;p&gt;Unreal Engine Forum Post: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mb3J1bXMudW5yZWFsZW5naW5lLmNvbS90L2Vycm9yLW1zYjMwMjEtYWNjZXNzLXRvLXRoZS1wYXRoLWVwaWNnYW1lcy1jb3JlLWRsbC1pcy1kZW5pZWQvNjk1NjMyLzEw&#34;&gt;https://forums.unrealengine.com/t/error-msb3021-access-to-the-path-epicgames-core-dll-is-denied/695632/10&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Github Official Commit: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0VwaWNHYW1lcy9VbnJlYWxFbmdpbmUvY29tbWl0LzVhNzYxZDVlNDRjNTM1Y2RkNjA2OWJiOTljNzg2ZjAyYzdhYmUzM2I=&#34;&gt;https://github.com/EpicGames/UnrealEngine/commit/5a761d5e44c535cdd6069bb99c786f02c7abe33b&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;至于为啥我没能第一时间拉到官方的修复，是因为Release分支没有合并最新的修复，更新频率慢。&lt;/p&gt;
&lt;h2 id=&#34;回转运动工作不正常&#34;&gt;&lt;a href=&#34;#回转运动工作不正常&#34; class=&#34;headerlink&#34; title=&#34;回转运动工作不正常&#34;&gt;&lt;/a&gt;回转运动工作不正常&lt;/h2&gt;&lt;p&gt;线性插值参数没填好，全是0，当然不会正常混合。&lt;/p&gt;
&lt;h2 id=&#34;Unreal-Editor打开BP-WarWeapon蓝图出现栈溢出&#34;&gt;&lt;a href=&#34;#Unreal-Editor打开BP-WarWeapon蓝图出现栈溢出&#34; class=&#34;headerlink&#34; title=&#34;Unreal Editor打开BP_WarWeapon蓝图出现栈溢出&#34;&gt;&lt;/a&gt;Unreal Editor打开BP_WarWeapon蓝图出现栈溢出&lt;/h2&gt;&lt;p&gt;从日志查看调用栈发现是Editor一直在重复对UWarWeaponPropertiesComponent和UWarWeaponAmmunitionComponent这两个组件生成子节点造成栈溢出。&lt;/p&gt;
&lt;p&gt;通过排查发现是对UPROPERTY的实现和工作流程理解不足，把AWarWeapon中这两个组件的EditDefaultsOnly改成VisibleDefaultsOnly就解决了问题。&lt;/p&gt;
&lt;p&gt;至于具体是怎么导致栈溢出的，暂时未知。&lt;/p&gt;
&lt;h2 id=&#34;蓝图重复出现相同的节点&#34;&gt;&lt;a href=&#34;#蓝图重复出现相同的节点&#34; class=&#34;headerlink&#34; title=&#34;蓝图重复出现相同的节点&#34;&gt;&lt;/a&gt;蓝图重复出现相同的节点&lt;/h2&gt;&lt;p&gt;BP_WarWeapon蓝图中出现多个同样的Category且完全一直的细节面板，它们的属性相互影响，指向的完全是同一个属性和内存。&lt;/p&gt;
&lt;p&gt;通过排查发现是在多个有相互联系的类中把成员分到相同的Category导致的，比如AWarWeapon的UWarWeaponPropertiesComponent分类War|Weapon Properties，UWeaponPropertiesComponent中全部的成员分类到War|Weapon Properties，Editor在生成细节面板的时候会生成两个War|Weapon Properties，但其实都是指向相同的内存。&lt;/p&gt;
&lt;h2 id=&#34;摄像机人称切换无效果&#34;&gt;&lt;a href=&#34;#摄像机人称切换无效果&#34; class=&#34;headerlink&#34; title=&#34;摄像机人称切换无效果&#34;&gt;&lt;/a&gt;摄像机人称切换无效果&lt;/h2&gt;&lt;p&gt;To be fixed&lt;/p&gt;
</content>
        <updated>2023-08-17T08:48:18.779Z</updated>
    </entry>
    <entry>
        <id>https://asdlkjqpwoei.github.io/2023/06/28/ComputerGraphics/</id>
        <title>Computer Graphics Mathematics</title>
        <link rel="alternate" href="https://asdlkjqpwoei.github.io/2023/06/28/ComputerGraphics/"/>
        <content type="html">&lt;h1 id=&#34;Cartesian-Coordinate-System-笛卡儿坐标系&#34;&gt;&lt;a href=&#34;#Cartesian-Coordinate-System-笛卡儿坐标系&#34; class=&#34;headerlink&#34; title=&#34;Cartesian Coordinate System(笛卡儿坐标系)&#34;&gt;&lt;/a&gt;Cartesian Coordinate System(笛卡儿坐标系)&lt;/h1&gt;&lt;p&gt;使用n个互相垂直的轴描述n维空间，其中的点代表着空间的位置。在高中数学中常用的皆为二维Cartesian坐标系，在游戏行业中，常用的为三维的Cartesian坐标系。&lt;/p&gt;
&lt;p&gt;手掌心朝上，无名指和小指蜷缩，食指和拇指伸直并且食指朝向自己身体的前方，中指垂直于手掌，将拇指指向设为x轴，食指指向设为y轴，中指指向设为z轴，就是高中数学常用的二维Cartesian坐标系平面加上一条垂直该平面的轴直线。&lt;/p&gt;
&lt;p&gt;Game Engine Architecture(游戏引擎架构)书中的右手坐标系图是将食指朝向自己身体上方的图示。&lt;/p&gt;
&lt;h1 id=&#34;矢量运算&#34;&gt;&lt;a href=&#34;#矢量运算&#34; class=&#34;headerlink&#34; title=&#34;矢量运算&#34;&gt;&lt;/a&gt;矢量运算&lt;/h1&gt;&lt;h2 id=&#34;Magnitude-模&#34;&gt;&lt;a href=&#34;#Magnitude-模&#34; class=&#34;headerlink&#34; title=&#34;Magnitude(模)&#34;&gt;&lt;/a&gt;Magnitude(模)&lt;/h2&gt;&lt;p&gt;标量，代表矢量在空间中的长度。一般使用勾股定理计算矢量的模。&lt;/p&gt;

$$|a| = \sqrt[]{{a_x}^2 + {{a_y}^2} + {{a_z}^2}}$$


&lt;h3 id=&#34;Note&#34;&gt;&lt;a href=&#34;#Note&#34; class=&#34;headerlink&#34; title=&#34;Note&#34;&gt;&lt;/a&gt;Note&lt;/h3&gt;&lt;p&gt;计算平方根通常会损耗性能，尽量使用模的平方。&lt;/p&gt;
&lt;h2 id=&#34;Dot-Product-点积&#34;&gt;&lt;a href=&#34;#Dot-Product-点积&#34; class=&#34;headerlink&#34; title=&#34;Dot Product(点积)&#34;&gt;&lt;/a&gt;Dot Product(点积)&lt;/h2&gt;&lt;p&gt;别名：Scalar Product(标量积)或内积(Inner Product)&lt;/p&gt;
&lt;p&gt;$$\vec{a} \cdot \vec{b} &amp;#x3D; {a_x} {b_x} + {a_y} {b_y} + {a_z} {b_z}$$&lt;/p&gt;
&lt;p&gt;点积支持数学基本运算中的交换律和分配律。&lt;/p&gt;
&lt;p&gt;通常用来对比两个游戏对象的位置和朝向：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$$\vec{a} \cdot \vec{b} &amp;#x3D; 1$$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个对象共线，并且朝向完全相同&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$$\vec{a} \cdot \vec{b} &amp;#x3D; -1$$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个对象共线，并且朝向完全相反。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$$\vec{a} \cdot \vec{b} &amp;#x3D; 0$$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个对象的朝向相互垂直。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$$\vec{a} \cdot \vec{b} &amp;gt; 0$$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个对象的朝向大致相同。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$$\vec{a} \cdot \vec{b} &amp;lt; 0$$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个对象的朝向大致相反。&lt;/p&gt;
&lt;h2 id=&#34;Cross-Product-叉积&#34;&gt;&lt;a href=&#34;#Cross-Product-叉积&#34; class=&#34;headerlink&#34; title=&#34;Cross Product(叉积)&#34;&gt;&lt;/a&gt;Cross Product(叉积)&lt;/h2&gt;&lt;p&gt;别名：Vector Product(矢量积)或Outer Product(外积)&lt;/p&gt;
&lt;p&gt;只定义于三维空间。结果是一个新的矢量，垂直于原来的两个参与运算的矢量。&lt;/p&gt;
&lt;p&gt;$$\vec{a} \times \vec{b} &amp;#x3D; ({a_y} {b_z} - {a_z} {b_y})\vec{i} + ({a_z} {b_x} - {a_x} {b_z})\vec{j} + ({a_x} {b_y} - {a_y} {b_x})\vec{k} ]$$&lt;/p&gt;
&lt;h3 id=&#34;叉积的模&#34;&gt;&lt;a href=&#34;#叉积的模&#34; class=&#34;headerlink&#34; title=&#34;叉积的模&#34;&gt;&lt;/a&gt;叉积的模&lt;/h3&gt;&lt;p&gt;$$|\vec{a} \times \vec{b}| &amp;#x3D; |\vec{a}| |\vec{b}| sin\theta$$&lt;/p&gt;
&lt;h1 id=&#34;Linear-Interpolation-LERP-线性插值&#34;&gt;&lt;a href=&#34;#Linear-Interpolation-LERP-线性插值&#34; class=&#34;headerlink&#34; title=&#34;Linear Interpolation, LERP(线性插值)&#34;&gt;&lt;/a&gt;Linear Interpolation, LERP(线性插值)&lt;/h1&gt;&lt;p&gt;用来计算两个已知点的中间点。&lt;/p&gt;
&lt;p&gt;$$LERP(\vec{A}, \vec{B}, \beta) &amp;#x3D; (1 - \beta)\vec{A} + \beta\vec{B} &amp;#x3D; [(1 - \beta)A_x + \beta B_x, (1 - \beta)A_y + \beta B_y, (1 - \beta)A_z + \beta B_z], \beta \in [0,1]$$&lt;/p&gt;
&lt;h1 id=&#34;Matrix-矩阵&#34;&gt;&lt;a href=&#34;#Matrix-矩阵&#34; class=&#34;headerlink&#34; title=&#34;Matrix(矩阵)&#34;&gt;&lt;/a&gt;Matrix(矩阵)&lt;/h1&gt;&lt;p&gt;由$m &amp;#x2F;times n$个标量组成的长方形数组，矩阵可方便的表示线性变化，例如平移、旋转、缩放。&lt;/p&gt;
&lt;p&gt;行(Row)与横，列(Column)与竖、纵。&lt;/p&gt;
&lt;h2 id=&#34;Special-Orthogonal-Matrix-特殊正交矩阵-Isotropic-Matrix-各向同性矩阵-Orthonormal-Matrix-标准正交矩阵&#34;&gt;&lt;a href=&#34;#Special-Orthogonal-Matrix-特殊正交矩阵-Isotropic-Matrix-各向同性矩阵-Orthonormal-Matrix-标准正交矩阵&#34; class=&#34;headerlink&#34; title=&#34;Special Orthogonal Matrix(特殊正交矩阵), Isotropic Matrix(各向同性矩阵), Orthonormal Matrix(标准正交矩阵)&#34;&gt;&lt;/a&gt;Special Orthogonal Matrix(特殊正交矩阵), Isotropic Matrix(各向同性矩阵), Orthonormal Matrix(标准正交矩阵)&lt;/h2&gt;&lt;p&gt;一种所有行矢量及列矢量均为单位矢量的$3 \times 3$矩阵。&lt;/p&gt;
&lt;h2 id=&#34;变换矩阵&#34;&gt;&lt;a href=&#34;#变换矩阵&#34; class=&#34;headerlink&#34; title=&#34;变换矩阵&#34;&gt;&lt;/a&gt;变换矩阵&lt;/h2&gt;&lt;p&gt;一种可表示三维变换的矩阵，包括平移、旋转、缩放。&lt;/p&gt;
&lt;h2 id=&#34;Affine-Matrix-仿射矩阵&#34;&gt;&lt;a href=&#34;#Affine-Matrix-仿射矩阵&#34; class=&#34;headerlink&#34; title=&#34;Affine Matrix(仿射矩阵)&#34;&gt;&lt;/a&gt;Affine Matrix(仿射矩阵)&lt;/h2&gt;&lt;p&gt;能维持直线在变换前后的平行性以及相对的距离比，不一定维持直线在变换前后的绝对长度及角度的$4 \times 4$变换矩阵。&lt;/p&gt;
&lt;p&gt;由平移、旋转、缩放、切变所组合而成的变换都是仿射矩阵。&lt;/p&gt;
&lt;h1 id=&#34;Euler-Angle-欧拉角&#34;&gt;&lt;a href=&#34;#Euler-Angle-欧拉角&#34; class=&#34;headerlink&#34; title=&#34;Euler Angle(欧拉角)&#34;&gt;&lt;/a&gt;Euler Angle(欧拉角)&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Pitch(俯仰角)&lt;/li&gt;
&lt;li&gt;Yaw(偏航角)&lt;/li&gt;
&lt;li&gt;Roll(滚动角)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Gimbal-Lock-万向节死锁&#34;&gt;&lt;a href=&#34;#Gimbal-Lock-万向节死锁&#34; class=&#34;headerlink&#34; title=&#34;Gimbal Lock(万向节死锁)&#34;&gt;&lt;/a&gt;Gimbal Lock(万向节死锁)&lt;/h2&gt;&lt;p&gt;当旋转90度时，三个主轴中的其中一个主轴就会与另一个主轴完全对其，此时三个主轴的状态就叫做万向节死锁，其中两个主轴已经完全对其，无法在单独的围绕其中一个主轴旋转，因为二者已经等效。&lt;/p&gt;
&lt;h1 id=&#34;Quaternion-四元数&#34;&gt;&lt;a href=&#34;#Quaternion-四元数&#34; class=&#34;headerlink&#34; title=&#34;Quaternion(四元数)&#34;&gt;&lt;/a&gt;Quaternion(四元数)&lt;/h1&gt;&lt;h1 id=&#34;Reference&#34;&gt;&lt;a href=&#34;#Reference&#34; class=&#34;headerlink&#34; title=&#34;Reference&#34;&gt;&lt;/a&gt;Reference&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Introduction to Linear Algebra [Fifth Edition] - Gilbert Strang&lt;/li&gt;
&lt;li&gt;Game Engine Architecture [Third Edition] – Jason Gergory, 叶劲峰译&lt;/li&gt;
&lt;/ol&gt;
</content>
        <updated>2023-06-28T08:57:10.586Z</updated>
    </entry>
    <entry>
        <id>https://asdlkjqpwoei.github.io/2023/06/28/GameEngineArchitecture/</id>
        <title>Game Engine Architecture</title>
        <link rel="alternate" href="https://asdlkjqpwoei.github.io/2023/06/28/GameEngineArchitecture/"/>
        <content type="html">&lt;h1 id=&#34;Runtime-Engine-Architecture&#34;&gt;&lt;a href=&#34;#Runtime-Engine-Architecture&#34; class=&#34;headerlink&#34; title=&#34;Runtime Engine Architecture&#34;&gt;&lt;/a&gt;Runtime Engine Architecture&lt;/h1&gt;&lt;h2 id=&#34;Target-Hardware-硬件层&#34;&gt;&lt;a href=&#34;#Target-Hardware-硬件层&#34; class=&#34;headerlink&#34; title=&#34;Target Hardware(硬件层)&#34;&gt;&lt;/a&gt;Target Hardware(硬件层)&lt;/h2&gt;&lt;p&gt;代表执行游戏的计算机系统或者主机，例如PC、XBox、PlayStation。&lt;/p&gt;
&lt;h2 id=&#34;Device-Drivers-驱动程序&#34;&gt;&lt;a href=&#34;#Device-Drivers-驱动程序&#34; class=&#34;headerlink&#34; title=&#34;Device Drivers(驱动程序)&#34;&gt;&lt;/a&gt;Device Drivers(驱动程序)&lt;/h2&gt;&lt;p&gt;负责管理硬件资源，一般由操作系统或者硬件开发商提供。&lt;/p&gt;
&lt;h2 id=&#34;Operating-System-操作系统&#34;&gt;&lt;a href=&#34;#Operating-System-操作系统&#34; class=&#34;headerlink&#34; title=&#34;Operating System(操作系统)&#34;&gt;&lt;/a&gt;Operating System(操作系统)&lt;/h2&gt;&lt;h2 id=&#34;Third-Party-SDKs-and-Middleware-第三方软件开发包和中间件&#34;&gt;&lt;a href=&#34;#Third-Party-SDKs-and-Middleware-第三方软件开发包和中间件&#34; class=&#34;headerlink&#34; title=&#34;Third-Party SDKs and Middleware(第三方软件开发包和中间件)&#34;&gt;&lt;/a&gt;Third-Party SDKs and Middleware(第三方软件开发包和中间件)&lt;/h2&gt;&lt;p&gt;引擎一般都会借用一部分第三方组件，例如DirectX、OpenGL等图形库，又或者Boost等数据结构及算法库，还有Havok、PhysX等负责物理的开发库。&lt;/p&gt;
&lt;h2 id=&#34;Platform-Independence-Layer-平台独立层&#34;&gt;&lt;a href=&#34;#Platform-Independence-Layer-平台独立层&#34; class=&#34;headerlink&#34; title=&#34;Platform Independence Layer(平台独立层)&#34;&gt;&lt;/a&gt;Platform Independence Layer(平台独立层)&lt;/h2&gt;&lt;p&gt;将平台有关的部分与硬件底层分离，通常会有平台检测，包装平台相关的开发库和基础API，保证接口在不同平台的行为一致。&lt;/p&gt;
&lt;h2 id=&#34;Core-System-核心系统&#34;&gt;&lt;a href=&#34;#Core-System-核心系统&#34; class=&#34;headerlink&#34; title=&#34;Core System(核心系统)&#34;&gt;&lt;/a&gt;Core System(核心系统)&lt;/h2&gt;&lt;p&gt;主要包含开发时需要用到的使用软件和功能，例如断言、内存分配、数学库和自定义的数据结构及算法等。&lt;/p&gt;
&lt;h2 id=&#34;Resource-Manager-资源管理器&#34;&gt;&lt;a href=&#34;#Resource-Manager-资源管理器&#34; class=&#34;headerlink&#34; title=&#34;Resource Manager(资源管理器)&#34;&gt;&lt;/a&gt;Resource Manager(资源管理器)&lt;/h2&gt;&lt;p&gt;负责访问和管理任何类型的游戏资产和其他输入数据。&lt;/p&gt;
&lt;h2 id=&#34;Redering-Engine-渲染引擎&#34;&gt;&lt;a href=&#34;#Redering-Engine-渲染引擎&#34; class=&#34;headerlink&#34; title=&#34;Redering Engine(渲染引擎)&#34;&gt;&lt;/a&gt;Redering Engine(渲染引擎)&lt;/h2&gt;&lt;p&gt;渲染引擎没有特别的架构，但是一般通用来说都采用分层架构&lt;/p&gt;
&lt;h3 id=&#34;Low-Level-Renderer-低阶渲染器&#34;&gt;&lt;a href=&#34;#Low-Level-Renderer-低阶渲染器&#34; class=&#34;headerlink&#34; title=&#34;Low-Level Renderer(低阶渲染器)&#34;&gt;&lt;/a&gt;Low-Level Renderer(低阶渲染器)&lt;/h3&gt;&lt;p&gt;包含全部原始的渲染功能，着重渲染丰富的几何图元。&lt;/p&gt;
&lt;h3 id=&#34;Scene-Graph-x2F-Culling-Optimization-剔除优化&#34;&gt;&lt;a href=&#34;#Scene-Graph-x2F-Culling-Optimization-剔除优化&#34; class=&#34;headerlink&#34; title=&#34;Scene Graph&amp;#x2F;Culling Optimization(剔除优化)&#34;&gt;&lt;/a&gt;Scene Graph&amp;#x2F;Culling Optimization(剔除优化)&lt;/h3&gt;&lt;p&gt;在低阶渲染器提交的几何图形不考虑其是否可见，在该层将不可见的图形剔除。&lt;/p&gt;
&lt;h3 id=&#34;Visual-Effect-VFX-视觉效果&#34;&gt;&lt;a href=&#34;#Visual-Effect-VFX-视觉效果&#34; class=&#34;headerlink&#34; title=&#34;Visual Effect, VFX(视觉效果)&#34;&gt;&lt;/a&gt;Visual Effect, VFX(视觉效果)&lt;/h3&gt;&lt;p&gt;一般有粒子系统、贴花系统、光照贴图及环境贴图、动态阴影、全屏后期处理效果等。&lt;/p&gt;
&lt;h3 id=&#34;Front-End-前端&#34;&gt;&lt;a href=&#34;#Front-End-前端&#34; class=&#34;headerlink&#34; title=&#34;Front End(前端)&#34;&gt;&lt;/a&gt;Front End(前端)&lt;/h3&gt;&lt;p&gt;一般就是指二维的界面了，例如抬头显示器、菜单等等。&lt;/p&gt;
&lt;h2 id=&#34;Profiling-and-Debugging-Tools-性能剖析及调试工具&#34;&gt;&lt;a href=&#34;#Profiling-and-Debugging-Tools-性能剖析及调试工具&#34; class=&#34;headerlink&#34; title=&#34;Profiling and Debugging Tools(性能剖析及调试工具)&#34;&gt;&lt;/a&gt;Profiling and Debugging Tools(性能剖析及调试工具)&lt;/h2&gt;&lt;p&gt;进行性能剖析以进行性能优化，否则市面上大多数硬件都无法负担游戏带来的负载从而极大地影响游戏体验。&lt;/p&gt;
&lt;h2 id=&#34;Collision-and-Physics-物理，刚体动力学模拟&#34;&gt;&lt;a href=&#34;#Collision-and-Physics-物理，刚体动力学模拟&#34; class=&#34;headerlink&#34; title=&#34;Collision and Physics(物理，刚体动力学模拟)&#34;&gt;&lt;/a&gt;Collision and Physics(物理，刚体动力学模拟)&lt;/h2&gt;&lt;p&gt;提供拟真的物理模拟&lt;/p&gt;
&lt;h2 id=&#34;Animation-动画&#34;&gt;&lt;a href=&#34;#Animation-动画&#34; class=&#34;headerlink&#34; title=&#34;Animation(动画)&#34;&gt;&lt;/a&gt;Animation(动画)&lt;/h2&gt;&lt;p&gt;负责提供动画相关的功能。&lt;/p&gt;
&lt;h2 id=&#34;Human-Interface-Devices-人体学接口设备&#34;&gt;&lt;a href=&#34;#Human-Interface-Devices-人体学接口设备&#34; class=&#34;headerlink&#34; title=&#34;Human Interface Devices(人体学接口设备)&#34;&gt;&lt;/a&gt;Human Interface Devices(人体学接口设备)&lt;/h2&gt;&lt;p&gt;负责处理玩家输入，输入可以有多种设备提供，例如：键盘和鼠标、游戏手柄、方向盘、遥控器等。&lt;/p&gt;
&lt;h2 id=&#34;Audio-音频&#34;&gt;&lt;a href=&#34;#Audio-音频&#34; class=&#34;headerlink&#34; title=&#34;Audio(音频)&#34;&gt;&lt;/a&gt;Audio(音频)&lt;/h2&gt;&lt;p&gt;提供处理及优化音频的功能，以实现更好的声乐效果。&lt;/p&gt;
&lt;h2 id=&#34;Only-Multiplayer-x2F-Networking-在线多人-x2F-网络&#34;&gt;&lt;a href=&#34;#Only-Multiplayer-x2F-Networking-在线多人-x2F-网络&#34; class=&#34;headerlink&#34; title=&#34;Only Multiplayer&amp;#x2F;Networking(在线多人&amp;#x2F;网络)&#34;&gt;&lt;/a&gt;Only Multiplayer&amp;#x2F;Networking(在线多人&amp;#x2F;网络)&lt;/h2&gt;&lt;p&gt;提供多人游戏的功能&lt;/p&gt;
&lt;h2 id=&#34;Gameplay-Foundation-Systems-游戏性基础系统&#34;&gt;&lt;a href=&#34;#Gameplay-Foundation-Systems-游戏性基础系统&#34; class=&#34;headerlink&#34; title=&#34;Gameplay Foundation Systems(游戏性基础系统)&#34;&gt;&lt;/a&gt;Gameplay Foundation Systems(游戏性基础系统)&lt;/h2&gt;&lt;p&gt;游戏性(Gameplay)：游戏内进行的活动、支配游戏虚拟世界的规则、玩家角色的能力、其他角色和对象的能力、玩家的长短目标。&lt;/p&gt;
&lt;h2 id=&#34;Game-Specific-Subsystems-专用子系统&#34;&gt;&lt;a href=&#34;#Game-Specific-Subsystems-专用子系统&#34; class=&#34;headerlink&#34; title=&#34;Game-Specific Subsystems(专用子系统)&#34;&gt;&lt;/a&gt;Game-Specific Subsystems(专用子系统)&lt;/h2&gt;&lt;p&gt;针对游戏性进行特制开发的各类子系统，如专用渲染和AI。&lt;/p&gt;
&lt;h1 id=&#34;Reference&#34;&gt;&lt;a href=&#34;#Reference&#34; class=&#34;headerlink&#34; title=&#34;Reference&#34;&gt;&lt;/a&gt;Reference&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Game Engine Architecture [Third Edition] – Jason Gergory, 叶劲峰译&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2023-06-28T08:53:45.935Z</updated>
    </entry>
    <entry>
        <id>https://asdlkjqpwoei.github.io/2023/06/21/ComputerNetwork/</id>
        <title>Computer Network Basis</title>
        <link rel="alternate" href="https://asdlkjqpwoei.github.io/2023/06/21/ComputerNetwork/"/>
        <content type="html">&lt;h1 id=&#34;Open-System-Interconnection-Reference-Model-开放系统互连参考模型&#34;&gt;&lt;a href=&#34;#Open-System-Interconnection-Reference-Model-开放系统互连参考模型&#34; class=&#34;headerlink&#34; title=&#34;Open System Interconnection Reference Model(开放系统互连参考模型)&#34;&gt;&lt;/a&gt;Open System Interconnection Reference Model(开放系统互连参考模型)&lt;/h1&gt;&lt;p&gt;自顶向下&lt;/p&gt;
&lt;h2 id=&#34;Application-Layer-应用层&#34;&gt;&lt;a href=&#34;#Application-Layer-应用层&#34; class=&#34;headerlink&#34; title=&#34;Application Layer(应用层)&#34;&gt;&lt;/a&gt;Application Layer(应用层)&lt;/h2&gt;&lt;p&gt;包含用户需要的各种协议，比如HTTP。&lt;/p&gt;
&lt;h2 id=&#34;Presentation-Layer-表示层&#34;&gt;&lt;a href=&#34;#Presentation-Layer-表示层&#34; class=&#34;headerlink&#34; title=&#34;Presentation Layer(表示层)&#34;&gt;&lt;/a&gt;Presentation Layer(表示层)&lt;/h2&gt;&lt;p&gt;负责统一和管理数据的语法和语义。&lt;/p&gt;
&lt;h2 id=&#34;Session-Layer-会话层&#34;&gt;&lt;a href=&#34;#Session-Layer-会话层&#34; class=&#34;headerlink&#34; title=&#34;Session Layer(会话层)&#34;&gt;&lt;/a&gt;Session Layer(会话层)&lt;/h2&gt;&lt;p&gt;允许不同机器上的用户建立会话&lt;/p&gt;
&lt;h2 id=&#34;Transport-Layer-传输层&#34;&gt;&lt;a href=&#34;#Transport-Layer-传输层&#34; class=&#34;headerlink&#34; title=&#34;Transport Layer(传输层)&#34;&gt;&lt;/a&gt;Transport Layer(传输层)&lt;/h2&gt;&lt;p&gt;发送时，接收会话层的数据并进行处理，然后传递给网络层，并且确保数据能够正确的传输至另一端，&lt;/p&gt;
&lt;h2 id=&#34;Network-Layer-网络层&#34;&gt;&lt;a href=&#34;#Network-Layer-网络层&#34; class=&#34;headerlink&#34; title=&#34;Network Layer(网络层)&#34;&gt;&lt;/a&gt;Network Layer(网络层)&lt;/h2&gt;&lt;p&gt;控制子网的运行，承担拥塞控制的大部分任务。&lt;/p&gt;
&lt;h2 id=&#34;Data-Line-Layer-数据链路层&#34;&gt;&lt;a href=&#34;#Data-Line-Layer-数据链路层&#34; class=&#34;headerlink&#34; title=&#34;Data Line Layer(数据链路层)&#34;&gt;&lt;/a&gt;Data Line Layer(数据链路层)&lt;/h2&gt;&lt;p&gt;负责将原始的物理传输设施转换成一条没有传输错误的软件线路，也就是需要处理传输错误，承担一部分流量控制的任务。&lt;/p&gt;
&lt;h2 id=&#34;Physical-Layer-物理层&#34;&gt;&lt;a href=&#34;#Physical-Layer-物理层&#34; class=&#34;headerlink&#34; title=&#34;Physical Layer(物理层)&#34;&gt;&lt;/a&gt;Physical Layer(物理层)&lt;/h2&gt;&lt;p&gt;负责在一条物理通信信道上传输原始二进制数据流。&lt;/p&gt;
&lt;h1 id=&#34;TCP-x2F-IP-Reference-Model-TCP-x2F-IP参考模型&#34;&gt;&lt;a href=&#34;#TCP-x2F-IP-Reference-Model-TCP-x2F-IP参考模型&#34; class=&#34;headerlink&#34; title=&#34;TCP&amp;#x2F;IP Reference Model(TCP&amp;#x2F;IP参考模型)&#34;&gt;&lt;/a&gt;TCP&amp;#x2F;IP Reference Model(TCP&amp;#x2F;IP参考模型)&lt;/h1&gt;&lt;p&gt;自顶向下&lt;/p&gt;
&lt;h2 id=&#34;Transport-Layer-传输层-1&#34;&gt;&lt;a href=&#34;#Transport-Layer-传输层-1&#34; class=&#34;headerlink&#34; title=&#34;Transport Layer(传输层)&#34;&gt;&lt;/a&gt;Transport Layer(传输层)&lt;/h2&gt;&lt;p&gt;对应开放系统互连模型的传输层&lt;/p&gt;
&lt;h2 id=&#34;Internet-Layer-互联网层&#34;&gt;&lt;a href=&#34;#Internet-Layer-互联网层&#34; class=&#34;headerlink&#34; title=&#34;Internet Layer(互联网层)&#34;&gt;&lt;/a&gt;Internet Layer(互联网层)&lt;/h2&gt;&lt;p&gt;对应开放系统互联模型的网络层&lt;/p&gt;
&lt;h2 id=&#34;Link-Layer-链路层&#34;&gt;&lt;a href=&#34;#Link-Layer-链路层&#34; class=&#34;headerlink&#34; title=&#34;Link Layer(链路层)&#34;&gt;&lt;/a&gt;Link Layer(链路层)&lt;/h2&gt;&lt;p&gt;大致对应开放系统互联模型的链路层，但是还包含一部分物理层。&lt;/p&gt;
&lt;h1 id=&#34;传输控制协议-Transport-Control-Protocol-TCP&#34;&gt;&lt;a href=&#34;#传输控制协议-Transport-Control-Protocol-TCP&#34; class=&#34;headerlink&#34; title=&#34;传输控制协议(Transport Control Protocol, TCP)&#34;&gt;&lt;/a&gt;传输控制协议(Transport Control Protocol, TCP)&lt;/h1&gt;&lt;p&gt;为了在不可靠的互联网络上提供可靠的端到端字节流而专门设计的一个传输协议。&lt;/p&gt;
&lt;h2 id=&#34;初次建立通信连接的的过程&#34;&gt;&lt;a href=&#34;#初次建立通信连接的的过程&#34; class=&#34;headerlink&#34; title=&#34;初次建立通信连接的的过程&#34;&gt;&lt;/a&gt;初次建立通信连接的的过程&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;客户端向服务器发送请求报文段，SYN标志位为1，并且包含一个随机的起始序号seq。&lt;/li&gt;
&lt;li&gt;服务器接收到请求报文段，并同意建立连接以后，就回复客户端一个确认报文段，SYN标志位和ACK标志位都为1，还有个确认号字段为客户端起始序号+1(seq+1)，并且包含一个随机起始序号。&lt;/li&gt;
&lt;li&gt;客户端收到确认报文段以后，向服务器发出确认报文，并且给该连接分配缓存和变量。ACK标志位为1，起始序号字段为客户端起始序号+1，服务端确认号ACK为服务端起始序号+1。&lt;/li&gt;
&lt;li&gt;建立连接完成，开始传输。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;断开通信连接的过程&#34;&gt;&lt;a href=&#34;#断开通信连接的过程&#34; class=&#34;headerlink&#34; title=&#34;断开通信连接的过程&#34;&gt;&lt;/a&gt;断开通信连接的过程&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;客户端关闭连接时，向服务器发送释放连接报文段，请求释放连接。&lt;/li&gt;
&lt;li&gt;服务器收到该报文段后，回复确认报文段。（为了回复客户端我收到请求了，但此时并未开始释放，为的是传输剩余的数据）&lt;/li&gt;
&lt;li&gt;服务器数据传输完毕时，向客户端发出请求释放连接报文段。&lt;/li&gt;
&lt;li&gt;客户端收到释放报文段后，回复一个确认报文段。服务端接收后会释放连接，客户端在一段时间后才会释放。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;Reference&#34;&gt;&lt;a href=&#34;#Reference&#34; class=&#34;headerlink&#34; title=&#34;Reference&#34;&gt;&lt;/a&gt;Reference&lt;/h1&gt;&lt;p&gt;Computer Networks - Andrew S.Tanenbaum, David J.Wetherall, 严伟、潘爱民译&lt;/p&gt;
</content>
        <updated>2023-06-21T09:32:43.832Z</updated>
    </entry>
    <entry>
        <id>https://asdlkjqpwoei.github.io/2023/06/21/StandardTemplateLibrary/</id>
        <title>Standard Template Library</title>
        <link rel="alternate" href="https://asdlkjqpwoei.github.io/2023/06/21/StandardTemplateLibrary/"/>
        <content type="html">&lt;h1 id=&#34;标准模板库容器&#34;&gt;&lt;a href=&#34;#标准模板库容器&#34; class=&#34;headerlink&#34; title=&#34;标准模板库容器&#34;&gt;&lt;/a&gt;标准模板库容器&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;容器&lt;/th&gt;
&lt;th&gt;数据结构&lt;/th&gt;
&lt;th&gt;时间复杂度&lt;/th&gt;
&lt;th&gt;元素是否有序&lt;/th&gt;
&lt;th&gt;元素是否可重复&lt;/th&gt;
&lt;th&gt;注意事项&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Array&lt;/td&gt;
&lt;td&gt;数组&lt;/td&gt;
&lt;td&gt;$O(1)$&lt;/td&gt;
&lt;td&gt;无序&lt;/td&gt;
&lt;td&gt;可重复&lt;/td&gt;
&lt;td&gt;支持任意访问&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vector&lt;/td&gt;
&lt;td&gt;数组&lt;/td&gt;
&lt;td&gt;在尾部操作时$O(1)$，在头部操作时$O(n)$&lt;/td&gt;
&lt;td&gt;无序&lt;/td&gt;
&lt;td&gt;可重复&lt;/td&gt;
&lt;td&gt;支持任意访问&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Deque&lt;/td&gt;
&lt;td&gt;双端队列&lt;/td&gt;
&lt;td&gt;$O(1)$&lt;/td&gt;
&lt;td&gt;无序&lt;/td&gt;
&lt;td&gt;可重复&lt;/td&gt;
&lt;td&gt;支持任意访问&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forward_list&lt;/td&gt;
&lt;td&gt;单向链表&lt;/td&gt;
&lt;td&gt;$O(1)$&lt;/td&gt;
&lt;td&gt;无序&lt;/td&gt;
&lt;td&gt;可重复&lt;/td&gt;
&lt;td&gt;不支持任意访问&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;双向链表&lt;/td&gt;
&lt;td&gt;$O(1)$&lt;/td&gt;
&lt;td&gt;无序&lt;/td&gt;
&lt;td&gt;可重复&lt;/td&gt;
&lt;td&gt;不支持任意访问&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Stack&lt;/td&gt;
&lt;td&gt;基于链表，deque&amp;#x2F;lsit&lt;/td&gt;
&lt;td&gt;$O(1)$&lt;/td&gt;
&lt;td&gt;无序&lt;/td&gt;
&lt;td&gt;可重复&lt;/td&gt;
&lt;td&gt;deque&amp;#x2F;list封闭头端开口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Queue&lt;/td&gt;
&lt;td&gt;基于链表，deque&amp;#x2F;list&lt;/td&gt;
&lt;td&gt;$O(1)$&lt;/td&gt;
&lt;td&gt;无序&lt;/td&gt;
&lt;td&gt;可重复&lt;/td&gt;
&lt;td&gt;deque&amp;#x2F;list封闭头端开口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;priority_queue&lt;/td&gt;
&lt;td&gt;vector+max_heap&lt;/td&gt;
&lt;td&gt;$O(log_2n)$&lt;/td&gt;
&lt;td&gt;有序&lt;/td&gt;
&lt;td&gt;可重复&lt;/td&gt;
&lt;td&gt;使用堆处理和规则的vector容器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Set&lt;/td&gt;
&lt;td&gt;红黑树&lt;/td&gt;
&lt;td&gt;$O(log_2n)$&lt;/td&gt;
&lt;td&gt;有序&lt;/td&gt;
&lt;td&gt;不可重复&lt;/td&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Multiset&lt;/td&gt;
&lt;td&gt;红黑树&lt;/td&gt;
&lt;td&gt;$O(log_2n)$&lt;/td&gt;
&lt;td&gt;有序&lt;/td&gt;
&lt;td&gt;可重复&lt;/td&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Map&lt;/td&gt;
&lt;td&gt;红黑树&lt;/td&gt;
&lt;td&gt;$O(log_2n)$&lt;/td&gt;
&lt;td&gt;有序&lt;/td&gt;
&lt;td&gt;不可重复&lt;/td&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Multimap&lt;/td&gt;
&lt;td&gt;红黑树&lt;/td&gt;
&lt;td&gt;$O(log_2n)$&lt;/td&gt;
&lt;td&gt;有序&lt;/td&gt;
&lt;td&gt;可重复&lt;/td&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;unordered_set&lt;/td&gt;
&lt;td&gt;哈希表&lt;/td&gt;
&lt;td&gt;$O(1)-O(n)$&lt;/td&gt;
&lt;td&gt;无序&lt;/td&gt;
&lt;td&gt;不可重复&lt;/td&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;unordered_multiset&lt;/td&gt;
&lt;td&gt;哈希表&lt;/td&gt;
&lt;td&gt;$O(1)-O(n)$&lt;/td&gt;
&lt;td&gt;无序&lt;/td&gt;
&lt;td&gt;可重复&lt;/td&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;unordered_map&lt;/td&gt;
&lt;td&gt;哈希表&lt;/td&gt;
&lt;td&gt;$O(1)-O(n)$&lt;/td&gt;
&lt;td&gt;无序&lt;/td&gt;
&lt;td&gt;不可重复&lt;/td&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;unordered_multimap&lt;/td&gt;
&lt;td&gt;哈希表&lt;/td&gt;
&lt;td&gt;$O(1)-O(n)$&lt;/td&gt;
&lt;td&gt;无序&lt;/td&gt;
&lt;td&gt;可重复&lt;/td&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</content>
        <updated>2023-06-21T09:18:46.352Z</updated>
    </entry>
    <entry>
        <id>https://asdlkjqpwoei.github.io/2023/06/21/Cpp17/</id>
        <title>Cpp 17</title>
        <link rel="alternate" href="https://asdlkjqpwoei.github.io/2023/06/21/Cpp17/"/>
        <content type="html">&lt;h1 id=&#34;命名空间嵌套&#34;&gt;&lt;a href=&#34;#命名空间嵌套&#34; class=&#34;headerlink&#34; title=&#34;命名空间嵌套&#34;&gt;&lt;/a&gt;命名空间嵌套&lt;/h1&gt;&lt;h1 id=&#34;std-optional&#34;&gt;&lt;a href=&#34;#std-optional&#34; class=&#34;headerlink&#34; title=&#34;std::optional&#34;&gt;&lt;/a&gt;std::optional&lt;/h1&gt;&lt;p&gt;主要是为了可以让函数可返回多个值。&lt;/p&gt;
&lt;h1 id=&#34;Lambda表达式&#34;&gt;&lt;a href=&#34;#Lambda表达式&#34; class=&#34;headerlink&#34; title=&#34;Lambda表达式&#34;&gt;&lt;/a&gt;Lambda表达式&lt;/h1&gt;&lt;p&gt;可捕获对象的副本，而非对象的引用。&lt;/p&gt;
&lt;h1 id=&#34;智能指针&#34;&gt;&lt;a href=&#34;#智能指针&#34; class=&#34;headerlink&#34; title=&#34;智能指针&#34;&gt;&lt;/a&gt;智能指针&lt;/h1&gt;&lt;p&gt;移除std::auto_ptr。&lt;/p&gt;
</content>
        <updated>2023-06-21T09:00:15.298Z</updated>
    </entry>
    <entry>
        <id>https://asdlkjqpwoei.github.io/2023/06/21/Cpp11/</id>
        <title>Cpp 11</title>
        <link rel="alternate" href="https://asdlkjqpwoei.github.io/2023/06/21/Cpp11/"/>
        <content type="html">&lt;h1 id=&#34;智能指针&#34;&gt;&lt;a href=&#34;#智能指针&#34; class=&#34;headerlink&#34; title=&#34;智能指针&#34;&gt;&lt;/a&gt;智能指针&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;unique_ptr：独占一个对象和资源，一旦被销毁或者置空，相关资源都会被销毁。拥有另一个对象后，之前的对象和相关资源都会被销毁。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;weak_ptr：允许共享但不允许拥有一个对象，一旦最后一个拥有该对象的智能指针失去所有权，任何一个weak_ptr都自动为空。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;shared_ptr：允许共享拥有同一个对象，最后一个拥有该对象shared_ptr会销毁该对象，并清理相关资源。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;constexpr&#34;&gt;&lt;a href=&#34;#constexpr&#34; class=&#34;headerlink&#34; title=&#34;constexpr&#34;&gt;&lt;/a&gt;constexpr&lt;/h1&gt;&lt;p&gt;const未指明该常量是编译器常量还是运行期常量，constexpr告知变量是编译期常量。&lt;/p&gt;
&lt;h1 id=&#34;可变模板参数&#34;&gt;&lt;a href=&#34;#可变模板参数&#34; class=&#34;headerlink&#34; title=&#34;可变模板参数&#34;&gt;&lt;/a&gt;可变模板参数&lt;/h1&gt;&lt;p&gt;允许任意多个、任意类别的模板参数，同时在定义时无需固定参数个数。&lt;/p&gt;
&lt;h1 id=&#34;右值引用&#34;&gt;&lt;a href=&#34;#右值引用&#34; class=&#34;headerlink&#34; title=&#34;右值引用&#34;&gt;&lt;/a&gt;右值引用&lt;/h1&gt;&lt;p&gt;右值可以是字面常量、表达式、函数返回值，用&amp;amp;&amp;amp;表示，使右值可以出现在赋值语句的左边，可实现移动语义。&lt;/p&gt;
&lt;h1 id=&#34;移动语义&#34;&gt;&lt;a href=&#34;#移动语义&#34; class=&#34;headerlink&#34; title=&#34;移动语义&#34;&gt;&lt;/a&gt;移动语义&lt;/h1&gt;&lt;p&gt;主要是为了降低内存的使用，参数传递的过程中不出现新的无用副本。&lt;/p&gt;
&lt;h1 id=&#34;完美转发&#34;&gt;&lt;a href=&#34;#完美转发&#34; class=&#34;headerlink&#34; title=&#34;完美转发&#34;&gt;&lt;/a&gt;完美转发&lt;/h1&gt;&lt;p&gt;为了解决参数传递时，参数可能已经不是原来内存的问题。&lt;/p&gt;
&lt;p&gt;std::forward&amp;lt;&amp;gt;&lt;/p&gt;
&lt;h1 id=&#34;元组&#34;&gt;&lt;a href=&#34;#元组&#34; class=&#34;headerlink&#34; title=&#34;元组&#34;&gt;&lt;/a&gt;元组&lt;/h1&gt;&lt;p&gt;std::tuple&lt;/p&gt;
&lt;h1 id=&#34;Lambda表达式&#34;&gt;&lt;a href=&#34;#Lambda表达式&#34; class=&#34;headerlink&#34; title=&#34;Lambda表达式&#34;&gt;&lt;/a&gt;Lambda表达式&lt;/h1&gt;&lt;p&gt;开始支持Lambda表达式&lt;/p&gt;
&lt;h1 id=&#34;using定义别名&#34;&gt;&lt;a href=&#34;#using定义别名&#34; class=&#34;headerlink&#34; title=&#34;using定义别名&#34;&gt;&lt;/a&gt;using定义别名&lt;/h1&gt;&lt;p&gt;typedef无法重定义模板中的一些语法，using定义别名因此而生。&lt;/p&gt;
</content>
        <updated>2023-06-21T08:58:37.322Z</updated>
    </entry>
    <entry>
        <id>https://asdlkjqpwoei.github.io/2023/06/21/DataStructrue/</id>
        <title>Data Structrue</title>
        <link rel="alternate" href="https://asdlkjqpwoei.github.io/2023/06/21/DataStructrue/"/>
        <content type="html">&lt;h1 id=&#34;Linked-List-链表&#34;&gt;&lt;a href=&#34;#Linked-List-链表&#34; class=&#34;headerlink&#34; title=&#34;Linked List(链表)&#34;&gt;&lt;/a&gt;Linked List(链表)&lt;/h1&gt;&lt;p&gt;线性结构，与数组的区别是可以不连续存储，链表变换时不必移动一整块内存。元素的顺序一般由链表对象中的指针决定。&lt;/p&gt;
&lt;p&gt;搜索链表在最坏情况下的运行时间为$\theta(n)$。&lt;/p&gt;
&lt;p&gt;插入一个元素进入链表的运行时间一般为$\theta(1)$&lt;/p&gt;
&lt;p&gt;删除一个链表中的元素的运行时间一般为$\theta(1)$&lt;/p&gt;
&lt;h2 id=&#34;Singly-Linked-List-单向链表&#34;&gt;&lt;a href=&#34;#Singly-Linked-List-单向链表&#34; class=&#34;headerlink&#34; title=&#34;Singly Linked List(单向链表)&#34;&gt;&lt;/a&gt;Singly Linked List(单向链表)&lt;/h2&gt;&lt;p&gt;链表中元素的指针仅包含指向下一个元素的指针。&lt;/p&gt;
&lt;h2 id=&#34;Doubly-Linked-List-双向链表&#34;&gt;&lt;a href=&#34;#Doubly-Linked-List-双向链表&#34; class=&#34;headerlink&#34; title=&#34;Doubly Linked List(双向链表)&#34;&gt;&lt;/a&gt;Doubly Linked List(双向链表)&lt;/h2&gt;&lt;p&gt;链表中元素的指针包含指向下一个元素的指针和上一个元素的指针&lt;/p&gt;
&lt;h2 id=&#34;Circular-Linked-List-双向循环链表&#34;&gt;&lt;a href=&#34;#Circular-Linked-List-双向循环链表&#34; class=&#34;headerlink&#34; title=&#34;Circular Linked List(双向循环链表)&#34;&gt;&lt;/a&gt;Circular Linked List(双向循环链表)&lt;/h2&gt;&lt;p&gt;包含双向链表的特性，但是链表的头元素会包含一个指向尾元素的指针，尾元素的指针包含一个指向头元素的指针。&lt;/p&gt;
&lt;h1 id=&#34;Stack-栈&#34;&gt;&lt;a href=&#34;#Stack-栈&#34; class=&#34;headerlink&#34; title=&#34;Stack(栈)&#34;&gt;&lt;/a&gt;Stack(栈)&lt;/h1&gt;&lt;p&gt;线性结构，但是后进先出(Last-In First-Out, LIFO)的线性结构，仅在结构的一端进行动作。&lt;/p&gt;
&lt;p&gt;栈的插入操作被称为压入(Push)，而删除操作被称为弹出(Pop)，且一般在实际的实现中不要求参数。&lt;/p&gt;
&lt;p&gt;试图对空栈执行弹出成为栈下溢(Underflow)，对已满的栈执行压入称为栈上溢(Overflow)。&lt;/p&gt;
&lt;p&gt;查询、压入、弹出的运行时间均为$\theta(1)$&lt;/p&gt;
&lt;h1 id=&#34;Queue-队列&#34;&gt;&lt;a href=&#34;#Queue-队列&#34; class=&#34;headerlink&#34; title=&#34;Queue(队列)&#34;&gt;&lt;/a&gt;Queue(队列)&lt;/h1&gt;&lt;p&gt;线性结构，但是先进先出(First-In First-Out, FIFO)的线性结构，在结构的两端进行动作。&lt;/p&gt;
&lt;p&gt;队列的插入操作被称为入队(Enqueue)，而删除操作被称为出队(Dequeue)，且一般在实际的实现中不要求参数。&lt;/p&gt;
&lt;p&gt;队列下溢是指试图对空队列执行出队，队列上溢是指试图对已满队列执行入队。&lt;/p&gt;
&lt;p&gt;入队、出队的运行时间均为$\theta(1)$。&lt;/p&gt;
&lt;h1 id=&#34;Hash-哈希表，散列表&#34;&gt;&lt;a href=&#34;#Hash-哈希表，散列表&#34; class=&#34;headerlink&#34; title=&#34;Hash(哈希表，散列表)&#34;&gt;&lt;/a&gt;Hash(哈希表，散列表)&lt;/h1&gt;&lt;h2 id=&#34;Separate-Chaining-分离链接&#34;&gt;&lt;a href=&#34;#Separate-Chaining-分离链接&#34; class=&#34;headerlink&#34; title=&#34;Separate Chaining(分离链接)&#34;&gt;&lt;/a&gt;Separate Chaining(分离链接)&lt;/h2&gt;&lt;h2 id=&#34;Open-Addressing-开放定址&#34;&gt;&lt;a href=&#34;#Open-Addressing-开放定址&#34; class=&#34;headerlink&#34; title=&#34;Open Addressing(开放定址)&#34;&gt;&lt;/a&gt;Open Addressing(开放定址)&lt;/h2&gt;&lt;h1 id=&#34;Binary-Tree-二叉搜索树&#34;&gt;&lt;a href=&#34;#Binary-Tree-二叉搜索树&#34; class=&#34;headerlink&#34; title=&#34;Binary Tree(二叉搜索树)&#34;&gt;&lt;/a&gt;Binary Tree(二叉搜索树)&lt;/h1&gt;&lt;h1 id=&#34;Splay-Tree-伸展树&#34;&gt;&lt;a href=&#34;#Splay-Tree-伸展树&#34; class=&#34;headerlink&#34; title=&#34;Splay Tree(伸展树)&#34;&gt;&lt;/a&gt;Splay Tree(伸展树)&lt;/h1&gt;&lt;h1 id=&#34;B-Tree-B树&#34;&gt;&lt;a href=&#34;#B-Tree-B树&#34; class=&#34;headerlink&#34; title=&#34;B-Tree(B树)&#34;&gt;&lt;/a&gt;B-Tree(B树)&lt;/h1&gt;&lt;h1 id=&#34;Self-Balancing-Binary-Tree-自平衡二叉树&#34;&gt;&lt;a href=&#34;#Self-Balancing-Binary-Tree-自平衡二叉树&#34; class=&#34;headerlink&#34; title=&#34;Self-Balancing Binary Tree(自平衡二叉树)&#34;&gt;&lt;/a&gt;Self-Balancing Binary Tree(自平衡二叉树)&lt;/h1&gt;&lt;h1 id=&#34;Red-Black-Tree-红黑树&#34;&gt;&lt;a href=&#34;#Red-Black-Tree-红黑树&#34; class=&#34;headerlink&#34; title=&#34;Red Black Tree(红黑树)&#34;&gt;&lt;/a&gt;Red Black Tree(红黑树)&lt;/h1&gt;&lt;h1 id=&#34;Reference&#34;&gt;&lt;a href=&#34;#Reference&#34; class=&#34;headerlink&#34; title=&#34;Reference&#34;&gt;&lt;/a&gt;Reference&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Data Structures and Algorithm Analysis in C [Second Edition] - Mark Allen Weiss, 冯舜玺译&lt;/li&gt;
&lt;li&gt;Introduction to Algorithm [Third Edition] - Thomas H.Cormen, Charles E.Leiserson, Ronald L. Rivest, Clifford Stein, 殷建平、徐云、王刚、刘晓光、苏明、邹恒明、王宏志译&lt;/li&gt;
&lt;/ol&gt;
</content>
        <updated>2023-06-21T08:17:07.589Z</updated>
    </entry>
    <entry>
        <id>https://asdlkjqpwoei.github.io/2023/06/21/UnrealEngineBasis/</id>
        <title>Unreal Engine Basis</title>
        <link rel="alternate" href="https://asdlkjqpwoei.github.io/2023/06/21/UnrealEngineBasis/"/>
        <content type="html">&lt;h1 id=&#34;Reflection-反射&#34;&gt;&lt;a href=&#34;#Reflection-反射&#34; class=&#34;headerlink&#34; title=&#34;Reflection(反射)&#34;&gt;&lt;/a&gt;Reflection(反射)&lt;/h1&gt;&lt;p&gt;虚幻反射系统是虚幻引擎的基础技术之一，并且支撑着许多其他苏童的运行比如编辑器中的细节面板、序列化、垃圾回收、网络复制和蓝图与C++的通讯。虚幻反射系统会收集、查询和操作有关C++的类、结构、函数、类成员函数、和枚举。&lt;/p&gt;
&lt;p&gt;虚幻反射系统的使用是可选的。&lt;/p&gt;
&lt;h2 id=&#34;Usage&#34;&gt;&lt;a href=&#34;#Usage&#34; class=&#34;headerlink&#34; title=&#34;Usage&#34;&gt;&lt;/a&gt;Usage&lt;/h2&gt;&lt;p&gt;头文件中包含下列语句可以被标记为该翻译单元（文件&amp;#x2F;类）拥有需要被反射的类型，加入虚幻反射系统&lt;br&gt;&lt;code&gt;include ”&amp;lt;FileName&amp;gt;.generated.h”&lt;/code&gt;&lt;br&gt;使用下列的宏语句来标记需要被加入至反射系统的变量。&lt;br&gt;&lt;code&gt;UENUM()&lt;/code&gt;, &lt;code&gt;UCLASS()&lt;/code&gt;, &lt;code&gt;USTRUCT()&lt;/code&gt;, &lt;code&gt;UFUNCTION()&lt;/code&gt;, &lt;code&gt;UPROPERTY()&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;Work-Flow&#34;&gt;&lt;a href=&#34;#Work-Flow&#34; class=&#34;headerlink&#34; title=&#34;Work Flow&#34;&gt;&lt;/a&gt;Work Flow&lt;/h2&gt;&lt;p&gt;Unreal Build Tool(UBT)和Unreal Header Tool(UHT)协同工作，生成运行虚幻反射系统所必须的数据。UBT负责扫描所有的头文件，标记所有任意头文件具有至少一种反射类型的模块。UHT负责收集和更新虚幻反射系统所必须的数据，遍历所有的头文件，构建虚幻反射系统数据，生成包含反射数据的C++代码。&lt;/p&gt;
&lt;p&gt;UHT是独立的程序，不依赖任何的反射数据文件，避免先有鸡还是先有蛋的问题。&lt;/p&gt;
&lt;h2 id=&#34;generated-h-content&#34;&gt;&lt;a href=&#34;#generated-h-content&#34; class=&#34;headerlink&#34; title=&#34;.generated.h content&#34;&gt;&lt;/a&gt;.generated.h content&lt;/h2&gt;&lt;p&gt;类声明或者结构体声明中的GENERATED_UCLASS_BODY()或GENERATED_USTRCUT_BODY()生成一些函数，生成的函数像StaticClass()或者StaticStruct()这种便于从蓝图或者C++获取反射数据的函数，这些内容必须作为成员存在于需要被反射的类型中。&lt;/p&gt;
&lt;h1 id=&#34;Delegate-委托&#34;&gt;&lt;a href=&#34;#Delegate-委托&#34; class=&#34;headerlink&#34; title=&#34;Delegate (委托)&#34;&gt;&lt;/a&gt;Delegate (委托)&lt;/h1&gt;&lt;p&gt;委托是一种可定义的事件，可以调用或者回应。&lt;/p&gt;
&lt;h2 id=&#34;Multicast-Delegate-多播委托&#34;&gt;&lt;a href=&#34;#Multicast-Delegate-多播委托&#34; class=&#34;headerlink&#34; title=&#34;Multicast Delegate(多播委托)&#34;&gt;&lt;/a&gt;Multicast Delegate(多播委托)&lt;/h2&gt;&lt;p&gt;在代码中，任意数量的实体都可以回应该多播委托，并从该委托中接受输入数据和使用它们。&lt;/p&gt;
&lt;h2 id=&#34;Dynamic-Delegate-动态委托&#34;&gt;&lt;a href=&#34;#Dynamic-Delegate-动态委托&#34; class=&#34;headerlink&#34; title=&#34;Dynamic Delegate(动态委托)&#34;&gt;&lt;/a&gt;Dynamic Delegate(动态委托)&lt;/h2&gt;&lt;p&gt;动态委托可以在蓝图中被保存或者被加载，在蓝图系统中，它们也叫事件分发器。&lt;/p&gt;
&lt;h2 id=&#34;Event-Dispatcher-事件分发器&#34;&gt;&lt;a href=&#34;#Event-Dispatcher-事件分发器&#34; class=&#34;headerlink&#34; title=&#34;Event Dispatcher(事件分发器)&#34;&gt;&lt;/a&gt;Event Dispatcher(事件分发器)&lt;/h2&gt;&lt;h2 id=&#34;Implementation&#34;&gt;&lt;a href=&#34;#Implementation&#34; class=&#34;headerlink&#34; title=&#34;Implementation&#34;&gt;&lt;/a&gt;Implementation&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Engine\Source\Runtime\Core\Public\Delegates\DelegateCombinations.h&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; DECLARE_DELEGATE_OneParam( DelegateName, Param1Type ) FUNC_DECLARE_DELEGATE( DelegateName, void, Param1Type )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Engine\Source\Runtime\Core\Public\Delegates\Delegate.h&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; FUNC_DECLARE_DELEGATE( DelegateName, Return Type, ... ) \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;typedef TDelegate&lt;span class=&#34;string&#34;&gt;&amp;lt;ReturnType(__VA_ARGS__)&amp;gt;&lt;/span&gt; DelegateName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//TDelegate模板类类名，被转换成别名DelegateName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Tdelegate&amp;lt;&lt;span class=&#34;built_in&#34;&gt;ReturnType&lt;/span&gt;(__VA_ARGS__)&amp;gt; DelegateVariableName = DelegateName DelegateVariableName&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Engine\Source\Runtime\Core\Public\Delegates\DelegateSignatureImpl.inl&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;keyword&#34;&gt;typename&lt;/span&gt; InRetValType, &lt;span class=&#34;keyword&#34;&gt;typename&lt;/span&gt;... ParamTypes, &lt;span class=&#34;keyword&#34;&gt;typename&lt;/span&gt; UserPolicy&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;TDelegate&lt;/span&gt;&amp;lt;&lt;span class=&#34;built_in&#34;&gt;InRetValType&lt;/span&gt;(ParamTypes...), UserPolicy&amp;gt; : &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; TDelegateBase&amp;lt;UserPolicy&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;UserPolicy不是参数，默认为FDefaultDelegateUserPolicy，可能在需要修改委托系统时注意。模板参数接受函数返回值类型(InRetValType，可为void)、参数类型(ParamTypes)和参数数量(...)。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;在该类的内部还有BindUObject、CreateUObject、Execute的定义，BindUObject不过是将CreateUObject封装了，全部皆为内联函数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;Memory-Management-内存管理&#34;&gt;&lt;a href=&#34;#Memory-Management-内存管理&#34; class=&#34;headerlink&#34; title=&#34;Memory Management(内存管理)&#34;&gt;&lt;/a&gt;Memory Management(内存管理)&lt;/h1&gt;&lt;h2 id=&#34;Garbage-Collection-垃圾回收&#34;&gt;&lt;a href=&#34;#Garbage-Collection-垃圾回收&#34; class=&#34;headerlink&#34; title=&#34;Garbage Collection(垃圾回收)&#34;&gt;&lt;/a&gt;Garbage Collection(垃圾回收)&lt;/h2&gt;&lt;p&gt;垃圾回收系统会追踪所有的UObject及其子类的对象，包括AActor和UActorComponent。当创建新的UObject对象时，虚幻引擎会自动地将新UObject对象添加至内部UObject对象列表，即便有不合理地使用，也不会轻易地造成内存泄露，但是很容易造成程序崩溃。&lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;p&gt;所有的UObject对象不应使用标准C++的new，只能使用默认的创建函数NewObject、SpawnActor、CreateDefaultSubobject。&lt;/p&gt;
&lt;p&gt;UObject对象满足一下条件之一，会一直保持存活：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过其他对象对该对象进行强引用&lt;/li&gt;
&lt;li&gt;通过其他对象对该对象调用UObject::AddReferenceObjects&lt;/li&gt;
&lt;li&gt;调用UObject::AddToRoot添加他们至根集合，这个一般没有必要。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;未满足以上条件之一的对象，会在下一轮垃圾回收周期被标记为无法访问并且加入垃圾回收队列。&lt;/p&gt;
&lt;p&gt;可通过调用MarkPendingKillu或者MarkAsGarbage在对象上，强制下一个垃圾回收周期摧毁对象。部分类不支持该方式销毁，比如AActor和UActorComponent。&lt;/p&gt;
&lt;p&gt;根据以上的原理，防止对象被回收的办法：标记为UPROPERTY，调用AddRoot函数。&lt;/p&gt;
&lt;h1 id=&#34;Serialization-序列化&#34;&gt;&lt;a href=&#34;#Serialization-序列化&#34; class=&#34;headerlink&#34; title=&#34;Serialization(序列化)&#34;&gt;&lt;/a&gt;Serialization(序列化)&lt;/h1&gt;&lt;p&gt;一般是指将数据结构转换成其他格式方便传输&amp;#x2F;存储，提取其中的数据结构也就叫反序列化(Deserialization)。&lt;/p&gt;
&lt;h1 id=&#34;性能优化相关&#34;&gt;&lt;a href=&#34;#性能优化相关&#34; class=&#34;headerlink&#34; title=&#34;性能优化相关&#34;&gt;&lt;/a&gt;性能优化相关&lt;/h1&gt;&lt;h2 id=&#34;特效&#34;&gt;&lt;a href=&#34;#特效&#34; class=&#34;headerlink&#34; title=&#34;特效&#34;&gt;&lt;/a&gt;特效&lt;/h2&gt;&lt;p&gt;OverDraw&lt;/p&gt;
&lt;p&gt;Volume Domain&lt;/p&gt;
&lt;h2 id=&#34;渲染&#34;&gt;&lt;a href=&#34;#渲染&#34; class=&#34;headerlink&#34; title=&#34;渲染&#34;&gt;&lt;/a&gt;渲染&lt;/h2&gt;&lt;h3 id=&#34;渲染线程&#34;&gt;&lt;a href=&#34;#渲染线程&#34; class=&#34;headerlink&#34; title=&#34;渲染线程&#34;&gt;&lt;/a&gt;渲染线程&lt;/h3&gt;&lt;p&gt;RenderThread, RHIThread&lt;/p&gt;
&lt;p&gt;Drawcall&lt;/p&gt;
&lt;h1 id=&#34;Animation-动画&#34;&gt;&lt;a href=&#34;#Animation-动画&#34; class=&#34;headerlink&#34; title=&#34;Animation(动画)&#34;&gt;&lt;/a&gt;Animation(动画)&lt;/h1&gt;&lt;h2 id=&#34;Inverse-Kinematics-反向运动学-和Forward-Kinematics-正向运动学&#34;&gt;&lt;a href=&#34;#Inverse-Kinematics-反向运动学-和Forward-Kinematics-正向运动学&#34; class=&#34;headerlink&#34; title=&#34;Inverse Kinematics(反向运动学)和Forward Kinematics(正向运动学)&#34;&gt;&lt;/a&gt;Inverse Kinematics(反向运动学)和Forward Kinematics(正向运动学)&lt;/h2&gt;&lt;p&gt;动画一般都是以角色在平地为基准制作的，但是游戏中的地形其实会有很多不平坦的地形，反向运动学是为了解决这种反常理的情况出现的。&lt;br&gt;普通的动画是正向运动学。输入一组局部姿势，输出一个全局动作和每个关节的蒙皮矩阵。而反向运动学相反，是某个关节想要的全局动作作为输入，求出其他部位的局部姿势，使得全局动作得以表现。&lt;br&gt;典型的例子可以有FPS中角色持枪，让左右手都以正常的姿势持有武器。角色运动中遇到斜坡上升，让角色的落脚点与地形贴合。&lt;/p&gt;
&lt;h2 id=&#34;Rag-Doll-布娃娃&#34;&gt;&lt;a href=&#34;#Rag-Doll-布娃娃&#34; class=&#34;headerlink&#34; title=&#34;Rag Doll(布娃娃)&#34;&gt;&lt;/a&gt;Rag Doll(布娃娃)&lt;/h2&gt;&lt;p&gt;角色死亡或失去意识时的常用技术，与物理模块相关。&lt;/p&gt;
&lt;h2 id=&#34;Control-Rig-控制绑定&#34;&gt;&lt;a href=&#34;#Control-Rig-控制绑定&#34; class=&#34;headerlink&#34; title=&#34;Control Rig(控制绑定)&#34;&gt;&lt;/a&gt;Control Rig(控制绑定)&lt;/h2&gt;&lt;p&gt;像是给美术师和动画师的工具，允许直接在引擎中给角色添加和调试动画。&lt;/p&gt;
&lt;h1 id=&#34;Gameplay-GameFramework&#34;&gt;&lt;a href=&#34;#Gameplay-GameFramework&#34; class=&#34;headerlink&#34; title=&#34;Gameplay GameFramework&#34;&gt;&lt;/a&gt;Gameplay GameFramework&lt;/h1&gt;&lt;p&gt;初始化次序：Engine-&amp;gt;GameInstance-&amp;gt;World-&amp;gt;Level&lt;/p&gt;
&lt;p&gt;一些数据在GameInstance阶段还未初始化，全局相关的功能初始化可能得放在WorldContext或之后&lt;/p&gt;
&lt;p&gt;MVC模式，在这里可以具体为Model-PlayerState, View-Character, Control-Controller。&lt;/p&gt;
&lt;h2 id=&#34;Actor&#34;&gt;&lt;a href=&#34;#Actor&#34; class=&#34;headerlink&#34; title=&#34;Actor&#34;&gt;&lt;/a&gt;Actor&lt;/h2&gt;&lt;p&gt;可放置于场景中的类，绝大多数场景物体都以此作为基础类，比如Pawn、Character等。&lt;/p&gt;
&lt;p&gt;注：Actor本身不带变换功能，默认由组件提供。&lt;/p&gt;
&lt;h2 id=&#34;Component&#34;&gt;&lt;a href=&#34;#Component&#34; class=&#34;headerlink&#34; title=&#34;Component&#34;&gt;&lt;/a&gt;Component&lt;/h2&gt;&lt;p&gt;一般用来分担Actor的功能，或者实现功能代码复用，有两大基础类UActorComponent和USceneCompoent。&lt;/p&gt;
&lt;p&gt;USceneComponent的子类通常负责一些可见或者与视觉表现相关的功能，比如变换、提供骨骼网格体等。&lt;/p&gt;
&lt;p&gt;UActorComponent的子类通常负责内部相关的功能，比如移动，或者生命值、背包等。&lt;/p&gt;
&lt;h2 id=&#34;Pawn&#34;&gt;&lt;a href=&#34;#Pawn&#34; class=&#34;headerlink&#34; title=&#34;Pawn&#34;&gt;&lt;/a&gt;Pawn&lt;/h2&gt;&lt;p&gt;可接受玩家输入，默认没有移动组件和骨骼网格组件，其意义更倾向于一个受玩家控制的Actor，无其他附加功能。&lt;/p&gt;
&lt;h2 id=&#34;Character&#34;&gt;&lt;a href=&#34;#Character&#34; class=&#34;headerlink&#34; title=&#34;Character&#34;&gt;&lt;/a&gt;Character&lt;/h2&gt;&lt;p&gt;Pawn的子类，默认拥有移动组件和骨骼网格组件，可接受玩家的输入控制。角色相关的控制和动画逻辑一般会集中于此。&lt;/p&gt;
&lt;h2 id=&#34;Controller&#34;&gt;&lt;a href=&#34;#Controller&#34; class=&#34;headerlink&#34; title=&#34;Controller&#34;&gt;&lt;/a&gt;Controller&lt;/h2&gt;&lt;p&gt;主要负责控制Pawn，或者Character，一般来说，一个Controller对应一个Pawn。&lt;/p&gt;
&lt;p&gt;在线子系统中，Controller中的ControllerID就代表着玩家，ControllerID在在线子系统中会被当作NetworkID处理(PS子系统如此，其它平台未知)。&lt;/p&gt;
&lt;h2 id=&#34;GameMode&#34;&gt;&lt;a href=&#34;#GameMode&#34; class=&#34;headerlink&#34; title=&#34;GameMode&#34;&gt;&lt;/a&gt;GameMode&lt;/h2&gt;&lt;p&gt;游戏模式，定义游戏的规则和核心玩法，例如如何获胜、玩家人数限制等。&lt;/p&gt;
&lt;h2 id=&#34;GameState&#34;&gt;&lt;a href=&#34;#GameState&#34; class=&#34;headerlink&#34; title=&#34;GameState&#34;&gt;&lt;/a&gt;GameState&lt;/h2&gt;&lt;p&gt;游戏状态，通过用来记录游戏内的全局状态，如PVP中的比分，或者游戏时间等。&lt;/p&gt;
&lt;p&gt;支持网络复制，一般存在服务端上。&lt;/p&gt;
&lt;h2 id=&#34;Level&#34;&gt;&lt;a href=&#34;#Level&#34; class=&#34;headerlink&#34; title=&#34;Level&#34;&gt;&lt;/a&gt;Level&lt;/h2&gt;&lt;p&gt;Actor和Component的容器。&lt;/p&gt;
&lt;p&gt;有WorldSettings成员可以设置关卡域内的属性。&lt;/p&gt;
&lt;h2 id=&#34;World&#34;&gt;&lt;a href=&#34;#World&#34; class=&#34;headerlink&#34; title=&#34;World&#34;&gt;&lt;/a&gt;World&lt;/h2&gt;&lt;p&gt;管理所有的Level，也可以访问其中的所有Actor。有成员CurrentLevel指向当前Level。&lt;/p&gt;
&lt;p&gt;Presistent Level指的是项目编辑器视图中已经打开的持续性关卡。&lt;/p&gt;
&lt;h2 id=&#34;WorldContext&#34;&gt;&lt;a href=&#34;#WorldContext&#34; class=&#34;headerlink&#34; title=&#34;WorldContext&#34;&gt;&lt;/a&gt;WorldContext&lt;/h2&gt;&lt;p&gt;负责管理多个World。&lt;/p&gt;
&lt;p&gt;游戏程序独立运行的情况下，只有GameWorldContext。&lt;/p&gt;
&lt;p&gt;有成员变量ThisCurrentWorld，指向当前World。&lt;/p&gt;
&lt;h2 id=&#34;GameInstance&#34;&gt;&lt;a href=&#34;#GameInstance&#34; class=&#34;headerlink&#34; title=&#34;GameInstance&#34;&gt;&lt;/a&gt;GameInstance&lt;/h2&gt;&lt;p&gt;全局唯一，一般用来进行一些全局唯一的功能和业务或者保存全局数据。&lt;/p&gt;
&lt;h2 id=&#34;Engine&#34;&gt;&lt;a href=&#34;#Engine&#34; class=&#34;headerlink&#34; title=&#34;Engine&#34;&gt;&lt;/a&gt;Engine&lt;/h2&gt;&lt;p&gt;最底层的基础类。&lt;/p&gt;
&lt;p&gt;保存唯一一个GameInstance指针，在编辑器启动时，会包含两个World指针，一个是PlayWorld，一个是EditorWorld，即编辑器也是一个World。&lt;/p&gt;
&lt;h1 id=&#34;Class-Default-Object-CDO&#34;&gt;&lt;a href=&#34;#Class-Default-Object-CDO&#34; class=&#34;headerlink&#34; title=&#34;Class Default Object (CDO)&#34;&gt;&lt;/a&gt;Class Default Object (CDO)&lt;/h1&gt;&lt;h1 id=&#34;Macro&#34;&gt;&lt;a href=&#34;#Macro&#34; class=&#34;headerlink&#34; title=&#34;Macro&#34;&gt;&lt;/a&gt;Macro&lt;/h1&gt;&lt;h2 id=&#34;Class-Specifiers&#34;&gt;&lt;a href=&#34;#Class-Specifiers&#34; class=&#34;headerlink&#34; title=&#34;Class Specifiers&#34;&gt;&lt;/a&gt;Class Specifiers&lt;/h2&gt;&lt;h2 id=&#34;Asserts&#34;&gt;&lt;a href=&#34;#Asserts&#34; class=&#34;headerlink&#34; title=&#34;Asserts&#34;&gt;&lt;/a&gt;Asserts&lt;/h2&gt;&lt;h3 id=&#34;Check&#34;&gt;&lt;a href=&#34;#Check&#34; class=&#34;headerlink&#34; title=&#34;Check&#34;&gt;&lt;/a&gt;Check&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;The Check family is the closest to the base assert, in that members of this family halt execution when the first parameter evaluates to a false value, and do not run in shipping builds by default.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;check(&lt;Expression&gt;), checkSlow(&lt;Expression&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Halts execution if Expression if false.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;checkf(&lt;Expression&gt;, &lt;FormattedText&gt;, …), checkfSlow(&lt;Expression&gt;, &lt;FormattedText&gt;, …)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Halts execution if Expression is false and outputs FormattedText to the log.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;checkCode(&lt;Code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Executes Code within a do-while loop structure that runs once; primarily useful as a way to prepare information that another Check requires.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;checkNoEntry()&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Halts execution if the line is ever hit, similar to &lt;code&gt;check(false)&lt;/code&gt;, but intended for code paths that should be unreachable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;checkNoReentry()&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Halts execution if the line is hit more than once.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;checkNoRecursion()&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Halts execution if the line is hit more than once without leaving scope.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;unimplemented()&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Halts execution if the line is ever hit, similar to &lt;code&gt;check(false)&lt;/code&gt;, but intended for virtual functions that should be overridden and not called.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;Verify&#34;&gt;&lt;a href=&#34;#Verify&#34; class=&#34;headerlink&#34; title=&#34;Verify&#34;&gt;&lt;/a&gt;Verify&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;The Verify family behaves identically to the Check family in most builds. However, Verify macros evaluate their expressions even in builds where Check macros are disabled. This means that you should use Verify macros only when the expression needs to run independently of diagnostic checks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;verify(&lt;Expression&gt;), verifySlow(&lt;Expression&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Halts execution if Expression is false.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;verifyf(&lt;Expression&gt;, &lt;FormattedText&gt;, ...), verifyfSlow(&lt;Expression&gt;, &lt;FormattedText&gt;, ...)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Halts execution if Expression is false and outputs FormattedText to the log&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;Ensure&#34;&gt;&lt;a href=&#34;#Ensure&#34; class=&#34;headerlink&#34; title=&#34;Ensure&#34;&gt;&lt;/a&gt;Ensure&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;The Ensure family is similar to the Verify family, but works with non-fatal errors. This means that if an Ensure macro&#39;s expression evaluates as false, the Engine will inform the crash reporter, but will continue running.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ensure(&lt;Expression&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Notifies the crash reporter on the first time Expression is false.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ensureMsgf(&lt;Expression&gt;, &lt;FormattedText&gt;, ...)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Notifies the crash reporter and outputs FormattedText to the log on the first time Expression is false.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ensureAlways(&lt;Expression&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Notifies the crash reporter if Expression is false.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ensureAlwaysMsgf(&lt;Expression&gt;, &lt;FormattedText&gt;, ...)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Notifies the crash reporter and outputs FormattedText to the log if Expression is false.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;PURE-VIRTUAL&#34;&gt;&lt;a href=&#34;#PURE-VIRTUAL&#34; class=&#34;headerlink&#34; title=&#34;PURE_VIRTUAL&#34;&gt;&lt;/a&gt;PURE_VIRTUAL&lt;/h2&gt;&lt;p&gt;Unreal Engine特性，由于所有继承UObject的UClass必须能实例化，因此的一般的类不可以包含纯虚函数。一些游戏业务场景要求该类的某个虚函数必须在子类有实现，普通虚函数无法达到该要求，PURE_VIRTUAL因此诞生。&lt;/p&gt;
&lt;h1 id=&#34;Reference&#34;&gt;&lt;a href=&#34;#Reference&#34; class=&#34;headerlink&#34; title=&#34;Reference&#34;&gt;&lt;/a&gt;Reference&lt;/h1&gt;&lt;h2 id=&#34;Official-Documentation&#34;&gt;&lt;a href=&#34;#Official-Documentation&#34; class=&#34;headerlink&#34; title=&#34;Official Documentation&#34;&gt;&lt;/a&gt;Official Documentation&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLnVucmVhbGVuZ2luZS5jb20vNS4yL2VuLVVTL2dhbWVwbGF5LWZyYW1ld29yay1xdWljay1yZWZlcmVuY2UtaW4tdW5yZWFsLWVuZ2luZS8=&#34;&gt;Gameplay Framework Quick Reference in Unreal Engine | Unreal Engine 5.2 Documentation&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLnVucmVhbGVuZ2luZS5jb20vNS4yL2VuLVVTL2Fzc2VydHMtaW4tdW5yZWFsLWVuZ2luZS8=&#34;&gt;Asserts in Unreal Engine | Unreal Engine 5.2 Documentation&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLnVucmVhbGVuZ2luZS5jb20vNS4yL2VuLVVTL2NsYXNzLXNwZWNpZmllcnMv&#34;&gt;Class Specifiers | Unreal Engine 5.2 Documentation&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Community-Wiki&#34;&gt;&lt;a href=&#34;#Community-Wiki&#34; class=&#34;headerlink&#34; title=&#34;Community Wiki&#34;&gt;&lt;/a&gt;Community Wiki&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly91bnJlYWxjb21tdW5pdHkud2lraS91bnJlYWwtcHJvcGVydHktc3lzdGVtLShyZWZsZWN0aW9uKS0zNmQxZTY=&#34;&gt;Unreal Property System (Reflection) | Unreal Engine Community Wiki&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly91bnJlYWxjb21tdW5pdHkud2lraS9kZWxlZ2F0ZXMtaW4tdWU0LXJhdy1jcHAtYW5kLWJwLWV4cG9zZWQteGlmbWNtcTU=&#34;&gt;Delegates | Unreal Engine Community Wiki&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly91bnJlYWxjb21tdW5pdHkud2lraS9nYXJiYWdlLWNvbGxlY3Rpb24tMzZkMWRh&#34;&gt;Garbage Collection | Unreal Engine Community Wiki&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Book&#34;&gt;&lt;a href=&#34;#Book&#34; class=&#34;headerlink&#34; title=&#34;Book&#34;&gt;&lt;/a&gt;Book&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Game Engine Architecture [Third Edition] – Jason Gergory, 叶劲峰译&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Third-Party-Articles&#34;&gt;&lt;a href=&#34;#Third-Party-Articles&#34; class=&#34;headerlink&#34; title=&#34;Third Party Articles&#34;&gt;&lt;/a&gt;Third Party Articles&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vdS1uLW93ZW4vcC8xNjQyNTM1OC5odG1s&#34;&gt;UE4学习笔记：Gameplay框架及其模块梳理（上篇） - U_N_Owen – 博客园&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82MTI4MzcwNDU=&#34;&gt;Unreal Engine的Gameplay框架和重点 – 知乎&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81OTE5ODIwMjA=&#34;&gt;UE5 -- Control Rig与IK Rig介绍 – 知乎&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2023-06-21T08:13:39.867Z</updated>
    </entry>
    <entry>
        <id>https://asdlkjqpwoei.github.io/2023/06/21/Cpp/</id>
        <title>Cpp Basis</title>
        <link rel="alternate" href="https://asdlkjqpwoei.github.io/2023/06/21/Cpp/"/>
        <content type="html">&lt;h1 id=&#34;Keyword-关键字&#34;&gt;&lt;a href=&#34;#Keyword-关键字&#34; class=&#34;headerlink&#34; title=&#34;Keyword(关键字)&#34;&gt;&lt;/a&gt;Keyword(关键字)&lt;/h1&gt;&lt;h2 id=&#34;static&#34;&gt;&lt;a href=&#34;#static&#34; class=&#34;headerlink&#34; title=&#34;static&#34;&gt;&lt;/a&gt;static&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;修饰变量，改变变量的生命周期和存储区域，使变量存储在静态区&amp;#x2F;全局区&lt;/li&gt;
&lt;li&gt;修饰函数，改变函数定义的作用范围，只有定义该函数的文件才可使用该函数，防止与其他人的函数发生同名冲突。&lt;/li&gt;
&lt;li&gt;修饰类的成员变量，使该成员变量不需要实例化对象也可以访问。&lt;/li&gt;
&lt;li&gt;修饰类的成员函数，使该成员函数不需要实例化对象也可被调用。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;const&#34;&gt;&lt;a href=&#34;#const&#34; class=&#34;headerlink&#34; title=&#34;const&#34;&gt;&lt;/a&gt;const&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;修饰变量，使变量不可变化，在声明定义时必须被初始化。&lt;/li&gt;
&lt;li&gt;修饰指针，使其成为常量指针。&lt;/li&gt;
&lt;li&gt;修饰引用，使引用成为常量引用。&lt;/li&gt;
&lt;li&gt;修饰成员函数，使成员函数的定义不可改变成员变量。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;指针-Pointer-与引用-Reference&#34;&gt;&lt;a href=&#34;#指针-Pointer-与引用-Reference&#34; class=&#34;headerlink&#34; title=&#34;指针(Pointer)与引用(Reference)&#34;&gt;&lt;/a&gt;指针(Pointer)与引用(Reference)&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;指针是存储地址的变量，可以为空，不具有对依附性。&lt;/li&gt;
&lt;li&gt;引用时其他变量的别名，必须初始化，具有依附性。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;野指针&#34;&gt;&lt;a href=&#34;#野指针&#34; class=&#34;headerlink&#34; title=&#34;野指针&#34;&gt;&lt;/a&gt;野指针&lt;/h1&gt;&lt;p&gt;指向垃圾内存的指针。&lt;/p&gt;
&lt;h2 id=&#34;产生的可能：&#34;&gt;&lt;a href=&#34;#产生的可能：&#34; class=&#34;headerlink&#34; title=&#34;产生的可能：&#34;&gt;&lt;/a&gt;产生的可能：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;没有初始化指针，导致指针随机指向一块内存，成为非法指针。&lt;/li&gt;
&lt;li&gt;释放指针所指向的内存后没有将指针置为NULL或者nullptr，成为非法指针。&lt;/li&gt;
&lt;li&gt;指针操作超出变量作用域。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;Object-Oriented-Programming-面向对象&#34;&gt;&lt;a href=&#34;#Object-Oriented-Programming-面向对象&#34; class=&#34;headerlink&#34; title=&#34;Object Oriented Programming(面向对象)&#34;&gt;&lt;/a&gt;Object Oriented Programming(面向对象)&lt;/h1&gt;&lt;p&gt;类与对象的关系：对象是类的实例化。&lt;/p&gt;
&lt;p&gt;主要特性：封装、多态、继承&lt;/p&gt;
&lt;h2 id=&#34;封装&#34;&gt;&lt;a href=&#34;#封装&#34; class=&#34;headerlink&#34; title=&#34;封装&#34;&gt;&lt;/a&gt;封装&lt;/h2&gt;&lt;p&gt;将客观存在的事物抽象成类，其中的成员仅对信任的实例开放，多数都是被隐藏和透明的。&lt;/p&gt;
&lt;h2 id=&#34;继承&#34;&gt;&lt;a href=&#34;#继承&#34; class=&#34;headerlink&#34; title=&#34;继承&#34;&gt;&lt;/a&gt;继承&lt;/h2&gt;&lt;p&gt;子类继承父类的公共成员定义和实现。&lt;/p&gt;
&lt;h2 id=&#34;多态&#34;&gt;&lt;a href=&#34;#多态&#34; class=&#34;headerlink&#34; title=&#34;多态&#34;&gt;&lt;/a&gt;多态&lt;/h2&gt;&lt;p&gt;多种状态，有静态多态、动态多态。&lt;/p&gt;
&lt;h3 id=&#34;静态多态&#34;&gt;&lt;a href=&#34;#静态多态&#34; class=&#34;headerlink&#34; title=&#34;静态多态&#34;&gt;&lt;/a&gt;静态多态&lt;/h3&gt;&lt;p&gt;重载函数，在编译时进行绑定。&lt;/p&gt;
&lt;h3 id=&#34;动态多态&#34;&gt;&lt;a href=&#34;#动态多态&#34; class=&#34;headerlink&#34; title=&#34;动态多态&#34;&gt;&lt;/a&gt;动态多态&lt;/h3&gt;&lt;p&gt;与虚函数、虚继承相关。在运行时用基类的引用或者指针调用虚函数会发生绑定，即动态绑定。&lt;/p&gt;
&lt;h2 id=&#34;虚函数&#34;&gt;&lt;a href=&#34;#虚函数&#34; class=&#34;headerlink&#34; title=&#34;虚函数&#34;&gt;&lt;/a&gt;虚函数&lt;/h2&gt;&lt;p&gt;被virtual修饰的成员函数。&lt;/p&gt;
&lt;h2 id=&#34;纯虚函数&#34;&gt;&lt;a href=&#34;#纯虚函数&#34; class=&#34;headerlink&#34; title=&#34;纯虚函数&#34;&gt;&lt;/a&gt;纯虚函数&lt;/h2&gt;&lt;p&gt;被virtual修饰的成员函数，且被赋值0。&lt;/p&gt;
&lt;p&gt;纯虚函数没有实现，无函数体。&lt;/p&gt;
&lt;h3 id=&#34;重载和覆写&#34;&gt;&lt;a href=&#34;#重载和覆写&#34; class=&#34;headerlink&#34; title=&#34;重载和覆写&#34;&gt;&lt;/a&gt;重载和覆写&lt;/h3&gt;&lt;p&gt;&lt;em&gt;虚函数&lt;/em&gt;可以有实现，可以是空实现，子类继承时与普通继承相似，一样会继承实现，不同的是在子类重新定义函数时，重定义的虚函数叫&lt;em&gt;覆写&lt;/em&gt;，重定义的普通函数叫&lt;em&gt;重载&lt;/em&gt;。&lt;em&gt;子类&lt;/em&gt;可以不覆写虚函数，但是&lt;em&gt;纯虚函数&lt;/em&gt;必须被覆写。&lt;/p&gt;
&lt;h3 id=&#34;虚函数与纯虚函数的区别&#34;&gt;&lt;a href=&#34;#虚函数与纯虚函数的区别&#34; class=&#34;headerlink&#34; title=&#34;虚函数与纯虚函数的区别&#34;&gt;&lt;/a&gt;虚函数与纯虚函数的区别&lt;/h3&gt;&lt;p&gt;&lt;em&gt;纯虚函数&lt;/em&gt;更注重接口的统一性，&lt;em&gt;虚函数&lt;/em&gt;用于“实作继承“，继承接口的同时也继承了父类的实现。&lt;/p&gt;
&lt;h2 id=&#34;接口类&#34;&gt;&lt;a href=&#34;#接口类&#34; class=&#34;headerlink&#34; title=&#34;接口类&#34;&gt;&lt;/a&gt;接口类&lt;/h2&gt;&lt;p&gt;成员中有纯虚函数的类。&lt;/p&gt;
&lt;h2 id=&#34;抽象类&#34;&gt;&lt;a href=&#34;#抽象类&#34; class=&#34;headerlink&#34; title=&#34;抽象类&#34;&gt;&lt;/a&gt;抽象类&lt;/h2&gt;&lt;p&gt;成员中仅有纯虚函数的类。&lt;/p&gt;
&lt;h2 id=&#34;虚函数表&#34;&gt;&lt;a href=&#34;#虚函数表&#34; class=&#34;headerlink&#34; title=&#34;虚函数表&#34;&gt;&lt;/a&gt;虚函数表&lt;/h2&gt;&lt;p&gt;存放指向虚函数的指针的表，存在于目标文件的只读数据段，在编译时根据类的声明创建。如果子类覆写了父类的某个虚函数，则在虚表中覆盖该父类的虚函数指针。这样就可以通过父类指针去调用在子类中覆写虚函数实现，一般都会调用最新的覆写实现。&lt;/p&gt;
&lt;h2 id=&#34;虚函数指针&#34;&gt;&lt;a href=&#34;#虚函数指针&#34; class=&#34;headerlink&#34; title=&#34;虚函数指针&#34;&gt;&lt;/a&gt;虚函数指针&lt;/h2&gt;&lt;p&gt;运行时确定，存在于含有虚函数的类对象中，指向虚函数表。&lt;/p&gt;
&lt;h2 id=&#34;虚继承&#34;&gt;&lt;a href=&#34;#虚继承&#34; class=&#34;headerlink&#34; title=&#34;虚继承&#34;&gt;&lt;/a&gt;虚继承&lt;/h2&gt;&lt;p&gt;主要用于解决在多继承情况下出现的菱形继承问题（浪费存储空间和语义二义性）。&lt;/p&gt;
&lt;h2 id=&#34;虚基类指针&#34;&gt;&lt;a href=&#34;#虚基类指针&#34; class=&#34;headerlink&#34; title=&#34;虚基类指针&#34;&gt;&lt;/a&gt;虚基类指针&lt;/h2&gt;&lt;p&gt;存放虚基类的地址，存在于每一个虚继承的子类。&lt;/p&gt;
&lt;h2 id=&#34;虚基类表&#34;&gt;&lt;a href=&#34;#虚基类表&#34; class=&#34;headerlink&#34; title=&#34;虚基类表&#34;&gt;&lt;/a&gt;虚基类表&lt;/h2&gt;&lt;p&gt;存放虚基类与本类的偏移地址，子类可过该偏移地址找到虚基类。&lt;/p&gt;
&lt;h1 id=&#34;内存模型&#34;&gt;&lt;a href=&#34;#内存模型&#34; class=&#34;headerlink&#34; title=&#34;内存模型&#34;&gt;&lt;/a&gt;内存模型&lt;/h1&gt;&lt;p&gt;栈(Stack)、堆(Heap)、自由存储区、全局&amp;#x2F;静态数据区(全局和静态存在同一块内存中)、常量存储区、自由存储区、执行代码区&lt;/p&gt;
&lt;h2 id=&#34;栈&#34;&gt;&lt;a href=&#34;#栈&#34; class=&#34;headerlink&#34; title=&#34;栈&#34;&gt;&lt;/a&gt;栈&lt;/h2&gt;&lt;p&gt;内存分配的运算内置于中央处理器的指令集中，执行函数时，函数内的局部变量会存在栈上，结束时会被释放。&lt;/p&gt;
&lt;h2 id=&#34;堆&#34;&gt;&lt;a href=&#34;#堆&#34; class=&#34;headerlink&#34; title=&#34;堆&#34;&gt;&lt;/a&gt;堆&lt;/h2&gt;&lt;p&gt;由用户使用new关键字分配的内存，只由应用程序控制，需要使用delete释放堆内存。没有及时释放可能会造成内存泄漏。&lt;/p&gt;
&lt;h2 id=&#34;全局-x2F-静态数据&#34;&gt;&lt;a href=&#34;#全局-x2F-静态数据&#34; class=&#34;headerlink&#34; title=&#34;全局&amp;#x2F;静态数据&#34;&gt;&lt;/a&gt;全局&amp;#x2F;静态数据&lt;/h2&gt;&lt;p&gt;全局变量和静态变量的存储区域，又分为已初始化区和未初始化区。&lt;/p&gt;
&lt;h2 id=&#34;常量存储区&#34;&gt;&lt;a href=&#34;#常量存储区&#34; class=&#34;headerlink&#34; title=&#34;常量存储区&#34;&gt;&lt;/a&gt;常量存储区&lt;/h2&gt;&lt;p&gt;常量的存储区域。&lt;/p&gt;
&lt;h2 id=&#34;自由存储区&#34;&gt;&lt;a href=&#34;#自由存储区&#34; class=&#34;headerlink&#34; title=&#34;自由存储区&#34;&gt;&lt;/a&gt;自由存储区&lt;/h2&gt;&lt;p&gt;由malloc分配的内存，一般用free释放。&lt;/p&gt;
&lt;h2 id=&#34;执行代码区&#34;&gt;&lt;a href=&#34;#执行代码区&#34; class=&#34;headerlink&#34; title=&#34;执行代码区&#34;&gt;&lt;/a&gt;执行代码区&lt;/h2&gt;&lt;p&gt;存放函数体的二进制代码。&lt;/p&gt;
&lt;p&gt;函数执行时，其中的局部变量会被初始化进入栈中，函数执行结束时被弹出。&lt;/p&gt;
&lt;h1 id=&#34;递归和循环&#34;&gt;&lt;a href=&#34;#递归和循环&#34; class=&#34;headerlink&#34; title=&#34;递归和循环&#34;&gt;&lt;/a&gt;递归和循环&lt;/h1&gt;&lt;p&gt;递归其实就是栈和循环的组合。&lt;/p&gt;
&lt;h1 id=&#34;模板&#34;&gt;&lt;a href=&#34;#模板&#34; class=&#34;headerlink&#34; title=&#34;模板&#34;&gt;&lt;/a&gt;模板&lt;/h1&gt;&lt;h2 id=&#34;模板具体化&#34;&gt;&lt;a href=&#34;#模板具体化&#34; class=&#34;headerlink&#34; title=&#34;模板具体化&#34;&gt;&lt;/a&gt;模板具体化&lt;/h2&gt;&lt;p&gt;分为隐式具体化和显式具体化，大多数时候默认都是用隐式具体化，使用通用的模板生成代码。&lt;/p&gt;
&lt;h3 id=&#34;显式具体化&#34;&gt;&lt;a href=&#34;#显式具体化&#34; class=&#34;headerlink&#34; title=&#34;显式具体化&#34;&gt;&lt;/a&gt;显式具体化&lt;/h3&gt;&lt;p&gt;针对特定类型使用特定的模板，显式具体化就有作用了。&lt;/p&gt;
&lt;h3 id=&#34;部分具体化&#34;&gt;&lt;a href=&#34;#部分具体化&#34; class=&#34;headerlink&#34; title=&#34;部分具体化&#34;&gt;&lt;/a&gt;部分具体化&lt;/h3&gt;&lt;p&gt;用来限制模板的通用性。&lt;/p&gt;
&lt;h1 id=&#34;多线程&#34;&gt;&lt;a href=&#34;#多线程&#34; class=&#34;headerlink&#34; title=&#34;多线程&#34;&gt;&lt;/a&gt;多线程&lt;/h1&gt;&lt;h2 id=&#34;volatile&#34;&gt;&lt;a href=&#34;#volatile&#34; class=&#34;headerlink&#34; title=&#34;volatile&#34;&gt;&lt;/a&gt;volatile&lt;/h2&gt;&lt;p&gt;允许变量被未知因素更改，并且不会再被编译器优化。&lt;/p&gt;
&lt;p&gt;多线程接触得少，难以得出更深的理解。&lt;/p&gt;
</content>
        <updated>2023-06-21T08:12:20.048Z</updated>
    </entry>
    <entry>
        <id>https://asdlkjqpwoei.github.io/2023/06/20/Lyra/</id>
        <title>Lyra Sample</title>
        <link rel="alternate" href="https://asdlkjqpwoei.github.io/2023/06/20/Lyra/"/>
        <content type="html">&lt;h1 id=&#34;Version&#34;&gt;&lt;a href=&#34;#Version&#34; class=&#34;headerlink&#34; title=&#34;Version&#34;&gt;&lt;/a&gt;Version&lt;/h1&gt;&lt;p&gt;使用Unreal Engine 5.2的Lyra&lt;/p&gt;
&lt;h1 id=&#34;Game-Features&#34;&gt;&lt;a href=&#34;#Game-Features&#34; class=&#34;headerlink&#34; title=&#34;Game Features&#34;&gt;&lt;/a&gt;Game Features&lt;/h1&gt;&lt;p&gt;模块化玩法功能的框架，使玩法和功能成为一个个名为Game Feature插件，降低Pawn、Character等“热点”类的臃肿，降低维护的难度。&lt;/p&gt;
&lt;p&gt;极度依赖Asset Manager。&lt;/p&gt;
&lt;h2 id=&#34;Key-Class&#34;&gt;&lt;a href=&#34;#Key-Class&#34; class=&#34;headerlink&#34; title=&#34;Key Class&#34;&gt;&lt;/a&gt;Key Class&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;UGameFeaturesSubsystemSettings&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Settings for the Game Features framework.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UDeveloperSettings，Game Features框架的设置，可以在编辑器中或者配置文件中进行修改和配置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UGameFeaturesSubsystem&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The manager subsystem for game features.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UEngineSubsystem，负责初始化、加载或者卸载Game Feature的框架管理类。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UGameFeatureData&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Data related to a game feature, a collection of code and content that adds a separable discrete feature to the game.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UPrimaryDataAsset，Game Feature数据，代码和内容的集合，可独立添加到游戏中的功能数据组件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UGameFeatureStateMachine&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;A state machine to manage transitioning a game feature plugin from just a URL into a fully loaded and active plugin, including registering its contents with other game systems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UObject，管理Game Feature从仅有URL已知到完全加载和激活的过程，包括将它的内容注册进其他的游戏系统。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UGameFeatureAction&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Represents an action to be taken when a game feature is activated.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UObject，代表一个Game Feature被激活时要执行的动作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UGameFeatureAction_WorldActionBase&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Base class for GameFeatureActions that wish to do something world specific.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UGameFeatureAction，Lyra中的GameFeatureAcitons基类，在Game Feature流程中触发的激活回调都会调用此类定义的回调函数。&lt;/p&gt;
&lt;h2 id=&#34;Flow-Diagram&#34;&gt;&lt;a href=&#34;#Flow-Diagram&#34; class=&#34;headerlink&#34; title=&#34;Flow Diagram&#34;&gt;&lt;/a&gt;Flow Diagram&lt;/h2&gt;&lt;img data-src=&#34;/2023/06/20/Lyra/Unreal%20Engine%205%20Lyra%20Starter%20Game%20Game%20Feature%20Work%20Flow.png&#34; class=&#34;&#34; title=&#34;Game Feature Work Flow&#34;&gt;

&lt;h2 id=&#34;State-Machine&#34;&gt;&lt;a href=&#34;#State-Machine&#34; class=&#34;headerlink&#34; title=&#34;State Machine&#34;&gt;&lt;/a&gt;State Machine&lt;/h2&gt;&lt;p&gt;在&lt;em&gt;Engine\Plugins\Experimental\GameFeatures\Source\GameFeatures\Public\GameFeatureTypes.h&lt;/em&gt;文件中查看所有状态的描述和定义。&lt;/p&gt;
&lt;p&gt;在&lt;em&gt;Engine\Plugins\Experimental\GameFeatures\Source\GameFeatures\Private\GameFeaturePluginStateMachine.cpp&lt;/em&gt;中有所有状态执行的动作逻辑（每个结构体都几乎会有个覆写的UpdateState函数）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Uninitialized: 初始状态，未设置、还未被设置、未初始化。&lt;/li&gt;
&lt;li&gt;UnknownStatus: 初始化后的状态，仅仅获取到该Game Feature的URL，其他信息均未知。（Game Feature信息有名称、是否确认启用、URL等，主要信息就是该Game Feature的URL。因为不知道URL到底是一个链接还是路径，所以未知）&lt;/li&gt;
&lt;li&gt;CheckingStatus: 检查中的状态，一种从UnknownStatus到StatusKnown的过渡状态。&lt;/li&gt;
&lt;li&gt;StatusKnown: 已经获取足够的Plugins信息后的状态，依据该信息进入Downloading或者Installed状态。(已经清楚该Game Feature的URL是链接或路径)&lt;/li&gt;
&lt;li&gt;Downloading: 如果Game Feature的URL是一个链接，就会进入该状态尝试下载。&lt;/li&gt;
&lt;li&gt;Installed: 处于该状态时，该Game Feature已经存在于硬盘。&lt;/li&gt;
&lt;li&gt;Mounting: 一种从Installed到Regsitered的过渡状态之一，会把该Game Feature反序列化并进行预加载。（好像也是加载该Game Feature C++模块的状态）&lt;/li&gt;
&lt;li&gt;WaitingForDependencies: 一种从Installed到Regsitered的过渡状态之一，如果该Game Feature有其他的依赖，并且未被加载，就会进入该状态。&lt;/li&gt;
&lt;li&gt;Registering: 一种从Installed到Regsitered的过渡状态之一，读取设置并注册该Game Feature所有的UE资产。&lt;/li&gt;
&lt;li&gt;Regsitered: 该Game Feature设置和资产已经被注册后所处的状态，可进入Loading状态。&lt;/li&gt;
&lt;li&gt;Loading: 该状态就代表正式加载Game Feature的资产进入内存。&lt;/li&gt;
&lt;li&gt;Loaded: Game Feature的所有相关数据和资产已经全部加载进入内存中，但没有与游戏系统一起注册，就会进入此状态，等待被激活。&lt;/li&gt;
&lt;li&gt;Activating: 与游戏系统一起注册，正式进入激活。&lt;/li&gt;
&lt;li&gt;Active: 全面激活，已经在游戏中产生影响和效果。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;Key-Implementation&#34;&gt;&lt;a href=&#34;#Key-Implementation&#34; class=&#34;headerlink&#34; title=&#34;Key Implementation&#34;&gt;&lt;/a&gt;Key Implementation&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Engine\Plugins\Experimental\GameFeatures\Source\GameFeatures\Private\GameFeaturesSubsystem.cpp&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameFeaturesSubsystem::LoadBuiltInGameFeaturePlugin&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; TSharedRef&amp;lt;IPlugin&amp;gt;&amp;amp; Plugin, FBuiltInPluginAdditionalFilters AdditionalFilter)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;UE_SCOPED_ENGINE_ACTIVITY&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Loading GameFeaturePlugin %s&amp;quot;&lt;/span&gt;), *Plugin-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UAssetManager::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;PushBulkScanning&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FString&amp;amp; PluginDescriptorFilename = Plugin-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetDescriptorFileName&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Make sure you are in a game feature plugins folder. All GameFeaturePlugins are rooted in a GameFeatures folder.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!PluginDescriptorFilename.&lt;span class=&#34;built_in&#34;&gt;IsEmpty&lt;/span&gt;() &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;GetDefault&lt;/span&gt;&amp;lt;UGameFeaturesSubsystemSettings&amp;gt;()-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;IsValidGameFeaturePlugin&lt;/span&gt;(FPaths::&lt;span class=&#34;built_in&#34;&gt;ConvertRelativePathToFull&lt;/span&gt;(PluginDescriptorFilename)) &amp;amp;&amp;amp; FPaths::&lt;span class=&#34;built_in&#34;&gt;FileExists&lt;/span&gt;(PluginDescriptorFilename))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FString PluginURL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bIsFileProtocol = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;GetPluginURLByName&lt;/span&gt;(Plugin-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;(), PluginURL))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			bIsFileProtocol = UGameFeaturesSubsystem::&lt;span class=&#34;built_in&#34;&gt;IsPluginURLProtocol&lt;/span&gt;(PluginURL, EGameFeaturePluginProtocol::File);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			PluginURL = &lt;span class=&#34;built_in&#34;&gt;GetPluginURL_FileProtocol&lt;/span&gt;(PluginDescriptorFilename);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// 检查该Game Feature是否存在及可否经过Game Feature加载策略的筛选&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bIsFileProtocol &amp;amp;&amp;amp; GameSpecificPolicies-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;IsPluginAllowed&lt;/span&gt;(PluginURL))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FGameFeaturePluginDetails PluginDetails;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;GetGameFeaturePluginDetails&lt;/span&gt;(PluginDescriptorFilename, PluginDetails))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				FBuiltInGameFeaturePluginBehaviorOptions BehaviorOptions;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bShouldProcess = &lt;span class=&#34;built_in&#34;&gt;AdditionalFilter&lt;/span&gt;(PluginDescriptorFilename, PluginDetails, BehaviorOptions);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// 给Game Feature建立状态机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bShouldProcess)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					UGameFeaturePluginStateMachine* StateMachine = &lt;span class=&#34;built_in&#34;&gt;FindOrCreateGameFeaturePluginStateMachine&lt;/span&gt;(PluginURL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; EBuiltInAutoState InitialAutoState = (BehaviorOptions.AutoStateOverride != EBuiltInAutoState::Invalid) ? BehaviorOptions.AutoStateOverride : PluginDetails.BuiltInAutoState;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; EGameFeaturePluginState DestinationState = &lt;span class=&#34;built_in&#34;&gt;ConvertInitialFeatureStateToTargetState&lt;/span&gt;(InitialAutoState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;comment&#34;&gt;// If we&amp;#x27;re already at the destination or beyond, don&amp;#x27;t transition back&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;function&#34;&gt;FGameFeaturePluginStateRange &lt;span class=&#34;title&#34;&gt;Destination&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(DestinationState, EGameFeaturePluginState::Active)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;comment&#34;&gt;// 加载Game Feature插件，初始化状态机。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;built_in&#34;&gt;ChangeGameFeatureDestination&lt;/span&gt;(StateMachine, Destination, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						FGameFeaturePluginChangeStateComplete::&lt;span class=&#34;built_in&#34;&gt;CreateUObject&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &amp;amp;ThisClass::LoadBuiltInGameFeaturePluginComplete, StateMachine, Destination));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UAssetManager::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;PopBulkScanning&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameFeaturesSubsystem::ChangeGameFeatureDestination&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(UGameFeaturePluginStateMachine* Machine, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameFeaturePluginStateRange&amp;amp; StateRange, FGameFeaturePluginChangeStateComplete CompleteDelegate)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Machine-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;SetDestination&lt;/span&gt;(StateRange, FGameFeatureStateTransitionComplete::&lt;span class=&#34;built_in&#34;&gt;CreateUObject&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &amp;amp;ThisClass::ChangeGameFeatureTargetStateComplete, CompleteDelegate));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// ......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 当Game Feature达到Registering状态时，Game Feature Action的Registering回调会被调用。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameFeaturesSubsystem::OnGameFeatureRegistering&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UGameFeatureData* GameFeatureData, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FString&amp;amp; PluginName, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FString&amp;amp; PluginURL)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;CallbackObservers&lt;/span&gt;(EObserverCallback::Registering, PluginURL, &amp;amp;PluginName, GameFeatureData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (UGameFeatureAction* Action : GameFeatureData-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetActions&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Action != &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Action-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;OnGameFeatureRegistering&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 当Game Feature达到Activating状态时，Game Feature Action的Activating回调会被调用。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameFeaturesSubsystem::OnGameFeatureActivating&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UGameFeatureData* GameFeatureData, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FString&amp;amp; PluginName, FGameFeatureActivatingContext&amp;amp; Context, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FString&amp;amp; PluginURL)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;CallbackObservers&lt;/span&gt;(EObserverCallback::Activating, PluginURL, &amp;amp;PluginName, GameFeatureData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (UGameFeatureAction* Action : GameFeatureData-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetActions&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Action != &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Action-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;OnGameFeatureActivating&lt;/span&gt;(Context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Engine\Plugins\Experimental\GameFeatures\Private\GameFeaturePluginStateMachine.cpp&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;240&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameFeaturePluginStateMachine::SetDestination&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(FGameFeaturePluginStateRange InDestination, FGameFeatureStateTransitionComplete OnFeatureStateTransitionComplete, FDelegateHandle* OutCallbackHandle &lt;span class=&#34;comment&#34;&gt;/*= nullptr*/&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;IsValidDestinationState&lt;/span&gt;(InDestination.MinState));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;IsValidDestinationState&lt;/span&gt;(InDestination.MaxState));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!InDestination.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Invalid range&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (CurrentStateInfo.State == EGameFeaturePluginState::Terminal &amp;amp;&amp;amp; !InDestination.&lt;span class=&#34;built_in&#34;&gt;Contains&lt;/span&gt;(EGameFeaturePluginState::Terminal))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Can&amp;#x27;t tranistion away from terminal state&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;built_in&#34;&gt;IsRunning&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Not running so any new range is acceptable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OutCallbackHandle)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			OutCallbackHandle-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;Reset&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FDestinationGameFeaturePluginState* CurrState = AllStates[CurrentStateInfo.State]-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AsDestinationState&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (InDestination.&lt;span class=&#34;built_in&#34;&gt;Contains&lt;/span&gt;(CurrentStateInfo.State))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			OnFeatureStateTransitionComplete.&lt;span class=&#34;built_in&#34;&gt;ExecuteIfBound&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;MakeValue&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (CurrentStateInfo.State &amp;lt; InDestination)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FDestinationGameFeaturePluginState* MinDestState = AllStates[InDestination.MinState]-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AsDestinationState&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FDelegateHandle CallbackHandle = MinDestState-&amp;gt;OnDestinationStateReached.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;MoveTemp&lt;/span&gt;(OnFeatureStateTransitionComplete));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OutCallbackHandle)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				*OutCallbackHandle = CallbackHandle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (CurrentStateInfo.State &amp;gt; InDestination)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FDestinationGameFeaturePluginState* MaxDestState = AllStates[InDestination.MaxState]-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AsDestinationState&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FDelegateHandle CallbackHandle = MaxDestState-&amp;gt;OnDestinationStateReached.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;MoveTemp&lt;/span&gt;(OnFeatureStateTransitionComplete));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OutCallbackHandle)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				*OutCallbackHandle = CallbackHandle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		StateProperties.Destination = InDestination;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;UpdateStateMachine&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (TOptional&amp;lt;FGameFeaturePluginStateRange&amp;gt; NewDestination = StateProperties.Destination.&lt;span class=&#34;built_in&#34;&gt;Intersect&lt;/span&gt;(InDestination))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// The machine is already running so we can only transition to this range if it overlaps with our current range.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// We can satisfy both ranges in this case.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OutCallbackHandle)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			OutCallbackHandle-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;Reset&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (CurrentStateInfo.State &amp;lt; StateProperties.Destination)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			StateProperties.Destination = *NewDestination;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (InDestination.&lt;span class=&#34;built_in&#34;&gt;Contains&lt;/span&gt;(CurrentStateInfo.State))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				OnFeatureStateTransitionComplete.&lt;span class=&#34;built_in&#34;&gt;ExecuteIfBound&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;MakeValue&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FDestinationGameFeaturePluginState* MinDestState = AllStates[InDestination.MinState]-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AsDestinationState&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FDelegateHandle CallbackHandle = MinDestState-&amp;gt;OnDestinationStateReached.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;MoveTemp&lt;/span&gt;(OnFeatureStateTransitionComplete));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OutCallbackHandle)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				*OutCallbackHandle = CallbackHandle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(CurrentStateInfo.State &amp;gt; StateProperties.Destination)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			StateProperties.Destination = *NewDestination;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (InDestination.&lt;span class=&#34;built_in&#34;&gt;Contains&lt;/span&gt;(CurrentStateInfo.State))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				OnFeatureStateTransitionComplete.&lt;span class=&#34;built_in&#34;&gt;ExecuteIfBound&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;MakeValue&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FDestinationGameFeaturePluginState* MaxDestState = AllStates[InDestination.MaxState]-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AsDestinationState&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FDelegateHandle CallbackHandle = MaxDestState-&amp;gt;OnDestinationStateReached.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;MoveTemp&lt;/span&gt;(OnFeatureStateTransitionComplete));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OutCallbackHandle)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				*OutCallbackHandle = CallbackHandle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;checkf&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;IsRunning() returned true but state machine has reached destination!&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// The requested state range is completely outside the the current state range so reject the request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameFeaturePluginStateMachine::UpdateStateMachine&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	EGameFeaturePluginState CurrentState = &lt;span class=&#34;built_in&#34;&gt;GetCurrentState&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bInUpdateStateMachine)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogGameFeatures, Verbose, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Game feature state machine skipping update for %s in ::UpdateStateMachine. Current State: %s&amp;quot;&lt;/span&gt;), *&lt;span class=&#34;built_in&#34;&gt;GetGameFeatureName&lt;/span&gt;(), *UE::GameFeatures::&lt;span class=&#34;built_in&#34;&gt;ToString&lt;/span&gt;(CurrentState));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	TOptional&amp;lt;TGuardValue&amp;lt;&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class=&#34;built_in&#34;&gt;ScopeGuard&lt;/span&gt;(InPlace, bInUpdateStateMachine, &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; StateIt = std::underlying_type&amp;lt;EGameFeaturePluginState&amp;gt;::type;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; DoCallbacks = [&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;](&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UE::GameFeatures::FResult&amp;amp; Result, StateIt Begin, StateIt End)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (StateIt iState = Begin; iState &amp;lt; End; ++iState)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (FDestinationGameFeaturePluginState* DestState = AllStates[iState]-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AsDestinationState&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Use a local callback on the stack. If SetDestination() is called from the callback then we don&amp;#x27;t want to stomp the callback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// for the new state transition request.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Callback from terminal state could also trigger a GC that would destroy the state machine&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				FDestinationGameFeaturePluginState::FOnDestinationStateReached &lt;span class=&#34;built_in&#34;&gt;LocalOnDestinationStateReached&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;MoveTemp&lt;/span&gt;(DestState-&amp;gt;OnDestinationStateReached));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				DestState-&amp;gt;OnDestinationStateReached.&lt;span class=&#34;built_in&#34;&gt;Clear&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				LocalOnDestinationStateReached.&lt;span class=&#34;built_in&#34;&gt;Broadcast&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, Result);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; DoCallback = [&amp;amp;DoCallbacks](&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UE::GameFeatures::FResult&amp;amp; Result, StateIt InState)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;DoCallbacks&lt;/span&gt;(Result, InState, InState + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bKeepProcessing = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int32 NumTransitions = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; int32 MaxTransitions = &lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		bKeepProcessing = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FGameFeaturePluginStateStatus StateStatus;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// 达到注册状态才会开始加载Game Feature Data资产。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		AllStates[CurrentState]-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;UpdateState&lt;/span&gt;(StateStatus);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (StateStatus.TransitionToState == CurrentState)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogGameFeatures, Fatal, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Game feature state %s transitioning to itself. GameFeature: %s&amp;quot;&lt;/span&gt;), *UE::GameFeatures::&lt;span class=&#34;built_in&#34;&gt;ToString&lt;/span&gt;(CurrentState), *&lt;span class=&#34;built_in&#34;&gt;GetGameFeatureName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (StateStatus.TransitionToState != EGameFeaturePluginState::Uninitialized)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogGameFeatures, Verbose, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Game feature &amp;#x27;%s&amp;#x27; transitioning state (%s -&amp;gt; %s)&amp;quot;&lt;/span&gt;), *&lt;span class=&#34;built_in&#34;&gt;GetGameFeatureName&lt;/span&gt;(), *UE::GameFeatures::&lt;span class=&#34;built_in&#34;&gt;ToString&lt;/span&gt;(CurrentState), *UE::GameFeatures::&lt;span class=&#34;built_in&#34;&gt;ToString&lt;/span&gt;(StateStatus.TransitionToState));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			AllStates[CurrentState]-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;EndState&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			CurrentStateInfo = &lt;span class=&#34;built_in&#34;&gt;FGameFeaturePluginStateInfo&lt;/span&gt;(StateStatus.TransitionToState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			CurrentState = StateStatus.TransitionToState;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(CurrentState != EGameFeaturePluginState::MAX);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			AllStates[CurrentState]-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;BeginState&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (CurrentState == EGameFeaturePluginState::Terminal)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Remove from gamefeature subsystem before calling back in case this GFP is reloaded on callback,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// but make sure we don&amp;#x27;t get destroyed from a GC during a callback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				UGameFeaturesSubsystem::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;BeginTermination&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (StateProperties.bTryCancel &amp;amp;&amp;amp; AllStates[CurrentState]-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetStateType&lt;/span&gt;() != EGameFeaturePluginStateType::Transition)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				StateProperties.Destination = &lt;span class=&#34;built_in&#34;&gt;FGameFeaturePluginStateRange&lt;/span&gt;(CurrentState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				StateProperties.bTryCancel = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				bKeepProcessing = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Make sure bInUpdateStateMachine is not set while processing callbacks if we are at our destination&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ScopeGuard.&lt;span class=&#34;built_in&#34;&gt;Reset&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// For all callbacks, return the CanceledResult&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;DoCallbacks&lt;/span&gt;(UE::GameFeatures::CanceledResult, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, EGameFeaturePluginState::MAX);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Must be called after transtition callbacks, UGameFeaturesSubsystem::ChangeGameFeatureTargetStateComplete may remove the this machine from the subsystem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;function&#34;&gt;FGameFeaturePluginStateMachineProperties::FOnTransitionCanceled &lt;span class=&#34;title&#34;&gt;LocalOnTransitionCanceled&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(MoveTemp(StateProperties.OnTransitionCanceled))&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				StateProperties.OnTransitionCanceled.&lt;span class=&#34;built_in&#34;&gt;Clear&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				LocalOnTransitionCanceled.&lt;span class=&#34;built_in&#34;&gt;Broadcast&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bError = !StateStatus.TransitionResult.&lt;span class=&#34;built_in&#34;&gt;HasValue&lt;/span&gt;(); bError)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;IsValidErrorState&lt;/span&gt;(CurrentState));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				StateProperties.Destination = &lt;span class=&#34;built_in&#34;&gt;FGameFeaturePluginStateRange&lt;/span&gt;(CurrentState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				bKeepProcessing = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Make sure bInUpdateStateMachine is not set while processing callbacks if we are at our destination&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ScopeGuard.&lt;span class=&#34;built_in&#34;&gt;Reset&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// In case of an error, callback all possible callbacks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;DoCallbacks&lt;/span&gt;(StateStatus.TransitionResult, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, EGameFeaturePluginState::MAX);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				bKeepProcessing = AllStates[CurrentState]-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetStateType&lt;/span&gt;() == EGameFeaturePluginStateType::Transition || !StateProperties.Destination.&lt;span class=&#34;built_in&#34;&gt;Contains&lt;/span&gt;(CurrentState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!bKeepProcessing)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;comment&#34;&gt;// Make sure bInUpdateStateMachine is not set while processing callbacks if we are at our destination&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					ScopeGuard.&lt;span class=&#34;built_in&#34;&gt;Reset&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;DoCallback&lt;/span&gt;(StateStatus.TransitionResult, CurrentState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (CurrentState == EGameFeaturePluginState::Terminal)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(bKeepProcessing == &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Now that callbacks are done this machine can be cleaned up&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				UGameFeaturesSubsystem::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;FinishTermination&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;MarkAsGarbage&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (NumTransitions++ &amp;gt; MaxTransitions)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogGameFeatures, Fatal, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Infinite loop in game feature state machine transitions. Current state %s. GameFeature: %s&amp;quot;&lt;/span&gt;), *UE::GameFeatures::&lt;span class=&#34;built_in&#34;&gt;ToString&lt;/span&gt;(CurrentState), *&lt;span class=&#34;built_in&#34;&gt;GetGameFeatureName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (bKeepProcessing);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Engine\Plugins\Experimental\GameFeatures\Source\GameFeatures\Private\GameFeaturePluginStateMachine.cpp&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;FGameFeaturePluginState_Registering&lt;/span&gt; : &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; FGameFeaturePluginState&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UpdateState&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(FGameFeaturePluginStateStatus&amp;amp; StateStatus)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;override&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;TRACE_CPUPROFILER_EVENT_SCOPE&lt;/span&gt;(GFP_Registering);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FString PluginFolder = FPaths::&lt;span class=&#34;built_in&#34;&gt;GetPath&lt;/span&gt;(StateProperties.PluginInstalledFilename);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		UGameplayTagsManager::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;AddTagIniSearchPath&lt;/span&gt;(PluginFolder / &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Config&amp;quot;&lt;/span&gt;) / &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Tags&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FString BackupGameFeatureDataPath = FString::&lt;span class=&#34;built_in&#34;&gt;Printf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;/%s/%s.%s&amp;quot;&lt;/span&gt;), *StateProperties.PluginName, *StateProperties.PluginName, *StateProperties.PluginName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FString PreferredGameFeatureDataPath = &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;) + StateProperties.PluginName + &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;/GameFeatureData.GameFeatureData&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Allow game feature location to be overriden globally and from within the plugin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FString OverrideIniPathName = StateProperties.PluginName + &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;_Override&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FString OverridePath = GConfig-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetStr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;GameFeatureData&amp;quot;&lt;/span&gt;), *OverrideIniPathName, GGameIni);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OverridePath.&lt;span class=&#34;built_in&#34;&gt;IsEmpty&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FString SettingsOverride = PluginFolder / &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Config&amp;quot;&lt;/span&gt;) / &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Settings.ini&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (FPaths::&lt;span class=&#34;built_in&#34;&gt;FileExists&lt;/span&gt;(SettingsOverride))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				GConfig-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;LoadFile&lt;/span&gt;(SettingsOverride);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				OverridePath = GConfig-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetStr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;GameFeatureData&amp;quot;&lt;/span&gt;), &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Override&amp;quot;&lt;/span&gt;), SettingsOverride);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				GConfig-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;UnloadFile&lt;/span&gt;(SettingsOverride);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!OverridePath.&lt;span class=&#34;built_in&#34;&gt;IsEmpty&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			PreferredGameFeatureDataPath = OverridePath;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; LoadGameFeatureData = [](&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FString&amp;amp; Path) -&amp;gt; UGameFeatureData*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			TSharedPtr&amp;lt;FStreamableHandle&amp;gt; GameFeatureDataHandle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (FPackageName::&lt;span class=&#34;built_in&#34;&gt;DoesPackageExist&lt;/span&gt;(Path))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;//开始加载Game Feature Data资产。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				GameFeatureDataHandle = UGameFeaturesSubsystem::&lt;span class=&#34;built_in&#34;&gt;LoadGameFeatureData&lt;/span&gt;(Path);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// @todo make this async. For now we just wait&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (GameFeatureDataHandle.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					GameFeatureDataHandle-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;WaitUntilComplete&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Cast&lt;/span&gt;&amp;lt;UGameFeatureData&amp;gt;(GameFeatureDataHandle-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetLoadedAsset&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		StateProperties.GameFeatureData = &lt;span class=&#34;built_in&#34;&gt;LoadGameFeatureData&lt;/span&gt;(PreferredGameFeatureDataPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!StateProperties.GameFeatureData)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			StateProperties.GameFeatureData = &lt;span class=&#34;built_in&#34;&gt;LoadGameFeatureData&lt;/span&gt;(BackupGameFeatureDataPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (StateProperties.GameFeatureData)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			StateProperties.GameFeatureData-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;InitializeBasePluginIniFile&lt;/span&gt;(StateProperties.PluginInstalledFilename);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			StateStatus.&lt;span class=&#34;built_in&#34;&gt;SetTransition&lt;/span&gt;(EGameFeaturePluginState::Registered);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(StateProperties.AddedPrimaryAssetTypes.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;() == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			UGameFeaturesSubsystem::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;AddGameFeatureToAssetManager&lt;/span&gt;(StateProperties.GameFeatureData, StateProperties.PluginName, StateProperties.AddedPrimaryAssetTypes);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// 触发Game Feature Registering回调委托&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			UGameFeaturesSubsystem::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;OnGameFeatureRegistering&lt;/span&gt;(StateProperties.GameFeatureData, StateProperties.PluginName, StateProperties.PluginIdentifier.&lt;span class=&#34;built_in&#34;&gt;GetFullPluginURL&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// The gamefeaturedata does not exist. The pak file may not be openable or this is a builtin plugin where the pak file does not exist.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			StateStatus.&lt;span class=&#34;built_in&#34;&gt;SetTransitionError&lt;/span&gt;(EGameFeaturePluginState::ErrorRegistering, &lt;span class=&#34;built_in&#34;&gt;GetErrorResult&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Plugin_Missing_GameFeatureData&amp;quot;&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;Game-Abilities-System&#34;&gt;&lt;a href=&#34;#Game-Abilities-System&#34; class=&#34;headerlink&#34; title=&#34;Game Abilities System&#34;&gt;&lt;/a&gt;Game Abilities System&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;The Gameplay Ability System is a highly flexible framework for building the types of abilities and attributes that you might find in an RPG or MOBA title. You can build actions or passive abilities for the characters in your games to use, and status effects that can build up or wear down various attributes as a result of these actions, additionally you can implement “cooldown” timers or resource costs to regulate the usage of these actions, change the level of the ability and its effects at each level, activate particle, sound effects, and more. The Gameplay Ability System can help you to design, implement, and efficiently network in-game abilities from as simple as jumping to as complex as your favorite character’s ability set in any modern RPG or MOBA title.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;游戏技能系统是一个高度灵活的Gameplay框架，虽说相当合适做RPG或者MOBA，但是其实用来做别的类型应该也可以。&lt;/p&gt;
&lt;h2 id=&#34;Key-Concept&#34;&gt;&lt;a href=&#34;#Key-Concept&#34; class=&#34;headerlink&#34; title=&#34;Key Concept&#34;&gt;&lt;/a&gt;Key Concept&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Gameplay Cue&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Gameplay Cues are Actors and UObjects responsible for running visual and sound effects, and are the preferred method for replicating cosmetic feedback in a multiplayer game. When you create a Gameplay Cue, you run the logic for the effects you want to play inside its Event Graph. Gameplay Cues can be associated with a series of Gameplay Tags, and any Gameplay Effect matching those tags will automatically apply them. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Gameplay Cue极度依赖Gameplay Tag去添加、运行视觉特效和音效，在Cpp中没有明确的UGameplayCue类，但有UGameplayCueManager这种管理类，负责分发Gameplay Cue和生成GameplayCueNotify Actor。&lt;/p&gt;
&lt;h2 id=&#34;Key-Class-1&#34;&gt;&lt;a href=&#34;#Key-Class-1&#34; class=&#34;headerlink&#34; title=&#34;Key Class&#34;&gt;&lt;/a&gt;Key Class&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;UAbilitySystemComponent&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The core ActorComponent for interfacing with the Gameplay Abilities System.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UGameplayTasksComponent、IGameplayTagAssetInteface和IAbilitySystemReplicationProxyInterface，与游戏玩法技能系统交互的核心Actor组件，所有打算使用Gameplay Abilities System的Actor必须拥有该组件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UGameplayAbility&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Abilities define custom gameplay logic that can be activated by players or external game logic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UObject和IGameplayTaskOwnerInterface，游戏技能的玩法逻辑定义和实现，可由玩家激活或者外部游戏逻辑。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FGameplayAttribute&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Describes a FGameplayAttributeData or float property inside an attribute set. Using this provides editor UI and helper functions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用来存储游戏数值和相关属性的结构体，例如移动速度、健康值、攻击速度等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UGameplayAbilitySet&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;This is an example DataAsset that could be used for defining a set of abilities to give to an AbilitySystemComponent and bind to an input command.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UDataAsset，一个数据资产定义，包含着UGameplayAbility成员和EGameplayAbilityInputBind成员的结构体数组，其中EGameplayAbility是负责输入绑定的枚举定义。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FGameplayAbilitySpec&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;An activatable ability spec, hosted on the ability system component. This defines both what the ability is (what class, what level, input binding etc)&lt;br&gt;and also holds runtime state that must be kept outside of the ability being instanced&amp;#x2F;activated.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承FFastArraySerializerItem，可激活技能的详细信息类，一般由技能系统组件管理。该类包含技能的详细定义信息（类型、等级、输入绑定等），并且保持未被实例化或者未被激活的技能的运行状态。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FGameplayAbilitySpecHandle&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Handle that points to a specific granted ability. These are globally unique.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;全局唯一，指向特定要赋予的技能的引用。只有一个32位整数成员。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FGameplayAbilityActorInfo&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Cached data associated with an Actor using an Ability.&lt;br&gt;-Initialized from an AActor* in InitFromActor&lt;br&gt;-Abilities use this to know what to actor upon. E.g., instead of being coupled to a specific actor class.&lt;br&gt;-These are generally passed around as pointers to support polymorphism.&lt;br&gt;-Projects can override UAbilitySystemGlobals::AllocAbilityActorInfo to override the default struct type that is created.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用来缓存使用该技能的Actor信息类。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FGameplayAbilityActivationInfo&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Data tied to a specific activation of an ability.&lt;br&gt;-Tell us whether we are the authority, if we are predicting, confirmed, etc.&lt;br&gt;-Holds current and previous PredictionKey&lt;br&gt;-Generally not meant to be subclassed in projects.&lt;br&gt;-Passed around by value since the struct is small.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;技能激活的相关信息类。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UGameplayEffect&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The GameplayEffect definition. This is the data asset defined in the editor that drives everything.&lt;br&gt;This is only blueprintable to allow for templating gameplay effects. Gameplay effects should NOT contain blueprint graphs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UObject和IGameplayTagAssetInterface，字面意思似乎是玩法效果，容易理解成特效美术相关的意义。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Gameplay Effects provide a way to alter Gameplay Attributes instantaneously or over time (commonly known as “buffs” and “debuffs”), such as subtracting magic points when casting a spell, granting a movement speed boost while a “Sprint” Ability is active, or gradually restoring health points over the lifetime of a dose of healing medicine.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实际上根据官方文档、注释描述和具体的蓝图脚本逻辑，这是在游戏运行时随意改动Game Attributes的类，可以理解成一个游戏增益&amp;#x2F;减益效果的类，比如按Shift进行冲刺可以是一种加速增益、遭到毒药侵害随时间减少健康值是一种伤害性减益。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FGameplayEffectSpec&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;GameplayEffect Specification. Tells us:&lt;br&gt;-What UGameplayEffect (const data)&lt;br&gt;-What Level&lt;br&gt;-Who instigated&lt;br&gt;FGameplayEffectSpec is modifiable. We start with initial conditions and modifications be applied to it. In this sense, it is stateful&amp;#x2F;mutable but it&lt;br&gt;is still distinct from an FActiveGameplayEffect which in an applied instance of an FGameplayEffectSpec.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;技能效果的详细信息类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UAttributeSet&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Defines the set of all GameplayAttributes for your game&lt;br&gt;Games should subclass this and add FGameplayAttributeData properties to represent attributes like health, damage, etc&lt;br&gt;AttributeSets are added to the actors as subobjects, and then registered with the AbilitySystemComponent&lt;br&gt;It often desired to have several sets per project that inherit from each other&lt;br&gt;You could make a base health set, then have a player set that inherits from it and adds more attributes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UObject，可以添加给Actor的属性集合类，会被注册进AbilitySystemComponent，GameEffect的逻辑及相关数值计算都会影响此类的成员。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FGameplayEffectExecutionDefinition&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Struct representing the definition of a custom execution for a gameplay effect.&lt;br&gt;Custom executions run special logic from an outside class each time the gameplay effect executes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;游戏效果的具体逻辑执行定义的结构体，每一次游戏效果的执行都可以从外部类中运行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UGameplayEffectCalculation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;继承UObject&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UGameplayEffectExecutionCalculation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;继承UGameplayEffectCalculation，有虚成员函数Execute，负责执行游戏效果的具体逻辑和相关的机制计算。&lt;/p&gt;
&lt;h2 id=&#34;Flow-Diagram-1&#34;&gt;&lt;a href=&#34;#Flow-Diagram-1&#34; class=&#34;headerlink&#34; title=&#34;Flow Diagram&#34;&gt;&lt;/a&gt;Flow Diagram&lt;/h2&gt;&lt;img data-src=&#34;/2023/06/20/Lyra/Unreal%20Engine%205%20Lyra%20Starter%20Game%20Game%20Ability%20System%20Work%20Flow.png&#34; class=&#34;&#34; title=&#34;Game Ability System Work Flow&#34;&gt;

&lt;h2 id=&#34;Key-Implementation-1&#34;&gt;&lt;a href=&#34;#Key-Implementation-1&#34; class=&#34;headerlink&#34; title=&#34;Key Implementation&#34;&gt;&lt;/a&gt;Key Implementation&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Engine\Plugins\Runtime\GameplayAbilities\Source\GameplayAbilities\Private\Abilties\GameplayAbilitySet.cpp&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameplayAbilitySet::GiveAbilities&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(UAbilitySystemComponent* AbilitySystemComponent)&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityBindInfo&amp;amp; BindInfo : Abilities)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (BindInfo.GameplayAbilityClass)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			AbilitySystemComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GiveAbility&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;FGameplayAbilitySpec&lt;/span&gt;(BindInfo.GameplayAbilityClass, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, (int32)BindInfo.Command));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Engine\Plugins\Runtime\GameplayAbilities\Source\GameplayAbilities\Private\AbilitySystemComponent_Abilities.cpp&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;246&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;247&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;248&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;249&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;250&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;251&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;252&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;253&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;254&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;257&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;258&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;259&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;260&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;261&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;262&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;263&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;264&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;265&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;266&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;267&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;268&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;269&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;270&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;271&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;272&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;273&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;274&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;275&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;276&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;277&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;278&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;279&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;280&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;281&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;282&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;283&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;284&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;285&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;286&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;287&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;288&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;289&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;291&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;292&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;293&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;294&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;295&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;296&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;297&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;298&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;299&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;300&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;301&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;302&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;303&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;304&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;305&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;306&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;307&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;308&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;309&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;310&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;311&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;312&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;313&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;314&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;315&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;316&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;317&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;318&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;319&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;320&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;321&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;322&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;323&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;324&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;325&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;326&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;327&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;328&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;329&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;330&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;331&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;332&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;334&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;335&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;336&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;337&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;338&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;339&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;340&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;341&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;342&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;343&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;344&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;345&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;346&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;347&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;348&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;349&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;350&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;351&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;352&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;353&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;354&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;355&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;356&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;357&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;358&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;359&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;360&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;361&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;362&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;363&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;364&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;365&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;366&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;367&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;368&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;369&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;370&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;371&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;372&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;373&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;374&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;375&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;376&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;377&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;378&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;379&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;380&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;381&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;382&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;383&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;384&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;385&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;386&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;387&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;388&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;389&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;390&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;391&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;392&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;393&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;394&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;395&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;396&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;397&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;398&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;399&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;400&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;402&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;403&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;404&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;405&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;406&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;407&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;408&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;409&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;410&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;411&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;412&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;413&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;414&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;415&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;416&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;417&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;418&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;419&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;420&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;421&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;422&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;423&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;424&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;425&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;426&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;427&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;428&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;429&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;430&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;431&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;432&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;433&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;434&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;435&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;436&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;437&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;438&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;439&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;440&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;441&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;442&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;443&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;445&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;446&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;447&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;448&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;449&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;450&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;451&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;452&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;453&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;454&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;455&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;456&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;457&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;458&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;459&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;460&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;461&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;462&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;463&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;464&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;465&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;466&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;467&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;468&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;469&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;470&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;471&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;472&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;473&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;474&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;475&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;476&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;477&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;478&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;479&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;480&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;481&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;482&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;483&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;484&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;485&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;486&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;487&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;488&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;489&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;490&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;491&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;492&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;493&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;494&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;495&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;496&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;497&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;498&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;499&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;500&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;501&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;502&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;503&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;504&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;505&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;506&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;507&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;508&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;509&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;510&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;511&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;512&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;513&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;514&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;515&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;516&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;517&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;518&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;519&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;520&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;521&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;522&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;523&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;524&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;525&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;526&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;527&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;528&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;529&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;530&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;531&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;532&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;533&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;534&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;535&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;536&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;538&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;539&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;540&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;541&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;542&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;543&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;544&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;545&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;546&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;547&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;548&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;549&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;550&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;551&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;552&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;553&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;554&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;555&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;556&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;557&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;558&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;559&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;560&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;561&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;562&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;563&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;564&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;565&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;566&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;567&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;568&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;569&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;570&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;571&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;572&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;573&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;574&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;575&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;576&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;577&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;578&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;579&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;580&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;581&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;582&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;583&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;584&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;585&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;586&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;587&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;588&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;589&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;590&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;591&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;592&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;593&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;594&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;595&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;596&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;597&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;598&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;599&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;600&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;601&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;602&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;603&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;604&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;605&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;606&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;607&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;608&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;609&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;610&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;611&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;612&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;613&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;614&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;615&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;616&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;617&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;618&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;619&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;620&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;621&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;622&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;623&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;624&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;625&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;626&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;627&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;628&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;629&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;630&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;631&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;632&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;633&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;634&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;635&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;636&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;637&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;638&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;639&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;640&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;641&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;642&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;644&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;645&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;646&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;647&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;648&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;649&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;650&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;651&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;652&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;653&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;654&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;655&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;656&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;657&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;658&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;659&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;660&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;661&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;662&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;663&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;664&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;665&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;666&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;667&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;668&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;669&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;670&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;671&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;672&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;673&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;674&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;675&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;676&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;677&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;678&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;679&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;680&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;681&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;682&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;683&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;684&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;685&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;686&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;687&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;688&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;689&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;690&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;691&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;692&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;693&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;694&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;695&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;696&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;697&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;698&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;699&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;700&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;701&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;702&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;703&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;704&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;705&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;706&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;707&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;708&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;709&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;710&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;711&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;712&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;713&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;714&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;715&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;716&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;717&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;718&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;719&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;720&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;721&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;722&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;723&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;724&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;725&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;726&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;727&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;728&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;729&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;730&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;731&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;732&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;733&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;734&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;735&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;736&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;737&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;738&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;739&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;740&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;741&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;742&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;743&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;744&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;745&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;746&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;747&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;748&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;749&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;750&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;751&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;FGameplayAbilitySpecHandle &lt;span class=&#34;title&#34;&gt;UAbilitySystemComponent::GiveAbility&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilitySpec&amp;amp; Spec)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;(Spec.Ability))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Error, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;GiveAbility called with an invalid Ability Class.&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FGameplayAbilitySpecHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;built_in&#34;&gt;IsOwnerActorAuthoritative&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Error, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;GiveAbility called on ability %s on the client, not allowed!&amp;quot;&lt;/span&gt;), *Spec.Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FGameplayAbilitySpecHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// If locked, add to pending list. The Spec.Handle is not regenerated when we receive, so returning this is ok.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (AbilityScopeLockCount &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		AbilityPendingAdds.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(Spec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Spec.Handle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;ABILITYLIST_SCOPE_LOCK&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// 把技能添加到该技能系统组件的技能容器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FGameplayAbilitySpec&amp;amp; OwnedSpec = ActivatableAbilities.Items[ActivatableAbilities.Items.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(Spec)];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//网络复制相关，检查技能实例化策略，是否需要将技能在Actor上进行实例化。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OwnedSpec.Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetInstancingPolicy&lt;/span&gt;() == EGameplayAbilityInstancingPolicy::InstancedPerActor)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Create the instance at creation time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;CreateNewInstanceOfAbility&lt;/span&gt;(OwnedSpec, Spec.Ability);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;OnGiveAbility&lt;/span&gt;(OwnedSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;MarkAbilitySpecDirty&lt;/span&gt;(OwnedSpec, &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; OwnedSpec.Handle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;FGameplayAbilitySpecHandle &lt;span class=&#34;title&#34;&gt;UAbilitySystemComponent::GiveAbilityAndActivateOnce&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(FGameplayAbilitySpec&amp;amp; Spec, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayEventData* GameplayEventData)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;(Spec.Ability))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Error, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;GiveAbilityAndActivateOnce called with an invalid Ability Class.&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FGameplayAbilitySpecHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Spec.Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetInstancingPolicy&lt;/span&gt;() == EGameplayAbilityInstancingPolicy::NonInstanced || Spec.Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() == EGameplayAbilityNetExecutionPolicy::LocalOnly)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Error, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;GiveAbilityAndActivateOnce called on ability %s that is non instanced or won&amp;#x27;t execute on server, not allowed!&amp;quot;&lt;/span&gt;), *Spec.Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FGameplayAbilitySpecHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;built_in&#34;&gt;IsOwnerActorAuthoritative&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Error, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;GiveAbilityAndActivateOnce called on ability %s on the client, not allowed!&amp;quot;&lt;/span&gt;), *Spec.Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FGameplayAbilitySpecHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Spec.bActivateOnce = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FGameplayAbilitySpecHandle AddedAbilityHandle = &lt;span class=&#34;built_in&#34;&gt;GiveAbility&lt;/span&gt;(Spec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FGameplayAbilitySpec* FoundSpec = &lt;span class=&#34;built_in&#34;&gt;FindAbilitySpecFromHandle&lt;/span&gt;(AddedAbilityHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (FoundSpec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FoundSpec-&amp;gt;RemoveAfterActivation = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;built_in&#34;&gt;InternalTryActivateAbility&lt;/span&gt;(AddedAbilityHandle, &lt;span class=&#34;built_in&#34;&gt;FPredictionKey&lt;/span&gt;(), &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;, GameplayEventData))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// We failed to activate it, so remove it now&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;ClearAbility&lt;/span&gt;(AddedAbilityHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FGameplayAbilitySpecHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; AddedAbilityHandle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UAbilitySystemComponent::TryActivateAbilitiesByTag&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayTagContainer&amp;amp; GameplayTagContainer, &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bAllowRemoteActivation)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	TArray&amp;lt;FGameplayAbilitySpec*&amp;gt; AbilitiesToActivate;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;GetActivatableGameplayAbilitySpecsByAllMatchingTags&lt;/span&gt;(GameplayTagContainer, AbilitiesToActivate);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bSuccess = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; GameplayAbilitySpec : AbilitiesToActivate)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		bSuccess |= &lt;span class=&#34;built_in&#34;&gt;TryActivateAbility&lt;/span&gt;(GameplayAbilitySpec-&amp;gt;Handle, bAllowRemoteActivation);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; bSuccess;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UAbilitySystemComponent::TryActivateAbilityByClass&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(TSubclassOf&amp;lt;UGameplayAbility&amp;gt; InAbilityToActivate, &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bAllowRemoteActivation)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bSuccess = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UGameplayAbility* &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; InAbilityCDO = InAbilityToActivate.&lt;span class=&#34;built_in&#34;&gt;GetDefaultObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilitySpec&amp;amp; Spec : ActivatableAbilities.Items)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Spec.Ability == InAbilityCDO)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			bSuccess |= &lt;span class=&#34;built_in&#34;&gt;TryActivateAbility&lt;/span&gt;(Spec.Handle, bAllowRemoteActivation);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; bSuccess;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UAbilitySystemComponent::TryActivateAbility&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(FGameplayAbilitySpecHandle AbilityToActivate, &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bAllowRemoteActivation)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FGameplayTagContainer FailureTags;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FGameplayAbilitySpec* Spec = &lt;span class=&#34;built_in&#34;&gt;FindAbilitySpecFromHandle&lt;/span&gt;(AbilityToActivate);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!Spec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;TryActivateAbility called with invalid Handle&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// don&amp;#x27;t activate abilities that are waiting to be removed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Spec-&amp;gt;PendingRemove || Spec-&amp;gt;RemoveAfterActivation)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UGameplayAbility* Ability = Spec-&amp;gt;Ability;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!Ability)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;TryActivateAbility called with invalid Ability&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActorInfo* ActorInfo = AbilityActorInfo.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// make sure the ActorInfo and then Actor on that FGameplayAbilityActorInfo are valid, if not bail out.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ActorInfo == &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt; || !ActorInfo-&amp;gt;OwnerActor.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;() || !ActorInfo-&amp;gt;AvatarActor.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; ENetRole NetMode = ActorInfo-&amp;gt;AvatarActor-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetLocalRole&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// This should only come from button presses/local instigation (AI, etc).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (NetMode == ROLE_SimulatedProxy)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bIsLocal = AbilityActorInfo-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;IsLocallyControlled&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Check to see if this a local only or server only ability, if so either remotely execute or fail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!bIsLocal &amp;amp;&amp;amp; (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() == EGameplayAbilityNetExecutionPolicy::LocalOnly || Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() == EGameplayAbilityNetExecutionPolicy::LocalPredicted))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bAllowRemoteActivation)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;ClientTryActivateAbility&lt;/span&gt;(AbilityToActivate);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Log, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Can&amp;#x27;t activate LocalOnly or LocalPredicted ability %s when not local.&amp;quot;&lt;/span&gt;), *Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (NetMode != ROLE_Authority &amp;amp;&amp;amp; (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() == EGameplayAbilityNetExecutionPolicy::ServerOnly || Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() == EGameplayAbilityNetExecutionPolicy::ServerInitiated))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bAllowRemoteActivation)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FScopedCanActivateAbilityLogEnabler LogEnabler;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;CanActivateAbility&lt;/span&gt;(AbilityToActivate, ActorInfo, &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;, &amp;amp;FailureTags))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// No prediction key, server will assign a server-generated key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;CallServerTryActivateAbility&lt;/span&gt;(AbilityToActivate, Spec-&amp;gt;InputPressed, &lt;span class=&#34;built_in&#34;&gt;FPredictionKey&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;NotifyAbilityFailed&lt;/span&gt;(AbilityToActivate, Ability, FailureTags);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Log, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Can&amp;#x27;t activate ServerOnly or ServerInitiated ability %s when not the server.&amp;quot;&lt;/span&gt;), *Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;InternalTryActivateAbility&lt;/span&gt;(AbilityToActivate);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UAbilitySystemComponent::InternalTryActivateAbility&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(FGameplayAbilitySpecHandle Handle, FPredictionKey InPredictionKey, UGameplayAbility** OutInstancedAbility, FOnGameplayAbilityEnded::FDelegate* OnGameplayAbilityEndedDelegate, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayEventData* TriggerEventData)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayTag&amp;amp; NetworkFailTag = UAbilitySystemGlobals::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().ActivateFailNetworkingTag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	InternalTryActivateAbilityFailureTags.&lt;span class=&#34;built_in&#34;&gt;Reset&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Handle.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;() == &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;InternalTryActivateAbility called with invalid Handle! ASC: %s. AvatarActor: %s&amp;quot;&lt;/span&gt;), *&lt;span class=&#34;built_in&#34;&gt;GetPathName&lt;/span&gt;(), *&lt;span class=&#34;built_in&#34;&gt;GetNameSafe&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;GetAvatarActor_Direct&lt;/span&gt;()));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FGameplayAbilitySpec* Spec = &lt;span class=&#34;built_in&#34;&gt;FindAbilitySpecFromHandle&lt;/span&gt;(Handle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!Spec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;InternalTryActivateAbility called with a valid handle but no matching ability was found. Handle: %s ASC: %s. AvatarActor: %s&amp;quot;&lt;/span&gt;), *Handle.&lt;span class=&#34;built_in&#34;&gt;ToString&lt;/span&gt;(), *&lt;span class=&#34;built_in&#34;&gt;GetPathName&lt;/span&gt;(), *&lt;span class=&#34;built_in&#34;&gt;GetNameSafe&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;GetAvatarActor_Direct&lt;/span&gt;()));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Lock ability list so our Spec doesn&amp;#x27;t get destroyed while activating&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;ABILITYLIST_SCOPE_LOCK&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActorInfo* ActorInfo = AbilityActorInfo.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// make sure the ActorInfo and then Actor on that FGameplayAbilityActorInfo are valid, if not bail out.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ActorInfo == &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt; || !ActorInfo-&amp;gt;OwnerActor.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;() || !ActorInfo-&amp;gt;AvatarActor.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// This should only come from button presses/local instigation (AI, etc)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ENetRole NetMode = ROLE_SimulatedProxy;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Use PC netmode if its there&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (APlayerController* PC = ActorInfo-&amp;gt;PlayerController.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		NetMode = PC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetLocalRole&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Fallback to avataractor otherwise. Edge case: avatar &amp;quot;dies&amp;quot; and becomes torn off and ROLE_Authority. We don&amp;#x27;t want to use this case (use PC role instead).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (AActor* LocalAvatarActor = &lt;span class=&#34;built_in&#34;&gt;GetAvatarActor_Direct&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		NetMode = LocalAvatarActor-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetLocalRole&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (NetMode == ROLE_SimulatedProxy)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bIsLocal = AbilityActorInfo-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;IsLocallyControlled&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UGameplayAbility* Ability = Spec-&amp;gt;Ability;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!Ability)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;InternalTryActivateAbility called with invalid Ability&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Check to see if this a local only or server only ability, if so don&amp;#x27;t execute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!bIsLocal)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() == EGameplayAbilityNetExecutionPolicy::LocalOnly || (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() == EGameplayAbilityNetExecutionPolicy::LocalPredicted &amp;amp;&amp;amp; !InPredictionKey.&lt;span class=&#34;built_in&#34;&gt;IsValidKey&lt;/span&gt;()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// If we have a valid prediction key, the ability was started on the local client so it&amp;#x27;s okay&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Can&amp;#x27;t activate LocalOnly or LocalPredicted ability %s when not local! Net Execution Policy is %d.&amp;quot;&lt;/span&gt;), *Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;(), (int32)Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (NetworkFailTag.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				InternalTryActivateAbilityFailureTags.&lt;span class=&#34;built_in&#34;&gt;AddTag&lt;/span&gt;(NetworkFailTag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;NotifyAbilityFailed&lt;/span&gt;(Handle, Ability, InternalTryActivateAbilityFailureTags);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (NetMode != ROLE_Authority &amp;amp;&amp;amp; (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() == EGameplayAbilityNetExecutionPolicy::ServerOnly || Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() == EGameplayAbilityNetExecutionPolicy::ServerInitiated))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Can&amp;#x27;t activate ServerOnly or ServerInitiated ability %s when not the server! Net Execution Policy is %d.&amp;quot;&lt;/span&gt;), *Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;(), (int32)Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (NetworkFailTag.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			InternalTryActivateAbilityFailureTags.&lt;span class=&#34;built_in&#34;&gt;AddTag&lt;/span&gt;(NetworkFailTag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;NotifyAbilityFailed&lt;/span&gt;(Handle, Ability, InternalTryActivateAbilityFailureTags);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// If it&amp;#x27;s instance once the instanced ability will be set, otherwise it will be null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UGameplayAbility* InstancedAbility = Spec-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetPrimaryInstance&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayTagContainer* SourceTags = &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayTagContainer* TargetTags = &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (TriggerEventData != &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		SourceTags = &amp;amp;TriggerEventData-&amp;gt;InstigatorTags;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		TargetTags = &amp;amp;TriggerEventData-&amp;gt;TargetTags;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// If we have an instanced ability, call CanActivateAbility on it.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Otherwise we always do a non instanced CanActivateAbility check using the CDO of the Ability.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		UGameplayAbility* &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; CanActivateAbilitySource = InstancedAbility ? InstancedAbility : Ability;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FScopedCanActivateAbilityLogEnabler LogEnabler;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!CanActivateAbilitySource-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;CanActivateAbility&lt;/span&gt;(Handle, ActorInfo, SourceTags, TargetTags, &amp;amp;InternalTryActivateAbilityFailureTags))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;NotifyAbilityFailed&lt;/span&gt;(Handle, CanActivateAbilitySource, InternalTryActivateAbilityFailureTags);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// If we&amp;#x27;re instance per actor and we&amp;#x27;re already active, don&amp;#x27;t let us activate again as this breaks the graph&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetInstancingPolicy&lt;/span&gt;() == EGameplayAbilityInstancingPolicy::InstancedPerActor)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Spec-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;IsActive&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Ability-&amp;gt;bRetriggerInstancedAbility &amp;amp;&amp;amp; InstancedAbility)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bReplicateEndAbility = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bWasCancelled = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				InstancedAbility-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;EndAbility&lt;/span&gt;(Handle, ActorInfo, Spec-&amp;gt;ActivationInfo, bReplicateEndAbility, bWasCancelled);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Verbose, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Can&amp;#x27;t activate instanced per actor ability %s when their is already a currently active instance for this actor.&amp;quot;&lt;/span&gt;), *Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Make sure we have a primary&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetInstancingPolicy&lt;/span&gt;() == EGameplayAbilityInstancingPolicy::InstancedPerActor &amp;amp;&amp;amp; !InstancedAbility)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;InternalTryActivateAbility called but instanced ability is missing! NetMode: %d. Ability: %s&amp;quot;&lt;/span&gt;), (int32)NetMode, *Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Setup a fresh ActivationInfo for this AbilitySpec.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Spec-&amp;gt;ActivationInfo = &lt;span class=&#34;built_in&#34;&gt;FGameplayAbilityActivationInfo&lt;/span&gt;(ActorInfo-&amp;gt;OwnerActor.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FGameplayAbilityActivationInfo &amp;amp;ActivationInfo = Spec-&amp;gt;ActivationInfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// If we are the server or this is local only&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() == EGameplayAbilityNetExecutionPolicy::LocalOnly || (NetMode == ROLE_Authority))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// if we&amp;#x27;re the server and don&amp;#x27;t have a valid key or this ability should be started on the server create a new activation key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bCreateNewServerKey = NetMode == ROLE_Authority &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			(!InPredictionKey.&lt;span class=&#34;built_in&#34;&gt;IsValidKey&lt;/span&gt;() ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			 (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() == EGameplayAbilityNetExecutionPolicy::ServerInitiated ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() == EGameplayAbilityNetExecutionPolicy::ServerOnly));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bCreateNewServerKey)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ActivationInfo.&lt;span class=&#34;built_in&#34;&gt;ServerSetActivationPredictionKey&lt;/span&gt;(FPredictionKey::&lt;span class=&#34;built_in&#34;&gt;CreateNewServerInitiatedKey&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (InPredictionKey.&lt;span class=&#34;built_in&#34;&gt;IsValidKey&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Otherwise if available, set the prediction key to what was passed up&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ActivationInfo.&lt;span class=&#34;built_in&#34;&gt;ServerSetActivationPredictionKey&lt;/span&gt;(InPredictionKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// we may have changed the prediction key so we need to update the scoped key to match&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;function&#34;&gt;FScopedPredictionWindow &lt;span class=&#34;title&#34;&gt;ScopedPredictionWindow&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, ActivationInfo.GetActivationPredictionKey())&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// ----------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Tell the client that you activated it (if we&amp;#x27;re not local and not server only)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// ----------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!bIsLocal &amp;amp;&amp;amp; Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() != EGameplayAbilityNetExecutionPolicy::ServerOnly)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (TriggerEventData)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;ClientActivateAbilitySucceedWithEventData&lt;/span&gt;(Handle, ActivationInfo.&lt;span class=&#34;built_in&#34;&gt;GetActivationPredictionKey&lt;/span&gt;(), *TriggerEventData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;ClientActivateAbilitySucceed&lt;/span&gt;(Handle, ActivationInfo.&lt;span class=&#34;built_in&#34;&gt;GetActivationPredictionKey&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// This will get copied into the instanced abilities&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ActivationInfo.bCanBeEndedByOtherInstance = Ability-&amp;gt;bServerRespectsRemoteAbilityCancellation;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// ----------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//	Call ActivateAbility (note this could end the ability too!)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// ----------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Create instance of this ability if necessary&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetInstancingPolicy&lt;/span&gt;() == EGameplayAbilityInstancingPolicy::InstancedPerExecution)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			InstancedAbility = &lt;span class=&#34;built_in&#34;&gt;CreateNewInstanceOfAbility&lt;/span&gt;(*Spec, Ability);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			InstancedAbility-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;CallActivateAbility&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, OnGameplayAbilityEndedDelegate, TriggerEventData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (InstancedAbility)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			InstancedAbility-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;CallActivateAbility&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, OnGameplayAbilityEndedDelegate, TriggerEventData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;CallActivateAbility&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, OnGameplayAbilityEndedDelegate, TriggerEventData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetExecutionPolicy&lt;/span&gt;() == EGameplayAbilityNetExecutionPolicy::LocalPredicted)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Flush server moves that occurred before this ability activation so that the server receives the RPCs in the correct order&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Necessary to prevent abilities that trigger animation root motion or impact movement from causing network corrections&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!ActorInfo-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;IsNetAuthority&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ACharacter* AvatarCharacter = &lt;span class=&#34;built_in&#34;&gt;Cast&lt;/span&gt;&amp;lt;ACharacter&amp;gt;(ActorInfo-&amp;gt;AvatarActor.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (AvatarCharacter)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				UCharacterMovementComponent* AvatarCharMoveComp = &lt;span class=&#34;built_in&#34;&gt;Cast&lt;/span&gt;&amp;lt;UCharacterMovementComponent&amp;gt;(AvatarCharacter-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetMovementComponent&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (AvatarCharMoveComp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					AvatarCharMoveComp-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;FlushServerMoves&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// This execution is now officially EGameplayAbilityActivationMode:Predicting and has a PredictionKey&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;function&#34;&gt;FScopedPredictionWindow &lt;span class=&#34;title&#34;&gt;ScopedPredictionWindow&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ActivationInfo.&lt;span class=&#34;built_in&#34;&gt;SetPredicting&lt;/span&gt;(ScopedPredictionKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// This must be called immediately after GeneratePredictionKey to prevent problems with recursively activating abilities&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (TriggerEventData)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;ServerTryActivateAbilityWithEventData&lt;/span&gt;(Handle, Spec-&amp;gt;InputPressed, ScopedPredictionKey, *TriggerEventData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;CallServerTryActivateAbility&lt;/span&gt;(Handle, Spec-&amp;gt;InputPressed, ScopedPredictionKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// When this prediction key is caught up, we better know if the ability was confirmed or rejected&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ScopedPredictionKey.&lt;span class=&#34;built_in&#34;&gt;NewCaughtUpDelegate&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;BindUObject&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &amp;amp;UAbilitySystemComponent::OnClientActivateAbilityCaughtUp, Handle, ScopedPredictionKey.Current);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetInstancingPolicy&lt;/span&gt;() == EGameplayAbilityInstancingPolicy::InstancedPerExecution)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// For now, only NonReplicated + InstancedPerExecution abilities can be Predictive.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// We lack the code to predict spawning an instance of the execution and then merge/combine&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// with the server spawned version when it arrives.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetReplicationPolicy&lt;/span&gt;() == EGameplayAbilityReplicationPolicy::ReplicateNo)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				InstancedAbility = &lt;span class=&#34;built_in&#34;&gt;CreateNewInstanceOfAbility&lt;/span&gt;(*Spec, Ability);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				InstancedAbility-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;CallActivateAbility&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, OnGameplayAbilityEndedDelegate, TriggerEventData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Error, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;InternalTryActivateAbility called on ability %s that is InstancePerExecution and Replicated. This is an invalid configuration.&amp;quot;&lt;/span&gt;), *Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;() );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (InstancedAbility)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			InstancedAbility-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;CallActivateAbility&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, OnGameplayAbilityEndedDelegate, TriggerEventData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;CallActivateAbility&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, OnGameplayAbilityEndedDelegate, TriggerEventData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (InstancedAbility)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OutInstancedAbility)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			*OutInstancedAbility = InstancedAbility;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		InstancedAbility-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;SetCurrentActivationInfo&lt;/span&gt;(ActivationInfo);	&lt;span class=&#34;comment&#34;&gt;// Need to push this to the ability if it was instanced.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;MarkAbilitySpecDirty&lt;/span&gt;(*Spec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	AbilityLastActivatedTime = &lt;span class=&#34;built_in&#34;&gt;GetWorld&lt;/span&gt;()-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetTimeSeconds&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;FActiveGameplayEffectHandle &lt;span class=&#34;title&#34;&gt;UAbilitySystemComponent::ApplyGameplayEffectSpecToSelf&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayEffectSpec &amp;amp;Spec, FPredictionKey PredictionKey)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; WITH_SERVER_CODE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;SCOPE_CYCLE_COUNTER&lt;/span&gt;(STAT_AbilitySystemComp_ApplyGameplayEffectSpecToSelf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Scope lock the container after the addition has taken place to prevent the new effect from potentially getting mangled during the remainder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// of the add operation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;FScopedActiveGameplayEffectLock &lt;span class=&#34;title&#34;&gt;ScopeLock&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(ActiveGameplayEffects)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;FScopeCurrentGameplayEffectBeingApplied &lt;span class=&#34;title&#34;&gt;ScopedGEApplication&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&amp;amp;Spec, &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bIsNetAuthority = &lt;span class=&#34;built_in&#34;&gt;IsOwnerActorAuthoritative&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Check Network Authority&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;built_in&#34;&gt;HasNetworkAuthorityToApplyGameplayEffect&lt;/span&gt;(PredictionKey))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FActiveGameplayEffectHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Don&amp;#x27;t allow prediction of periodic effects&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(PredictionKey.&lt;span class=&#34;built_in&#34;&gt;IsValidKey&lt;/span&gt;() &amp;amp;&amp;amp; Spec.&lt;span class=&#34;built_in&#34;&gt;GetPeriod&lt;/span&gt;() &amp;gt; &lt;span class=&#34;number&#34;&gt;0.f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;IsOwnerActorAuthoritative&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Server continue with invalid prediction key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			PredictionKey = &lt;span class=&#34;built_in&#34;&gt;FPredictionKey&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Client just return now&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FActiveGameplayEffectHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Are we currently immune to this? (ApplicationImmunity)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FActiveGameplayEffect* ImmunityGE=&lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ActiveGameplayEffects.&lt;span class=&#34;built_in&#34;&gt;HasApplicationImmunityToSpec&lt;/span&gt;(Spec, ImmunityGE))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;OnImmunityBlockGameplayEffect&lt;/span&gt;(Spec, ImmunityGE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FActiveGameplayEffectHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Check AttributeSet requirements: make sure all attributes are valid&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// We may want to cache this off in some way to make the runtime check quicker.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// We also need to handle things in the execution list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayModifierInfo&amp;amp; Mod : Spec.Def-&amp;gt;Modifiers)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!Mod.Attribute.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s has a null modifier attribute.&amp;quot;&lt;/span&gt;), *Spec.Def-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetPathName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FActiveGameplayEffectHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// check if the effect being applied actually succeeds&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; ChanceToApply = Spec.&lt;span class=&#34;built_in&#34;&gt;GetChanceToApplyToTarget&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((ChanceToApply &amp;lt; &lt;span class=&#34;number&#34;&gt;1.f&lt;/span&gt; - SMALL_NUMBER) &amp;amp;&amp;amp; (FMath::&lt;span class=&#34;built_in&#34;&gt;FRand&lt;/span&gt;() &amp;gt; ChanceToApply))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FActiveGameplayEffectHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Get MyTags.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//	We may want to cache off a GameplayTagContainer instead of rebuilding it every time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//	But this will also be where we need to merge in context tags? (Headshot, executing ability, etc?)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//	Or do we push these tags into (our copy of the spec)?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Note: static is ok here since the scope is so limited, but wider usage of MyTags is not safe since this function can be recursively called&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; FGameplayTagContainer MyTags;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		MyTags.&lt;span class=&#34;built_in&#34;&gt;Reset&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;GetOwnedGameplayTags&lt;/span&gt;(MyTags);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Spec.Def-&amp;gt;ApplicationTagRequirements.&lt;span class=&#34;built_in&#34;&gt;RequirementsMet&lt;/span&gt;(MyTags) == &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FActiveGameplayEffectHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!Spec.Def-&amp;gt;RemovalTagRequirements.&lt;span class=&#34;built_in&#34;&gt;IsEmpty&lt;/span&gt;() &amp;amp;&amp;amp; Spec.Def-&amp;gt;RemovalTagRequirements.&lt;span class=&#34;built_in&#34;&gt;RequirementsMet&lt;/span&gt;(MyTags) == &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FActiveGameplayEffectHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Custom application requirement check&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; TSubclassOf&amp;lt;UGameplayEffectCustomApplicationRequirement&amp;gt;&amp;amp; AppReq : Spec.Def-&amp;gt;ApplicationRequirements)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (*AppReq &amp;amp;&amp;amp; AppReq-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetDefaultObject&lt;/span&gt;&amp;lt;UGameplayEffectCustomApplicationRequirement&amp;gt;()-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;CanApplyGameplayEffect&lt;/span&gt;(Spec.Def, Spec, &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) == &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FActiveGameplayEffectHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	bIsNetDirty = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Clients should treat predicted instant effects as if they have infinite duration. The effects will be cleaned up later.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bTreatAsInfiniteDuration = &lt;span class=&#34;built_in&#34;&gt;GetOwnerRole&lt;/span&gt;() != ROLE_Authority &amp;amp;&amp;amp; PredictionKey.&lt;span class=&#34;built_in&#34;&gt;IsLocalClientKey&lt;/span&gt;() &amp;amp;&amp;amp; Spec.Def-&amp;gt;DurationPolicy == EGameplayEffectDurationType::Instant;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Make sure we create our copy of the spec in the right place&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// We initialize the FActiveGameplayEffectHandle here with INDEX_NONE to handle the case of instant GE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Initializing it like this will set the bPassedFiltersAndWasExecuted on the FActiveGameplayEffectHandle to true so we can know that we applied a GE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;FActiveGameplayEffectHandle	&lt;span class=&#34;title&#34;&gt;MyHandle&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(INDEX_NONE)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bInvokeGameplayCueApplied = Spec.Def-&amp;gt;DurationPolicy != EGameplayEffectDurationType::Instant; &lt;span class=&#34;comment&#34;&gt;// Cache this now before possibly modifying predictive instant effect to infinite duration effect.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bFoundExistingStackableGE = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FActiveGameplayEffect* AppliedEffect = &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FGameplayEffectSpec* OurCopyOfSpec = &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	TSharedPtr&amp;lt;FGameplayEffectSpec&amp;gt; StackSpec;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Spec.Def-&amp;gt;DurationPolicy != EGameplayEffectDurationType::Instant || bTreatAsInfiniteDuration)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			AppliedEffect = ActiveGameplayEffects.&lt;span class=&#34;built_in&#34;&gt;ApplyGameplayEffectSpec&lt;/span&gt;(Spec, PredictionKey, bFoundExistingStackableGE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!AppliedEffect)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FActiveGameplayEffectHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			MyHandle = AppliedEffect-&amp;gt;Handle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			OurCopyOfSpec = &amp;amp;(AppliedEffect-&amp;gt;Spec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Log results of applied GE spec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;UE_LOG_ACTIVE&lt;/span&gt;(VLogAbilitySystem, Log))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;ABILITY_VLOG&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;GetOwnerActor&lt;/span&gt;(), Log, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Applied %s&amp;quot;&lt;/span&gt;), *OurCopyOfSpec-&amp;gt;Def-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetFName&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;ToString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayModifierInfo&amp;amp; Modifier : Spec.Def-&amp;gt;Modifiers)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; Magnitude = &lt;span class=&#34;number&#34;&gt;0.f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					Modifier.ModifierMagnitude.&lt;span class=&#34;built_in&#34;&gt;AttemptCalculateMagnitude&lt;/span&gt;(Spec, Magnitude);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;built_in&#34;&gt;ABILITY_VLOG&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;GetOwnerActor&lt;/span&gt;(), Log, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;         %s: %s %f&amp;quot;&lt;/span&gt;), *Modifier.Attribute.&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;(), *&lt;span class=&#34;built_in&#34;&gt;EGameplayModOpToString&lt;/span&gt;(Modifier.ModifierOp), Magnitude);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!OurCopyOfSpec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			StackSpec = &lt;span class=&#34;built_in&#34;&gt;TSharedPtr&lt;/span&gt;&amp;lt;FGameplayEffectSpec&amp;gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FGameplayEffectSpec&lt;/span&gt;(Spec));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			OurCopyOfSpec = StackSpec.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			UAbilitySystemGlobals::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;GlobalPreGameplayEffectSpecApply&lt;/span&gt;(*OurCopyOfSpec, &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			OurCopyOfSpec-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;CaptureAttributeDataFromTarget&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// if necessary add a modifier to OurCopyOfSpec to force it to have an infinite duration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bTreatAsInfiniteDuration)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// This should just be a straight set of the duration float now&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			OurCopyOfSpec-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;SetDuration&lt;/span&gt;(UGameplayEffect::INFINITE_DURATION, &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OurCopyOfSpec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Update (not push) the global spec being applied [we want to switch it to our copy, from the const input copy)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		UAbilitySystemGlobals::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;SetCurrentAppliedGE&lt;/span&gt;(OurCopyOfSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// We still probably want to apply tags and stuff even if instant?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// If bSuppressStackingCues is set for this GameplayEffect, only add the GameplayCue if this is the first instance of the GameplayEffect&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!bSuppressGameplayCues &amp;amp;&amp;amp; bInvokeGameplayCueApplied &amp;amp;&amp;amp; AppliedEffect &amp;amp;&amp;amp; !AppliedEffect-&amp;gt;bIsInhibited &amp;amp;&amp;amp; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		(!bFoundExistingStackableGE || !Spec.Def-&amp;gt;bSuppressStackingCues))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// We both added and activated the GameplayCue here.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// On the client, which will invoke the gameplay cue from an OnRep, it will need to look at the StartTime to determine&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// if the Cue was actually added+activated or just added (due to relevancy)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Fixme: what if we wanted to scale Cue magnitude based on damage? E.g, scale an cue effect when the GE is buffed?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OurCopyOfSpec-&amp;gt;StackCount &amp;gt; Spec.StackCount)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Because PostReplicatedChange will get called from modifying the stack count&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// (and not PostReplicatedAdd) we won&amp;#x27;t know which GE was modified.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// So instead we need to explicitly RPC the client so it knows the GC needs updating&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			UAbilitySystemGlobals::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;GetGameplayCueManager&lt;/span&gt;()-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;InvokeGameplayCueAddedAndWhileActive_FromSpec&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, *OurCopyOfSpec, PredictionKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Otherwise these will get replicated to the client when the GE gets added to the replicated array&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;InvokeGameplayCueEvent&lt;/span&gt;(*OurCopyOfSpec, EGameplayCueEvent::OnActive);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;InvokeGameplayCueEvent&lt;/span&gt;(*OurCopyOfSpec, EGameplayCueEvent::WhileActive);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Execute the GE at least once (if instant, this will execute once and be done. If persistent, it was added to ActiveGameplayEffects above)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Execute if this is an instant application effect&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bTreatAsInfiniteDuration)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// This is an instant application but we are treating it as an infinite duration for prediction. We should still predict the execute GameplayCUE.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// (in non predictive case, this will happen inside ::ExecuteGameplayEffect)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!bSuppressGameplayCues)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			UAbilitySystemGlobals::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;GetGameplayCueManager&lt;/span&gt;()-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;InvokeGameplayCueExecuted_FromSpec&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, *OurCopyOfSpec, PredictionKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Spec.Def-&amp;gt;DurationPolicy == EGameplayEffectDurationType::Instant)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OurCopyOfSpec-&amp;gt;Def-&amp;gt;OngoingTagRequirements.&lt;span class=&#34;built_in&#34;&gt;IsEmpty&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;ExecuteGameplayEffect&lt;/span&gt;(*OurCopyOfSpec, PredictionKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s is instant but has tag requirements. Tag requirements can only be used with gameplay effects that have a duration. This gameplay effect will be ignored.&amp;quot;&lt;/span&gt;), *Spec.Def-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetPathName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Spec.&lt;span class=&#34;built_in&#34;&gt;GetPeriod&lt;/span&gt;() != UGameplayEffect::NO_PERIOD &amp;amp;&amp;amp; Spec.TargetEffectSpecs.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;() &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s is periodic but also applies GameplayEffects to its target. GameplayEffects will only be applied once, not every period.&amp;quot;&lt;/span&gt;), *Spec.Def-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetPathName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// evaluate if any active effects need to be removed by the application of this effect&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bIsNetAuthority)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ActiveGameplayEffects.&lt;span class=&#34;built_in&#34;&gt;AttemptRemoveActiveEffectsOnEffectApplication&lt;/span&gt;(*OurCopyOfSpec, MyHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// ------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Apply Linked effects&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// todo: this is ignoring the returned handles, should we put them into a TArray and return all of the handles?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// ------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayEffectSpecHandle&amp;amp; TargetSpec: Spec.TargetEffectSpecs)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (TargetSpec.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;ApplyGameplayEffectSpecToSelf&lt;/span&gt;(*TargetSpec.Data.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;(), PredictionKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UAbilitySystemComponent* InstigatorASC = Spec.&lt;span class=&#34;built_in&#34;&gt;GetContext&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;GetInstigatorAbilitySystemComponent&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Send ourselves a callback	&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;OnGameplayEffectAppliedToSelf&lt;/span&gt;(InstigatorASC, *OurCopyOfSpec, MyHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Send the instigator a callback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (InstigatorASC)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		InstigatorASC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;OnGameplayEffectAppliedToTarget&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, *OurCopyOfSpec, MyHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; MyHandle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UAbilitySystemComponent::ExecuteGameplayEffect&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(FGameplayEffectSpec &amp;amp;Spec, FPredictionKey PredictionKey)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; WITH_SERVER_CODE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;SCOPE_CYCLE_COUNTER&lt;/span&gt;(STAT_AbilitySystemComp_ExecuteGameplayEffect);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Should only ever execute effects that are instant application or periodic application&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Effects with no period and that aren&amp;#x27;t instant application should never be executed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;( (Spec.&lt;span class=&#34;built_in&#34;&gt;GetDuration&lt;/span&gt;() == UGameplayEffect::INSTANT_APPLICATION || Spec.&lt;span class=&#34;built_in&#34;&gt;GetPeriod&lt;/span&gt;() != UGameplayEffect::NO_PERIOD) );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;UE_LOG_ACTIVE&lt;/span&gt;(VLogAbilitySystem, Log))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_VLOG&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;GetOwnerActor&lt;/span&gt;(), Log, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Executed %s&amp;quot;&lt;/span&gt;), *Spec.Def-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetFName&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;ToString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayModifierInfo&amp;amp; Modifier : Spec.Def-&amp;gt;Modifiers)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; Magnitude = &lt;span class=&#34;number&#34;&gt;0.f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Modifier.ModifierMagnitude.&lt;span class=&#34;built_in&#34;&gt;AttemptCalculateMagnitude&lt;/span&gt;(Spec, Magnitude);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;ABILITY_VLOG&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;GetOwnerActor&lt;/span&gt;(), Log, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;         %s: %s %f&amp;quot;&lt;/span&gt;), *Modifier.Attribute.&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;(), *&lt;span class=&#34;built_in&#34;&gt;EGameplayModOpToString&lt;/span&gt;(Modifier.ModifierOp), Magnitude);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	bIsNetDirty = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ActiveGameplayEffects.&lt;span class=&#34;built_in&#34;&gt;ExecuteActiveEffectsFrom&lt;/span&gt;(Spec, PredictionKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Engine\Plugins\Runtime\GameplayAbilities\Source\GameplayAbilities\Private\Abilities\GameplayAbility.cpp&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameplayAbility::CallActivateAbility&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilitySpecHandle Handle, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActorInfo* ActorInfo, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActivationInfo ActivationInfo, FOnGameplayAbilityEnded::FDelegate* OnGameplayAbilityEndedDelegate, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayEventData* TriggerEventData)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;PreActivate&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, OnGameplayAbilityEndedDelegate, TriggerEventData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;ActivateAbility&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, TriggerEventData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameplayAbility::ActivateAbility&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilitySpecHandle Handle, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActorInfo* ActorInfo, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActivationInfo ActivationInfo, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayEventData* TriggerEventData)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bHasBlueprintActivate)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// A Blueprinted ActivateAbility function must call CommitAbility somewhere in its execution chain.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;K2_ActivateAbility&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bHasBlueprintActivateFromEvent)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (TriggerEventData)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// A Blueprinted ActivateAbility function must call CommitAbility somewhere in its execution chain.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;K2_ActivateAbilityFromEvent&lt;/span&gt;(*TriggerEventData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogAbilitySystem, Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Ability %s expects event data but none is being supplied. Use Activate Ability instead of Activate Ability From Event.&amp;quot;&lt;/span&gt;), *&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bReplicateEndAbility = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bWasCancelled = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;EndAbility&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, bReplicateEndAbility, bWasCancelled);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Native child classes may want to override ActivateAbility and do something like this:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Do stuff...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;CommitAbility&lt;/span&gt;(Handle, ActorInfo, ActivationInfo))		&lt;span class=&#34;comment&#34;&gt;// ..then commit the ability...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;//	Then do more stuff...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; UGameplayAbility::&lt;span class=&#34;built_in&#34;&gt;CommitAbility&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilitySpecHandle Handle, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActorInfo* ActorInfo, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActivationInfo ActivationInfo, OUT FGameplayTagContainer* OptionalRelevantTags)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Last chance to fail (maybe we no longer have resources to commit since we after we started this ability activation)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;built_in&#34;&gt;CommitCheck&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, OptionalRelevantTags))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;CommitExecute&lt;/span&gt;(Handle, ActorInfo, ActivationInfo);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Fixme: Should we always call this or only if it is implemented? A noop may not hurt but could be bad for perf (storing a HasBlueprintCommit per instance isn&amp;#x27;t good either)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;K2_CommitExecute&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Broadcast this commitment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ActorInfo-&amp;gt;AbilitySystemComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;NotifyAbilityCommit&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameplayAbility::CommitExecute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilitySpecHandle Handle, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActorInfo* ActorInfo, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActivationInfo ActivationInfo)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;ApplyCooldown&lt;/span&gt;(Handle, ActorInfo, ActivationInfo);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;ApplyCost&lt;/span&gt;(Handle, ActorInfo, ActivationInfo);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameplayAbility::ApplyCooldown&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilitySpecHandle Handle, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActorInfo* ActorInfo, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActivationInfo ActivationInfo)&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UGameplayEffect* CooldownGE = &lt;span class=&#34;built_in&#34;&gt;GetCooldownGameplayEffect&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (CooldownGE)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ApplyGameplayEffectToOwner&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, CooldownGE, &lt;span class=&#34;built_in&#34;&gt;GetAbilityLevel&lt;/span&gt;(Handle, ActorInfo));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameplayAbility::ApplyCost&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilitySpecHandle Handle, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActorInfo* ActorInfo, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActivationInfo ActivationInfo)&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UGameplayEffect* CostGE = &lt;span class=&#34;built_in&#34;&gt;GetCostGameplayEffect&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (CostGE)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ApplyGameplayEffectToOwner&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, CostGE, &lt;span class=&#34;built_in&#34;&gt;GetAbilityLevel&lt;/span&gt;(Handle, ActorInfo));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;FActiveGameplayEffectHandle &lt;span class=&#34;title&#34;&gt;UGameplayAbility::ApplyGameplayEffectToOwner&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilitySpecHandle Handle, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActorInfo* ActorInfo, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActivationInfo ActivationInfo, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UGameplayEffect* GameplayEffect, &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; GameplayEffectLevel, int32 Stacks)&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (GameplayEffect &amp;amp;&amp;amp; (&lt;span class=&#34;built_in&#34;&gt;HasAuthorityOrPredictionKey&lt;/span&gt;(ActorInfo, &amp;amp;ActivationInfo)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FGameplayEffectSpecHandle SpecHandle = &lt;span class=&#34;built_in&#34;&gt;MakeOutgoingGameplayEffectSpec&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, GameplayEffect-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetClass&lt;/span&gt;(), GameplayEffectLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (SpecHandle.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			SpecHandle.Data-&amp;gt;StackCount = Stacks;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;ApplyGameplayEffectSpecToOwner&lt;/span&gt;(Handle, ActorInfo, ActivationInfo, SpecHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// We cannot apply GameplayEffects in this context. Return an empty handle.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FActiveGameplayEffectHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;FActiveGameplayEffectHandle &lt;span class=&#34;title&#34;&gt;UGameplayAbility::ApplyGameplayEffectSpecToOwner&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilitySpecHandle AbilityHandle, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActorInfo* ActorInfo, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityActivationInfo ActivationInfo, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayEffectSpecHandle SpecHandle)&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// This batches all created cues together&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FScopedGameplayCueSendContext GameplayCueSendContext;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (SpecHandle.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;() &amp;amp;&amp;amp; (&lt;span class=&#34;built_in&#34;&gt;HasAuthorityOrPredictionKey&lt;/span&gt;(ActorInfo, &amp;amp;ActivationInfo)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		UAbilitySystemComponent* &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; AbilitySystemComponent = ActorInfo-&amp;gt;AbilitySystemComponent.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; AbilitySystemComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;ApplyGameplayEffectSpecToSelf&lt;/span&gt;(*SpecHandle.Data.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;(), AbilitySystemComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetPredictionKeyForNewAction&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FActiveGameplayEffectHandle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Engine\Plugins\Runtime\GameplayAbilities\Source\GameplayAbilities\Private\GameplayEffect.cpp&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;209&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/** This is the main function that executes a GameplayEffect on Attributes and ActiveGameplayEffects */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;FActiveGameplayEffectsContainer::ExecuteActiveEffectsFrom&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(FGameplayEffectSpec &amp;amp;Spec, FPredictionKey PredictionKey)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; WITH_SERVER_CODE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;SCOPE_CYCLE_COUNTER&lt;/span&gt;(STAT_ExecuteActiveEffectsFrom);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!Owner)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FGameplayEffectSpec&amp;amp; SpecToUse = Spec;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Capture our own tags.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// &lt;span class=&#34;doctag&#34;&gt;TODO:&lt;/span&gt; We should only capture them if we need to. We may have snapshotted target tags (?) (in the case of dots with exotic setups?)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	SpecToUse.CapturedTargetTags.&lt;span class=&#34;built_in&#34;&gt;GetActorTags&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;Reset&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Owner-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetOwnedGameplayTags&lt;/span&gt;(SpecToUse.CapturedTargetTags.&lt;span class=&#34;built_in&#34;&gt;GetActorTags&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	SpecToUse.&lt;span class=&#34;built_in&#34;&gt;CalculateModifierMagnitudes&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// ------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//	Modifiers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//		These will modify the base value of attributes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// ------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; ModifierSuccessfullyExecuted = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (int32 ModIdx = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; ModIdx &amp;lt; SpecToUse.Modifiers.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;(); ++ModIdx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayModifierInfo&amp;amp; ModDef = SpecToUse.Def-&amp;gt;Modifiers[ModIdx];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;function&#34;&gt;FGameplayModifierEvaluatedData &lt;span class=&#34;title&#34;&gt;EvalData&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(ModDef.Attribute, ModDef.ModifierOp, SpecToUse.GetModifierMagnitude(ModIdx, &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;))&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ModifierSuccessfullyExecuted |= &lt;span class=&#34;built_in&#34;&gt;InternalExecuteMod&lt;/span&gt;(SpecToUse, EvalData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// ------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//	Executions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//		This will run custom code to &amp;#x27;do stuff&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// ------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	TArray&amp;lt; FGameplayEffectSpecHandle, TInlineAllocator&amp;lt;&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&amp;gt; &amp;gt; ConditionalEffectSpecs;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; GameplayCuesWereManuallyHandled = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayEffectExecutionDefinition&amp;amp; CurExecDef : SpecToUse.Def-&amp;gt;Executions)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bRunConditionalEffects = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// Default to true if there is no CalculationClass specified.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (CurExecDef.CalculationClass)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UGameplayEffectExecutionCalculation* ExecCDO = CurExecDef.CalculationClass-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetDefaultObject&lt;/span&gt;&amp;lt;UGameplayEffectExecutionCalculation&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(ExecCDO);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Run the custom execution&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;function&#34;&gt;FGameplayEffectCustomExecutionParameters &lt;span class=&#34;title&#34;&gt;ExecutionParams&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(SpecToUse, CurExecDef.CalculationModifiers, Owner, CurExecDef.PassedInTags, PredictionKey)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FGameplayEffectCustomExecutionOutput ExecutionOutput;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ExecCDO-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;Execute&lt;/span&gt;(ExecutionParams, ExecutionOutput);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			bRunConditionalEffects = ExecutionOutput.&lt;span class=&#34;built_in&#34;&gt;ShouldTriggerConditionalGameplayEffects&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Execute any mods the custom execution yielded&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			TArray&amp;lt;FGameplayModifierEvaluatedData&amp;gt;&amp;amp; OutModifiers = ExecutionOutput.&lt;span class=&#34;built_in&#34;&gt;GetOutputModifiersRef&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bApplyStackCountToEmittedMods = !ExecutionOutput.&lt;span class=&#34;built_in&#34;&gt;IsStackCountHandledManually&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; int32 SpecStackCount = SpecToUse.StackCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (FGameplayModifierEvaluatedData&amp;amp; CurExecMod : OutModifiers)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// If the execution didn&amp;#x27;t manually handle the stack count, automatically apply it here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bApplyStackCountToEmittedMods &amp;amp;&amp;amp; SpecStackCount &amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					CurExecMod.Magnitude = GameplayEffectUtilities::&lt;span class=&#34;built_in&#34;&gt;ComputeStackedModifierMagnitude&lt;/span&gt;(CurExecMod.Magnitude, SpecStackCount, CurExecMod.ModifierOp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ModifierSuccessfullyExecuted |= &lt;span class=&#34;built_in&#34;&gt;InternalExecuteMod&lt;/span&gt;(SpecToUse, CurExecMod);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// If execution handled GameplayCues, we dont have to.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ExecutionOutput.&lt;span class=&#34;built_in&#34;&gt;AreGameplayCuesHandledManually&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				GameplayCuesWereManuallyHandled = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bRunConditionalEffects)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// If successful, apply conditional specs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FConditionalGameplayEffect&amp;amp; ConditionalEffect : CurExecDef.ConditionalGameplayEffects)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ConditionalEffect.&lt;span class=&#34;built_in&#34;&gt;CanApply&lt;/span&gt;(SpecToUse.CapturedSourceTags.&lt;span class=&#34;built_in&#34;&gt;GetActorTags&lt;/span&gt;(), SpecToUse.&lt;span class=&#34;built_in&#34;&gt;GetLevel&lt;/span&gt;()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					FGameplayEffectSpecHandle SpecHandle = ConditionalEffect.&lt;span class=&#34;built_in&#34;&gt;CreateSpec&lt;/span&gt;(SpecToUse.&lt;span class=&#34;built_in&#34;&gt;GetEffectContext&lt;/span&gt;(), SpecToUse.&lt;span class=&#34;built_in&#34;&gt;GetLevel&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (SpecHandle.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						ConditionalEffectSpecs.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(SpecHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// ------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//	Invoke GameplayCue events&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// ------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// If there are no modifiers or we don&amp;#x27;t require modifier success to trigger, we apply the GameplayCue.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bHasModifiers = SpecToUse.Modifiers.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;() &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bHasExecutions = SpecToUse.Def-&amp;gt;Executions.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;() &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bHasModifiersOrExecutions = bHasModifiers || bHasExecutions;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// If there are no modifiers or we don&amp;#x27;t require modifier success to trigger, we apply the GameplayCue.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; InvokeGameplayCueExecute = (!bHasModifiersOrExecutions) || !Spec.Def-&amp;gt;bRequireModifierSuccessToTriggerCues;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bHasModifiersOrExecutions &amp;amp;&amp;amp; ModifierSuccessfullyExecuted)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		InvokeGameplayCueExecute = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Don&amp;#x27;t trigger gameplay cues if one of the executions says it manually handled them&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (GameplayCuesWereManuallyHandled)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		InvokeGameplayCueExecute = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (InvokeGameplayCueExecute &amp;amp;&amp;amp; SpecToUse.Def-&amp;gt;GameplayCues.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// &lt;span class=&#34;doctag&#34;&gt;TODO:&lt;/span&gt; check replication policy. Right now we will replicate every execute via a multicast RPC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Log, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Invoking Execute GameplayCue for %s&amp;quot;&lt;/span&gt;), *SpecToUse.&lt;span class=&#34;built_in&#34;&gt;ToSimpleString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		UAbilitySystemGlobals::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;GetGameplayCueManager&lt;/span&gt;()-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;InvokeGameplayCueExecuted_FromSpec&lt;/span&gt;(Owner, SpecToUse, PredictionKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Apply any conditional linked effects&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayEffectSpecHandle&amp;amp; TargetSpec : ConditionalEffectSpecs)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (TargetSpec.&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Owner-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;ApplyGameplayEffectSpecToSelf&lt;/span&gt;(*TargetSpec.Data.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;(), PredictionKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;FActiveGameplayEffectsContainer::InternalExecuteMod&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(FGameplayEffectSpec&amp;amp; Spec, FGameplayModifierEvaluatedData&amp;amp; ModEvalData)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;SCOPE_CYCLE_COUNTER&lt;/span&gt;(STAT_InternalExecuteMod);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(Owner);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bExecuted = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UAttributeSet* AttributeSet = &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UClass* AttributeSetClass = ModEvalData.Attribute.&lt;span class=&#34;built_in&#34;&gt;GetAttributeSetClass&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (AttributeSetClass &amp;amp;&amp;amp; AttributeSetClass-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;IsChildOf&lt;/span&gt;(UAttributeSet::&lt;span class=&#34;built_in&#34;&gt;StaticClass&lt;/span&gt;()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		AttributeSet = &lt;span class=&#34;built_in&#34;&gt;const_cast&lt;/span&gt;&amp;lt;UAttributeSet*&amp;gt;(Owner-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetAttributeSubobject&lt;/span&gt;(AttributeSetClass));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (AttributeSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;function&#34;&gt;FGameplayEffectModCallbackData &lt;span class=&#34;title&#34;&gt;ExecuteData&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Spec, ModEvalData, *Owner)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;		 *  This should apply &amp;#x27;gamewide&amp;#x27; rules. Such as clamping Health to MaxHealth or granting +3 health for every point of strength, etc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;		 *	PreAttributeModify can return false to &amp;#x27;throw out&amp;#x27; this modification.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;		 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (AttributeSet-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;PreGameplayEffectExecute&lt;/span&gt;(ExecuteData))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; OldValueOfProperty = Owner-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNumericAttribute&lt;/span&gt;(ModEvalData.Attribute);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;ApplyModToAttribute&lt;/span&gt;(ModEvalData.Attribute, ModEvalData.ModifierOp, ModEvalData.Magnitude, &amp;amp;ExecuteData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FGameplayEffectModifiedAttribute* ModifiedAttribute = Spec.&lt;span class=&#34;built_in&#34;&gt;GetModifiedAttribute&lt;/span&gt;(ModEvalData.Attribute);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!ModifiedAttribute)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// If we haven&amp;#x27;t already created a modified attribute holder, create it&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ModifiedAttribute = Spec.&lt;span class=&#34;built_in&#34;&gt;AddModifiedAttribute&lt;/span&gt;(ModEvalData.Attribute);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ModifiedAttribute-&amp;gt;TotalMagnitude += ModEvalData.Magnitude;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;SCOPE_CYCLE_COUNTER&lt;/span&gt;(STAT_PostGameplayEffectExecute);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;/** This should apply &amp;#x27;gamewide&amp;#x27; rules. Such as clamping Health to MaxHealth or granting +3 health for every point of strength, etc */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				AttributeSet-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;PostGameplayEffectExecute&lt;/span&gt;(ExecuteData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ENABLE_VISUAL_LOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (FVisualLogger::&lt;span class=&#34;built_in&#34;&gt;IsRecording&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				DebugExecutedGameplayEffectData DebugData;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				DebugData.GameplayEffectName = Spec.Def-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				DebugData.ActivationState = &lt;span class=&#34;string&#34;&gt;&amp;quot;INSTANT&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				DebugData.Attribute = ModEvalData.Attribute;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				DebugData.Magnitude = Owner-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNumericAttribute&lt;/span&gt;(ModEvalData.Attribute) - OldValueOfProperty;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				DebugExecutedGameplayEffects.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(DebugData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;// ENABLE_VISUAL_LOG&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			bExecuted = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Our owner doesn&amp;#x27;t have this attribute, so we can&amp;#x27;t do anything&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ABILITY_LOG&lt;/span&gt;(Log, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s does not have attribute %s. Skipping modifier&amp;quot;&lt;/span&gt;), *Owner-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetPathName&lt;/span&gt;(), *ModEvalData.Attribute.&lt;span class=&#34;built_in&#34;&gt;GetName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; bExecuted;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Questions-x2F-Unfinished-Part&#34;&gt;&lt;a href=&#34;#Questions-x2F-Unfinished-Part&#34; class=&#34;headerlink&#34; title=&#34;Questions&amp;#x2F;Unfinished Part&#34;&gt;&lt;/a&gt;Questions&amp;#x2F;Unfinished Part&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;FPredictionKey&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;多人游戏&amp;#x2F;网络复制相关，详情要阅读GameplayPrediction头文件注释。&lt;/p&gt;
&lt;h1 id=&#34;Enhanced-Input&#34;&gt;&lt;a href=&#34;#Enhanced-Input&#34; class=&#34;headerlink&#34; title=&#34;Enhanced Input&#34;&gt;&lt;/a&gt;Enhanced Input&lt;/h1&gt;&lt;h1 id=&#34;Lyra-Input&#34;&gt;&lt;a href=&#34;#Lyra-Input&#34; class=&#34;headerlink&#34; title=&#34;Lyra Input&#34;&gt;&lt;/a&gt;Lyra Input&lt;/h1&gt;&lt;p&gt;Lyra的输入处理是基于Enhanced Input的&lt;/p&gt;
&lt;h2 id=&#34;Key-Class-2&#34;&gt;&lt;a href=&#34;#Key-Class-2&#34; class=&#34;headerlink&#34; title=&#34;Key Class&#34;&gt;&lt;/a&gt;Key Class&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;UGameFeatureAction_AddInputConfig&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Registers a Player Mappable Input config to the Game User Settings&lt;br&gt;Expects that local players are set up to use the EnhancedInput system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UGameFeatureAction_WorldActionBase，将玩家输入映射配置注册进Game User Settings。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UGameFeatureAction_AddInputBinding&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Adds InputMappingContext to local players’ EnhancedInput system.&lt;br&gt;Expects that local players are set up to use the EnhancedInput system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UGameFeatureAction_WorldActionBase，将InputMappingContext加入到本地玩家增强输入系统中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ULyraAssetManager&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Game implementation of the asset manager that override functionality and store game-specific types.&lt;br&gt;It is expected that most game will want to override AssetManager as it provides a good place for game-specific loading logic.&lt;br&gt;This class is used by setting ‘AssetManagerClassName’ in DefaultEngine.ini&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UAssetManager，Lyra的资产管理类，扩展资产管理的功能，并且可以存储一些特定游戏类型的资源。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ULyraHeroComponent&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Component that sets up input and camera handling for player controlled pawns (or bots that simulate players).&lt;br&gt;This depends on a PawnExtensionComponent to coordinate initialization.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UPawnComponent和IGameFrameworkInitStateInterface，设置和初始化玩家角色输入（或者模拟玩家的AI输入）、控制摄像机的角色组件。与PawnExtensionComponent角色组件进行协同初始化。&lt;/p&gt;
&lt;p&gt;玩家输入初始化的关键函数&lt;code&gt;InitializaPlayerInput(UInputComponent* PlayerInputComponent)&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ULyraInputConfig&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ULyraInputComponent&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ULyraGameplayTags&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ULyraPawnData&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ULyraPawnExtension&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ULyraSettingsLocal&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Flow-Diagram-2&#34;&gt;&lt;a href=&#34;#Flow-Diagram-2&#34; class=&#34;headerlink&#34; title=&#34;Flow Diagram&#34;&gt;&lt;/a&gt;Flow Diagram&lt;/h2&gt;&lt;p&gt;由于输入配置存在PawnData中，而PawnData又是一种重要的输入模块资产，会被GameFeature加载。所以先理清楚PawnData的来源&lt;/p&gt;
&lt;h3 id=&#34;PawnData-Data-Flow&#34;&gt;&lt;a href=&#34;#PawnData-Data-Flow&#34; class=&#34;headerlink&#34; title=&#34;PawnData Data Flow&#34;&gt;&lt;/a&gt;PawnData Data Flow&lt;/h3&gt;&lt;img data-src=&#34;/2023/06/20/Lyra/Unreal%20Engine%205%20Lyra%20Starter%20Game%20Pawn%20Data%20Flow.png&#34; class=&#34;&#34; title=&#34;Lyra Pawn Data Flow&#34;&gt;

&lt;h3 id=&#34;Key-Implementation-2&#34;&gt;&lt;a href=&#34;#Key-Implementation-2&#34; class=&#34;headerlink&#34; title=&#34;Key Implementation&#34;&gt;&lt;/a&gt;Key Implementation&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;LyraHeroComponent.cpp: virtual void InitializaPlayerInput(UInputComponent* PlayerInputComponent)&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; ULyraPawnExtensionComponent* PawnExtComp = ULyraPawnExtensionComponent::&lt;span class=&#34;built_in&#34;&gt;FindPawnExtensionComponent&lt;/span&gt;(Pawn))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// 从PawnExetension组件获取PawnData&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; ULyraPawnData* PawnData = PawnExtComp-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetPawnData&lt;/span&gt;&amp;lt;ULyraPawnData&amp;gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// 在PawnData中获取应该激活的输入配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; ULyraInputConfig* InputConfig = PawnData-&amp;gt;InputConfig)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Register any default input configs with the settings so that they will be applied to the player during AddInputMappings&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FMappableConfigPair&amp;amp; Pair : DefaultInputConfigs)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Pair.bShouldActivateAutomatically &amp;amp;&amp;amp; Pair.&lt;span class=&#34;built_in&#34;&gt;CanBeActivated&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					FModifyContextOptions Options = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					Options.bIgnoreAllPressedKeysUntilRelease = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;comment&#34;&gt;// 将获取到的输入映射加入EnhancedInput实例中进行注册&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;comment&#34;&gt;// Actually add the config to the local player							&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					Subsystem-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AddPlayerMappableConfig&lt;/span&gt;(Pair.Config.&lt;span class=&#34;built_in&#34;&gt;LoadSynchronous&lt;/span&gt;(), Options);	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// The Lyra Input Component has some additional functions to map Gameplay Tags to an Input Action.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// If you want this functionality but still want to change your input component class, make it a subclass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// of the ULyraInputComponent or modify this component accordingly.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ULyraInputComponent* LyraIC = &lt;span class=&#34;built_in&#34;&gt;Cast&lt;/span&gt;&amp;lt;ULyraInputComponent&amp;gt;(PlayerInputComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;ensureMsgf&lt;/span&gt;(LyraIC, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Unexpected Input Component class! The Gameplay Abilities will not be bound to their inputs. Change the input component to ULyraInputComponent or a subclass of it.&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Add the key mappings that may have been set by the player&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// 输入配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				LyraIC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AddInputMappings&lt;/span&gt;(InputConfig, Subsystem);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// This is where we actually bind and input action to a gameplay tag, which means that Gameplay Ability Blueprints will&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// be triggered directly by these input actions Triggered events. &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				TArray&amp;lt;uint32&amp;gt; BindHandles;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				LyraIC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;BindAbilityActions&lt;/span&gt;(InputConfig, &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &amp;amp;ThisClass::Input_AbilityInputTagPressed, &amp;amp;ThisClass::Input_AbilityInputTagReleased, &lt;span class=&#34;comment&#34;&gt;/*out*/&lt;/span&gt; BindHandles);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// 将输入配置、标签、输入触发事件、具体逻辑进行绑定&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				LyraIC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;BindNativeAction&lt;/span&gt;(InputConfig, LyraGameplayTags::InputTag_Move, ETriggerEvent::Triggered, &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &amp;amp;ThisClass::Input_Move, &lt;span class=&#34;comment&#34;&gt;/*bLogIfNotFound=*/&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				LyraIC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;BindNativeAction&lt;/span&gt;(InputConfig, LyraGameplayTags::InputTag_Look_Mouse, ETriggerEvent::Triggered, &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &amp;amp;ThisClass::Input_LookMouse, &lt;span class=&#34;comment&#34;&gt;/*bLogIfNotFound=*/&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				LyraIC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;BindNativeAction&lt;/span&gt;(InputConfig, LyraGameplayTags::InputTag_Look_Stick, ETriggerEvent::Triggered, &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &amp;amp;ThisClass::Input_LookStick, &lt;span class=&#34;comment&#34;&gt;/*bLogIfNotFound=*/&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				LyraIC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;BindNativeAction&lt;/span&gt;(InputConfig, LyraGameplayTags::InputTag_Crouch, ETriggerEvent::Triggered, &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &amp;amp;ThisClass::Input_Crouch, &lt;span class=&#34;comment&#34;&gt;/*bLogIfNotFound=*/&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				LyraIC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;BindNativeAction&lt;/span&gt;(InputConfig, LyraGameplayTags::InputTag_AutoRun, ETriggerEvent::Triggered, &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &amp;amp;ThisClass::Input_AutoRun, &lt;span class=&#34;comment&#34;&gt;/*bLogIfNotFound=*/&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Class-Diagram&#34;&gt;&lt;a href=&#34;#Class-Diagram&#34; class=&#34;headerlink&#34; title=&#34;Class Diagram&#34;&gt;&lt;/a&gt;Class Diagram&lt;/h3&gt;&lt;img data-src=&#34;/2023/06/20/Lyra/Unreal%20Engine%205%20Lyra%20Starter%20Game%20Input%20Module%20Class%20Diagram.png&#34; class=&#34;&#34; title=&#34;Lyra Input Class Diagram&#34;&gt;

&lt;h3 id=&#34;Flow-Diagram-3&#34;&gt;&lt;a href=&#34;#Flow-Diagram-3&#34; class=&#34;headerlink&#34; title=&#34;Flow Diagram&#34;&gt;&lt;/a&gt;Flow Diagram&lt;/h3&gt;&lt;img data-src=&#34;/2023/06/20/Lyra/Unreal%20Engine%205%20Lyra%20Starter%20Game%20Input%20Module%20Work%20Flow.png&#34; class=&#34;&#34; title=&#34;Lyra Input Work Flow&#34;&gt;

&lt;h2 id=&#34;Note&#34;&gt;&lt;a href=&#34;#Note&#34; class=&#34;headerlink&#34; title=&#34;Note&#34;&gt;&lt;/a&gt;Note&lt;/h2&gt;&lt;p&gt;不使用除Enhanced Input之外的插件时，需要关注代码：&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ULyraAssetManager::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;GetDefaultPawnData&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;GetAsset&lt;/span&gt;(DefaultPawnData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;UPROPERTY&lt;/span&gt;(Config)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;TSoftObjectPtr&amp;lt;ULyraPawnData&amp;gt; DefaultPawnData;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可在Character蓝图类中指定默认值。&lt;/p&gt;
&lt;h1 id=&#34;Lyra-Animation&#34;&gt;&lt;a href=&#34;#Lyra-Animation&#34; class=&#34;headerlink&#34; title=&#34;Lyra Animation&#34;&gt;&lt;/a&gt;Lyra Animation&lt;/h1&gt;&lt;h2 id=&#34;Required-Plugin&#34;&gt;&lt;a href=&#34;#Required-Plugin&#34; class=&#34;headerlink&#34; title=&#34;Required Plugin&#34;&gt;&lt;/a&gt;Required Plugin&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Animation Locomotion Library&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Collection of techniques for driving locomotion animations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;运动动画后期处理技术的代码库。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Animation Warping&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Framework for animation and pose warping. This plugin includes Stride, Orientation, and Slope Warping alongside the Root Motion Delta animation attribute.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;姿势扭曲的动画框架，可提供步幅扭曲、方向扭曲、根运动Delta动画属性等功能。&lt;/p&gt;
&lt;h2 id=&#34;Solution-Design&#34;&gt;&lt;a href=&#34;#Solution-Design&#34; class=&#34;headerlink&#34; title=&#34;Solution Design&#34;&gt;&lt;/a&gt;Solution Design&lt;/h2&gt;&lt;p&gt;ABP_Mannequin_Base-&amp;gt;ALI_ItemAnimLayers-&amp;gt;ABP_ItemAnimLayersBase-&amp;gt;ABP_&amp;lt;定义了要使用的具体动画的蓝图&amp;gt;&lt;/p&gt;
&lt;p&gt;ABP_Mannequine_Base负责角色动画状态机、上下半身动画分离处理再合并、线程安全更新动画所需要的数据、一部分后期处理。&lt;/p&gt;
&lt;p&gt;ALI_ItemAnimLayers是纯接口层。&lt;/p&gt;
&lt;p&gt;ABP_ItemAnimLayersBase负责实现具体的接口和大多数动画后期处理，例如瞄准偏移(Aim Offset)、步幅扭曲(Stride Warping)、距离匹配(Distance Match)等。&lt;/p&gt;
&lt;p&gt;可使用Unreal Engine中的Reference View了解大致的&lt;/p&gt;
&lt;h2 id=&#34;Notice&#34;&gt;&lt;a href=&#34;#Notice&#34; class=&#34;headerlink&#34; title=&#34;Notice&#34;&gt;&lt;/a&gt;Notice&lt;/h2&gt;&lt;h3 id=&#34;BlueprintThreadSafeUpdateAnimation&#34;&gt;&lt;a href=&#34;#BlueprintThreadSafeUpdateAnimation&#34; class=&#34;headerlink&#34; title=&#34;BlueprintThreadSafeUpdateAnimation&#34;&gt;&lt;/a&gt;BlueprintThreadSafeUpdateAnimation&lt;/h3&gt;&lt;p&gt;?线程安全更新动画数据，将这部分工作交给工作线程而不是游戏线程以提升性能，但是可能在C++中的NativeUpdateAnimation中进行该部分工作可能可以获得更好的性能?&lt;/p&gt;
&lt;h3 id=&#34;SelectCardinalDirectionFromAngle&#34;&gt;&lt;a href=&#34;#SelectCardinalDirectionFromAngle&#34; class=&#34;headerlink&#34; title=&#34;SelectCardinalDirectionFromAngle&#34;&gt;&lt;/a&gt;SelectCardinalDirectionFromAngle&lt;/h3&gt;&lt;p&gt;从字面意义和函数具体实现来看，是从得到的角色面向方向与速度的夹角推算出角色朝向的主要方向(Cardinal Direction)，主要方向有四个：前方(Forward)、后方(Backward)、左方(Left)、右方(Right)。&lt;/p&gt;
&lt;p&gt;比如人物面朝前方往右偏前方移动，那么该函数的结果，主要方向为前方(Forward)。&lt;/p&gt;
&lt;p&gt;?DeadZone意义位置，推测为摄像机的视野盲区，可能跟FOV有关系?&lt;/p&gt;
&lt;p&gt;其他获取到的参数值是为了得到角色的面向方向与速度方向的夹角，根据四个主要方向的定义范围，判断该夹角的值是否位于某个方向的范围内，最后返回。&lt;/p&gt;
&lt;p&gt;?八向移动?&lt;/p&gt;
&lt;h3 id=&#34;Root-Motion&#34;&gt;&lt;a href=&#34;#Root-Motion&#34; class=&#34;headerlink&#34; title=&#34;Root Motion&#34;&gt;&lt;/a&gt;Root Motion&lt;/h3&gt;&lt;p&gt;不启用根运动时，如果动画有运动数据，那么骨骼网格和角色会分离，动画播放结束以后骨骼网格会回到原点。启用以后骨骼会驱动角色动作，随着角色驱动动作。&lt;/p&gt;
&lt;p&gt;用Miaximo的前进动画时，因为本身带有运动数据，然后根运动应该是默认关闭的，出现角色循环前进一段距离然后回到原点的情况。解决的办法应该是把胶囊体移速设置为0然后开启跟运动，但是估计效果仍然不好。&lt;/p&gt;
&lt;h3 id=&#34;Stride-Warping-步幅扭曲&#34;&gt;&lt;a href=&#34;#Stride-Warping-步幅扭曲&#34; class=&#34;headerlink&#34; title=&#34;Stride Warping (步幅扭曲)&#34;&gt;&lt;/a&gt;Stride Warping (步幅扭曲)&lt;/h3&gt;&lt;p&gt;动态调整角色的动画步幅来匹配胶囊体的移动速度。与距离匹配函数库配合来减少滑步的负面视觉影响。&lt;/p&gt;
&lt;p&gt;在蓝图中，还提供了贴墙情况下的处理实现(UpdateCycleAnim)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Engine\Plugins\Animation\AnimationWarping\Source\Runtime\Private\BoneControllers\AnimNode_StrideWarping.cpp&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;FAnimNode_StrideWarping::EvaluateSkeletalControl_AnyThread&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(FComponentSpacePostContext&amp;amp; Output, Tarray&amp;lt;FboneTransform&amp;gt;&amp;amp; OutBoneTransforms)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;SCOPE_CYCLE_COUNTER&lt;/span&gt;(STAT_StrideWarping_Eval);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(OutBoneTransforms.&lt;span class=&#34;built_in&#34;&gt;IsEmpty&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector PreviousStrideDirection = ActualStrideDirection;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ActualStrideDirection = StrideDirection;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ActualStrideScale = StrideScale;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bGraphDrivenWarping = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UE::Anim::IAnimRootMotionProvider* RootMotionProvider = UE::Anim::IAnimRootMotionProvider::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Mode == EWarpingEvaluationMode::Graph)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		bGraphDrivenWarping = !!RootMotionProvider;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ensureMsgf&lt;/span&gt;(bGraphDrivenWarping, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Graph driven Stride Warping expected a valid root motion delta provider interface.&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FTransform RootMotionTransformDelta = FTransform::Identity;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bGraphDrivenWarping)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Graph driven stride warping will override the manual stride direction with the intent of the current animation sub-graph&amp;#x27;s accumulated root motion&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		bGraphDrivenWarping = RootMotionProvider-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;ExtractRootMotion&lt;/span&gt;(Output.CustomAttributes, RootMotionTransformDelta);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bGraphDrivenWarping)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			CachedRootMotionDeltaTranslation = RootMotionTransformDelta.&lt;span class=&#34;built_in&#34;&gt;GetTranslation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// If there&amp;#x27;s no root motion delta, keep the previous stride direction&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ActualStrideDirection = CachedRootMotionDeltaTranslation.&lt;span class=&#34;built_in&#34;&gt;GetSafeNormal&lt;/span&gt;(UE_SMALL_NUMBER, PreviousStrideDirection);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Early exit on missing root motion delta attribute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FBoneContainer&amp;amp; RequiredBones = Output.Pose.&lt;span class=&#34;built_in&#34;&gt;GetPose&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;GetBoneContainer&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FTransform IKFootRootTransform = Output.Pose.&lt;span class=&#34;built_in&#34;&gt;GetComponentSpaceTransform&lt;/span&gt;(IKFootRootBone.&lt;span class=&#34;built_in&#34;&gt;GetCompactPoseIndex&lt;/span&gt;(RequiredBones));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector ResolvedFloorNormal = FloorNormalDirection.&lt;span class=&#34;built_in&#34;&gt;AsComponentSpaceDirection&lt;/span&gt;(AnimInstanceProxy, IKFootRootTransform);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector ResolvedGravityDirection = GravityDirection.&lt;span class=&#34;built_in&#34;&gt;AsComponentSpaceDirection&lt;/span&gt;(AnimInstanceProxy, IKFootRootTransform);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bOrientStrideDirectionUsingFloorNormal)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector StrideWarpingAxis = ResolvedFloorNormal ^ ActualStrideDirection;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ActualStrideDirection = StrideWarpingAxis ^ ResolvedFloorNormal;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Get all foot IK Transforms&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt;&amp;amp; Foot : FootData)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Foot.IKFootBoneTransform = Output.Pose.&lt;span class=&#34;built_in&#34;&gt;GetComponentSpaceTransform&lt;/span&gt;(Foot.IKFootBoneIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bGraphDrivenWarping)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (CachedRootMotionDeltaSpeed &amp;lt;= MinRootMotionSpeedThreshold)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// If root motion speed is under the threshold, snap back to no stride adjustment.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// If interpolation is on, it will blend the result&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ActualStrideScale = &lt;span class=&#34;number&#34;&gt;1.0f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Graph driven stride scale factor will be determined by the ratio of the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// locomotion (capsule/physics) speed against the animation root motion speed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ActualStrideScale = LocomotionSpeed / CachedRootMotionDeltaSpeed;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Allow the opportunity for stride scale clamping and interpolation regardless of evaluation mode&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ActualStrideScale = StrideScaleModifierState.&lt;span class=&#34;built_in&#34;&gt;ApplyTo&lt;/span&gt;(StrideScaleModifier, ActualStrideScale, CachedDeltaTime);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bGraphDrivenWarping)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Forward the side effects of stride warping on the root motion contribution for this sub-graph&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		RootMotionTransformDelta.&lt;span class=&#34;built_in&#34;&gt;ScaleTranslation&lt;/span&gt;(ActualStrideScale);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bRootMotionOverridden = RootMotionProvider-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;OverrideRootMotion&lt;/span&gt;(RootMotionTransformDelta, Output.CustomAttributes);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ensureMsgf&lt;/span&gt;(bRootMotionOverridden, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Graph driven Stride Warping expected a root motion delta to be present in the attribute stream prior to warping/overriding it.&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Scale IK feet bones along Stride Warping Axis, from the Thigh bone location.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt;&amp;amp; Foot : FootData)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Stride Warping along Stride Warping Axis&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector IKFootLocation = Foot.IKFootBoneTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector ThighBoneLocation = Output.Pose.&lt;span class=&#34;built_in&#34;&gt;GetComponentSpaceTransform&lt;/span&gt;(Foot.ThighBoneIndex).&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Project Thigh Bone Location on plane made of FootIKLocation and FloorPlaneNormal, along Gravity Dir.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// This will be the StrideWarpingPlaneOrigin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector StrideWarpingPlaneOrigin = (FMath::&lt;span class=&#34;built_in&#34;&gt;Abs&lt;/span&gt;(ResolvedGravityDirection | ResolvedFloorNormal) &amp;gt; DELTA) ? FMath::&lt;span class=&#34;built_in&#34;&gt;LinePlaneIntersection&lt;/span&gt;(ThighBoneLocation, ThighBoneLocation + ResolvedGravityDirection, IKFootLocation, ResolvedFloorNormal) : IKFootLocation;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Project FK Foot along StrideWarping Plane, this will be our Scale Origin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector ScaleOrigin = FVector::&lt;span class=&#34;built_in&#34;&gt;PointPlaneProject&lt;/span&gt;(IKFootLocation, StrideWarpingPlaneOrigin, ActualStrideDirection);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Now the ScaleOrigin and IKFootLocation are forming a line parallel to the floor, and we can scale the IK foot.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector WarpedLocation = ScaleOrigin + (IKFootLocation - ScaleOrigin) * ActualStrideScale;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Foot.IKFootBoneTransform.&lt;span class=&#34;built_in&#34;&gt;SetLocation&lt;/span&gt;(WarpedLocation);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FVector PelvisOffset = FVector::ZeroVector;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FCompactPoseBoneIndex PelvisBoneIndex = PelvisBone.&lt;span class=&#34;built_in&#34;&gt;GetCompactPoseIndex&lt;/span&gt;(RequiredBones);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FTransform PelvisTransform = Output.Pose.&lt;span class=&#34;built_in&#34;&gt;GetComponentSpaceTransform&lt;/span&gt;(PelvisBoneIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector InitialPelvisLocation = PelvisTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	TArray&amp;lt;&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt;, TInlineAllocator&amp;lt;&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;&amp;gt;&amp;gt; FKFootDistancesToPelvis;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FKFootDistancesToPelvis.&lt;span class=&#34;built_in&#34;&gt;Reserve&lt;/span&gt;(FootData.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	TArray&amp;lt;FVector, TInlineAllocator&amp;lt;&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;&amp;gt;&amp;gt; IKFootLocations;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	IKFootLocations.&lt;span class=&#34;built_in&#34;&gt;Reserve&lt;/span&gt;(FootData.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt;&amp;amp; Foot : FootData)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector FKFootLocation = Output.Pose.&lt;span class=&#34;built_in&#34;&gt;GetComponentSpaceTransform&lt;/span&gt;(Foot.FKFootBoneIndex).&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FKFootDistancesToPelvis.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(FVector::&lt;span class=&#34;built_in&#34;&gt;Dist&lt;/span&gt;(FKFootLocation, InitialPelvisLocation));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector IKFootLocation = Foot.IKFootBoneTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		IKFootLocations.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(IKFootLocation);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Adjust Pelvis down if needed to keep foot contact with the ground and prevent over-extension&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	PelvisTransform = PelvisIKFootSolver.&lt;span class=&#34;built_in&#34;&gt;Solve&lt;/span&gt;(PelvisTransform, FKFootDistancesToPelvis, IKFootLocations, CachedDeltaTime);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Add adjusted pelvis transform&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(!PelvisTransform.&lt;span class=&#34;built_in&#34;&gt;ContainsNaN&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	OutBoneTransforms.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;FBoneTransform&lt;/span&gt;(PelvisBoneIndex, PelvisTransform));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Compute final offset to use below&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	PelvisOffset = (PelvisTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() - InitialPelvisLocation);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Rotate Thigh bones to help IK, and maintain leg shape.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bCompensateIKUsingFKThighRotation)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt;&amp;amp; Foot : FootData)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FTransform ThighTransform = Output.Pose.&lt;span class=&#34;built_in&#34;&gt;GetComponentSpaceTransform&lt;/span&gt;(Foot.ThighBoneIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FTransform FKFootTransform = Output.Pose.&lt;span class=&#34;built_in&#34;&gt;GetComponentSpaceTransform&lt;/span&gt;(Foot.FKFootBoneIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FTransform AdjustedThighTransform = ThighTransform;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			AdjustedThighTransform.&lt;span class=&#34;built_in&#34;&gt;AddToTranslation&lt;/span&gt;(PelvisOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector InitialDir = (FKFootTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() - ThighTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;()).&lt;span class=&#34;built_in&#34;&gt;GetSafeNormal&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector TargetDir = (Foot.IKFootBoneTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() - AdjustedThighTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;()).&lt;span class=&#34;built_in&#34;&gt;GetSafeNormal&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Find Delta Rotation take takes us from Old to New dir&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FQuat DeltaRotation = FQuat::&lt;span class=&#34;built_in&#34;&gt;FindBetweenNormals&lt;/span&gt;(InitialDir, TargetDir);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Rotate our Joint quaternion by this delta rotation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			AdjustedThighTransform.&lt;span class=&#34;built_in&#34;&gt;SetRotation&lt;/span&gt;(DeltaRotation * AdjustedThighTransform.&lt;span class=&#34;built_in&#34;&gt;GetRotation&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Add adjusted thigh transform&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(!AdjustedThighTransform.&lt;span class=&#34;built_in&#34;&gt;ContainsNaN&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			OutBoneTransforms.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;FBoneTransform&lt;/span&gt;(Foot.ThighBoneIndex, AdjustedThighTransform));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Clamp IK Feet bone based on FK leg. To prevent over-extension and preserve animated motion.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bClampIKUsingFKLimits)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; FKLength = FVector::&lt;span class=&#34;built_in&#34;&gt;Dist&lt;/span&gt;(FKFootTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;(), ThighTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; IKLength = FVector::&lt;span class=&#34;built_in&#34;&gt;Dist&lt;/span&gt;(Foot.IKFootBoneTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;(), AdjustedThighTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (IKLength &amp;gt; FKLength)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector ClampedFootLocation = AdjustedThighTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() + TargetDir * FKLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					Foot.IKFootBoneTransform.&lt;span class=&#34;built_in&#34;&gt;SetLocation&lt;/span&gt;(ClampedFootLocation);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Add final IK feet transforms&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt;&amp;amp; Foot : FootData)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(!Foot.IKFootBoneTransform.&lt;span class=&#34;built_in&#34;&gt;ContainsNaN&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		OutBoneTransforms.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;FBoneTransform&lt;/span&gt;(Foot.IKFootBoneIndex, Foot.IKFootBoneTransform));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Sort OutBoneTransforms so indices are in increasing order.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	OutBoneTransforms.&lt;span class=&#34;built_in&#34;&gt;Sort&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;FCompareBoneTransformIndex&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Orientation-Warping-方向扭曲&#34;&gt;&lt;a href=&#34;#Orientation-Warping-方向扭曲&#34; class=&#34;headerlink&#34; title=&#34;Orientation Warping (方向扭曲)&#34;&gt;&lt;/a&gt;Orientation Warping (方向扭曲)&lt;/h3&gt;&lt;p&gt;隔离并扭曲动画姿势的腿部IK骨骼，契合根骨骼运动的动态更新移动方向。&lt;br&gt;用于填充动画序列中的覆盖缺口，减少手动创建间隙动画或创建过多混合空间过度的必要性。&lt;br&gt;上下半身分离、锁定瞄准、八向移动会有比较直观的效果。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Engine\Plugins\Animation\AnimationWarping\Source\Runtime\Public\BoneControllers\AnimNode_OrientationWarping.cpp&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;246&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;247&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;248&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;249&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;250&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;251&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;252&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;253&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;254&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;257&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;258&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;259&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;260&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;261&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;262&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;263&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;264&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;265&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;266&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;267&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;268&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;269&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;270&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;271&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;272&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;273&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;274&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;275&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;276&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;277&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;278&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;279&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;280&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;281&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;282&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;283&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;284&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;285&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;286&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;287&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;288&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;289&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;291&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;292&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;293&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;294&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;295&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;296&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;297&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;298&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;299&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;300&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;301&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;302&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;303&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;304&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;305&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;306&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;307&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;308&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;309&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;310&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;311&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;312&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;313&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;314&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;315&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;316&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;317&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;318&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;319&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;320&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;321&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;322&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;323&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;FAnimNode_OrientationWarping::EvaluateSkeletalControl_AnyThread&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(FComponentSpacePoseContext&amp;amp; Output, TArray&amp;lt;FBoneTransform&amp;gt;&amp;amp; OutBoneTransforms)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;SCOPE_CYCLE_COUNTER&lt;/span&gt;(STAT_OrientationWarping_Eval);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(OutBoneTransforms.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;() == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ActualOrientationAngle = OrientationAngle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; DeltaSeconds = Output.AnimInstanceProxy-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetDeltaSeconds&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector RotationAxisVector = UE::Anim::&lt;span class=&#34;built_in&#34;&gt;GetAxisVector&lt;/span&gt;(RotationAxis);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FVector RootMotionDeltaDirection = FVector::ZeroVector;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FVector LocomotionForward = FVector::ZeroVector;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bGraphDrivenWarping = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UE::Anim::IAnimRootMotionProvider* RootMotionProvider = UE::Anim::IAnimRootMotionProvider::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Mode == EWarpingEvaluationMode::Graph)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		bGraphDrivenWarping = !!RootMotionProvider;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ensureMsgf&lt;/span&gt;(bGraphDrivenWarping, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Graph driven Orientation Warping expected a valid root motion delta provider interface.&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; WITH_EDITORONLY_DATA&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	bFoundRootMotionAttribute = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// We will likely need to revisit LocomotionAngle participating as an input to orientation warping.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Without velocity information from the motion model (such as the capsule), LocomotionAngle isn&amp;#x27;t enough&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// information in isolation for all cases when deciding to warp.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// For example imagine that the motion model has stopped moving with zero velocity due to a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// transition into a strafing stop. During that transition we may play an animation with non-zero &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// velocity for an arbitrary number of frames. In this scenario the concept of direction is meaningless &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// since we cannot orient the animation to match a zero velocity and consequently a zero direction, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// since that would break the pose. For those frames, we would incorrectly over-orient the strafe.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// The solution may be instead to pass velocity with the actor base rotation, allowing us to retain&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// speed information about the motion. It may also allow us to do more complex orienting behavior &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// when multiple degrees of freedom can be considered.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bGraphDrivenWarping)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FTransform RootMotionTransformDelta = FTransform::Identity;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		bGraphDrivenWarping = RootMotionProvider-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;ExtractRootMotion&lt;/span&gt;(Output.CustomAttributes, RootMotionTransformDelta);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Graph driven orientation warping will modify the incoming root motion to orient towards the intended locomotion angle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bGraphDrivenWarping)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; WITH_EDITORONLY_DATA&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Graph driven Orientation Warping expects a root motion delta to be present in the attribute stream.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			bFoundRootMotionAttribute = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// In UE, forward is defined as +x; consequently this is also true when sampling an actor&amp;#x27;s velocity. Historically the skeletal &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// mesh component forward will not match the actor, requiring us to correct the rotation before sampling the LocomotionForward.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// In order to make orientation warping &amp;#x27;pure&amp;#x27; in the future we will need to provide more context about the intent of&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// the actor vs the intent of the animation in their respective spaces. Specifically, we will need some form the following information:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// 1. Actor Forward&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// 2. Actor Velocity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// 3. Skeletal Mesh Relative Rotation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			LocomotionAngle = FRotator::&lt;span class=&#34;built_in&#34;&gt;NormalizeAxis&lt;/span&gt;(LocomotionAngle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			LocomotionAngle = FMath::&lt;span class=&#34;built_in&#34;&gt;DegreesToRadians&lt;/span&gt;(LocomotionAngle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FQuat LocomotionRotation = &lt;span class=&#34;built_in&#34;&gt;FQuat&lt;/span&gt;(RotationAxisVector, LocomotionAngle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FTransform SkeletalMeshRelativeTransform = Output.AnimInstanceProxy-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetComponentRelativeTransform&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FQuat SkeletalMeshRelativeRotation = SkeletalMeshRelativeTransform.&lt;span class=&#34;built_in&#34;&gt;GetRotation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			LocomotionForward = SkeletalMeshRelativeRotation.&lt;span class=&#34;built_in&#34;&gt;UnrotateVector&lt;/span&gt;(LocomotionRotation.&lt;span class=&#34;built_in&#34;&gt;GetForwardVector&lt;/span&gt;()).&lt;span class=&#34;built_in&#34;&gt;GetSafeNormal&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OffsetAlpha == &lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// No alpha. Reset our heading offset.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				HeadingOffset = &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Accumulate a percentage of our component&amp;#x27;s frame delta, based on offset alpha&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; LastComponentHeading = ComponentHeading;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ComponentHeading = Output.AnimInstanceProxy-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetComponentTransform&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;GetRotation&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;GetTwistAngle&lt;/span&gt;(RotationAxisVector);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				HeadingOffset += FMath::&lt;span class=&#34;built_in&#34;&gt;UnwindRadians&lt;/span&gt;(LastComponentHeading - ComponentHeading) * OffsetAlpha;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Accumulate a percentage of our root motion&amp;#x27;s heading, based on offset alpha&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; RootMotionDeltaHeading = RootMotionTransformDelta.&lt;span class=&#34;built_in&#34;&gt;GetRotation&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;GetTwistAngle&lt;/span&gt;(RotationAxisVector);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				HeadingOffset += RootMotionDeltaHeading * OffsetAlpha;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// If our alpha is decreasing, we&amp;#x27;re blending out the offset.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// We don&amp;#x27;t need to do this when blending in because we&amp;#x27;re just accumulating partial component offset and root motion.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; OffsetAlphaStep = LastOffsetAlpha - OffsetAlpha;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OffsetAlphaStep &amp;gt; &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					HeadingOffset -= OffsetAlphaStep * HeadingOffset / LastOffsetAlpha;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; MaxOffsetRadians = FMath::&lt;span class=&#34;built_in&#34;&gt;DegreesToRadians&lt;/span&gt;(MaxOffsetAngle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				HeadingOffset = FMath::&lt;span class=&#34;built_in&#34;&gt;Clamp&lt;/span&gt;(HeadingOffset, -MaxOffsetAngle, MaxOffsetAngle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			LastOffsetAlpha = OffsetAlpha;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Rotate the root motion direction by our effective offset.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// This means we will warp our pose based on the adjusted offset, and correct accordingly.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FQuat RootOffsetRotation = &lt;span class=&#34;built_in&#34;&gt;FQuat&lt;/span&gt;(RotationAxisVector, HeadingOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector RootMotionDeltaTranslation = RootOffsetRotation.&lt;span class=&#34;built_in&#34;&gt;RotateVector&lt;/span&gt;(RootMotionTransformDelta.&lt;span class=&#34;built_in&#34;&gt;GetTranslation&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Hold previous direction if we can&amp;#x27;t calculate it from current move delta, because the root is no longer moving&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			RootMotionDeltaDirection = RootMotionDeltaTranslation.&lt;span class=&#34;built_in&#34;&gt;GetSafeNormal&lt;/span&gt;(UE_SMALL_NUMBER, PreviousRootMotionDeltaDirection);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; RootMotionDeltaSpeed = RootMotionDeltaTranslation.&lt;span class=&#34;built_in&#34;&gt;Size&lt;/span&gt;() / DeltaSeconds;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (RootMotionDeltaSpeed &amp;lt; MinRootMotionSpeedThreshold)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// If we&amp;#x27;re under the threshold, snap orientation angle to 0, and let interpolation handle the delta&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ActualOrientationAngle = &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				PreviousRootMotionDeltaDirection = RootMotionDeltaDirection;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Capture the delta rotation from the axis of motion we care about&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				FQuat WarpedRotation = FQuat::&lt;span class=&#34;built_in&#34;&gt;FindBetween&lt;/span&gt;(RootMotionDeltaDirection, LocomotionForward);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// For interpolated warping, guarantee that PreviousOrientationAngle is relative to the current frame&amp;#x27;s root motion direction &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; RootMotionDeltaAngleDifference = FMath::&lt;span class=&#34;built_in&#34;&gt;Acos&lt;/span&gt;(RootMotionDeltaDirection.&lt;span class=&#34;built_in&#34;&gt;Dot&lt;/span&gt;(PreviousRootMotionDeltaDirection));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				RootMotionDeltaAngleDifference *= FMath::&lt;span class=&#34;built_in&#34;&gt;Sign&lt;/span&gt;(RotationAxisVector.&lt;span class=&#34;built_in&#34;&gt;Dot&lt;/span&gt;(RootMotionDeltaDirection.&lt;span class=&#34;built_in&#34;&gt;Cross&lt;/span&gt;(PreviousRootMotionDeltaDirection)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				PreviousRootMotionDeltaDirection = RootMotionDeltaDirection;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				PreviousOrientationAngle += RootMotionDeltaAngleDifference;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ActualOrientationAngle = WarpedRotation.&lt;span class=&#34;built_in&#34;&gt;GetTwistAngle&lt;/span&gt;(RotationAxisVector);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Motion Matching may return an animation that deviates a lot from the movement direction (e.g movement direction going bwd and motion matching could return the fwd animation for a few frames)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// When that happens, since we use the delta between root motion and movement direction, we would be over-rotating the lower body and breaking the pose during those frames&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// So, when that happens we use the inverse of the movement direction to calculate our target rotation. &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// This feels a bit &amp;#x27;hacky&amp;#x27; but its the only option I&amp;#x27;ve found so far to mitigate the problem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (LocomotionAngleDeltaThreshold &amp;gt; &lt;span class=&#34;number&#34;&gt;0.f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (FMath::&lt;span class=&#34;built_in&#34;&gt;Abs&lt;/span&gt;(FMath::&lt;span class=&#34;built_in&#34;&gt;RadiansToDegrees&lt;/span&gt;(ActualOrientationAngle)) &amp;gt; LocomotionAngleDeltaThreshold)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						WarpedRotation = FQuat::&lt;span class=&#34;built_in&#34;&gt;FindBetween&lt;/span&gt;(RootMotionDeltaDirection, -LocomotionForward);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						ActualOrientationAngle = WarpedRotation.&lt;span class=&#34;built_in&#34;&gt;GetTwistAngle&lt;/span&gt;(RotationAxisVector);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (FMath::&lt;span class=&#34;built_in&#34;&gt;Abs&lt;/span&gt;(FMath::&lt;span class=&#34;built_in&#34;&gt;RadiansToDegrees&lt;/span&gt;(PreviousOrientationAngle)) &amp;gt; LocomotionAngleDeltaThreshold)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;comment&#34;&gt;// Previous orientation angle might be using an opposite direction too, so flip it if it exceeds the threshold as well.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						PreviousOrientationAngle = WarpedRotation.&lt;span class=&#34;built_in&#34;&gt;GetTwistAngle&lt;/span&gt;(RotationAxisVector);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Rotate the root motion delta fully by the warped angle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector WarpedRootMotionTranslationDelta = WarpedRotation.&lt;span class=&#34;built_in&#34;&gt;RotateVector&lt;/span&gt;(RootMotionDeltaTranslation);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				RootMotionTransformDelta.&lt;span class=&#34;built_in&#34;&gt;SetTranslation&lt;/span&gt;(WarpedRootMotionTranslationDelta);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Forward the side effects of orientation warping on the root motion contribution for this sub-graph&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bRootMotionOverridden = RootMotionProvider-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;OverrideRootMotion&lt;/span&gt;(RootMotionTransformDelta, Output.CustomAttributes);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;ensureMsgf&lt;/span&gt;(bRootMotionOverridden, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Graph driven Orientation Warping expected a root motion delta to be present in the attribute stream prior to warping/overriding it.&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Early exit on missing root motion delta attribute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Manual orientation warping will take the angle directly&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ActualOrientationAngle = FRotator::&lt;span class=&#34;built_in&#34;&gt;NormalizeAxis&lt;/span&gt;(ActualOrientationAngle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ActualOrientationAngle = FMath::&lt;span class=&#34;built_in&#34;&gt;DegreesToRadians&lt;/span&gt;(ActualOrientationAngle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Optionally interpolate the effective orientation towards the target orientation angle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (RotationInterpSpeed &amp;gt; &lt;span class=&#34;number&#34;&gt;0.f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ActualOrientationAngle = FMath::&lt;span class=&#34;built_in&#34;&gt;FInterpTo&lt;/span&gt;(PreviousOrientationAngle, ActualOrientationAngle, DeltaSeconds, RotationInterpSpeed);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		PreviousOrientationAngle = ActualOrientationAngle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Allow the alpha value of the node to affect the final rotation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ActualOrientationAngle *= ActualAlpha * WarpingAlpha;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ENABLE_ANIM_DEBUG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bDebugging = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; WITH_EDITORONLY_DATA&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	bDebugging = bDebugging || bEnableDebugDraw;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;constexpr&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; DebugDrawScale = &lt;span class=&#34;number&#34;&gt;1.f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; int32 DebugIndex = CVarAnimNodeOrientationWarpingDebug.&lt;span class=&#34;built_in&#34;&gt;GetValueOnAnyThread&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	bDebugging = bDebugging || (DebugIndex &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bDebugging)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FTransform ComponentTransform = Output.AnimInstanceProxy-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetComponentTransform&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector ActorForwardDirection = Output.AnimInstanceProxy-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetActorTransform&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;GetRotation&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;GetForwardVector&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FVector DebugArrowOffset = FVector::ZAxisVector * DebugDrawScale;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bDrawAll = DebugIndex == &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bDrawOffset = (DebugIndex == &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) || bDrawAll;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bDrawWarping = (DebugIndex == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) || bDrawAll;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bDrawWarping)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector ForwardDirection = bGraphDrivenWarping&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				? ComponentTransform.&lt;span class=&#34;built_in&#34;&gt;GetRotation&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;RotateVector&lt;/span&gt;(LocomotionForward)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				: ActorForwardDirection;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Output.AnimInstanceProxy-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AnimDrawDebugDirectionalArrow&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ComponentTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() + DebugArrowOffset,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ComponentTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() + DebugArrowOffset + ForwardDirection * &lt;span class=&#34;number&#34;&gt;100.f&lt;/span&gt; * DebugDrawScale,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;number&#34;&gt;40.f&lt;/span&gt; * DebugDrawScale, FColor::Red, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0.f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2.f&lt;/span&gt; * DebugDrawScale);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector RotationDirection = bGraphDrivenWarping&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				? ComponentTransform.&lt;span class=&#34;built_in&#34;&gt;GetRotation&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;RotateVector&lt;/span&gt;(RootMotionDeltaDirection)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				: ActorForwardDirection.&lt;span class=&#34;built_in&#34;&gt;RotateAngleAxis&lt;/span&gt;(OrientationAngle, RotationAxisVector);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			DebugArrowOffset += FVector::ZAxisVector * DebugDrawScale;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Output.AnimInstanceProxy-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AnimDrawDebugDirectionalArrow&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ComponentTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() + DebugArrowOffset,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ComponentTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() + DebugArrowOffset + RotationDirection * &lt;span class=&#34;number&#34;&gt;100.f&lt;/span&gt; * DebugDrawScale,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;number&#34;&gt;40.f&lt;/span&gt; * DebugDrawScale, FColor::Blue, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0.f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2.f&lt;/span&gt; * DebugDrawScale);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; ActualOrientationAngleDegrees = FMath::&lt;span class=&#34;built_in&#34;&gt;RadiansToDegrees&lt;/span&gt;(ActualOrientationAngle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector WarpedRotationDirection = bGraphDrivenWarping&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				? RotationDirection.&lt;span class=&#34;built_in&#34;&gt;RotateAngleAxis&lt;/span&gt;(ActualOrientationAngleDegrees, RotationAxisVector)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				: ActorForwardDirection.&lt;span class=&#34;built_in&#34;&gt;RotateAngleAxis&lt;/span&gt;(ActualOrientationAngleDegrees, RotationAxisVector);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			DebugArrowOffset += FVector::ZAxisVector * DebugDrawScale;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Output.AnimInstanceProxy-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AnimDrawDebugDirectionalArrow&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ComponentTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() + DebugArrowOffset,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ComponentTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() + DebugArrowOffset + WarpedRotationDirection * &lt;span class=&#34;number&#34;&gt;100.f&lt;/span&gt; * DebugDrawScale,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;number&#34;&gt;40.f&lt;/span&gt; * DebugDrawScale, FColor::Green, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0.f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2.f&lt;/span&gt; * DebugDrawScale);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			DebugArrowOffset += FVector::ZAxisVector * DebugDrawScale;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bDrawOffset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; HeadingOffetDegrees = FMath::&lt;span class=&#34;built_in&#34;&gt;RadiansToDegrees&lt;/span&gt;(HeadingOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector OffsetDirection = ActorForwardDirection.&lt;span class=&#34;built_in&#34;&gt;RotateAngleAxis&lt;/span&gt;(HeadingOffetDegrees, RotationAxisVector);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Output.AnimInstanceProxy-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AnimDrawDebugDirectionalArrow&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ComponentTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() + DebugArrowOffset,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ComponentTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() + DebugArrowOffset + OffsetDirection * &lt;span class=&#34;number&#34;&gt;100.f&lt;/span&gt; * DebugDrawScale,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;number&#34;&gt;40.f&lt;/span&gt; * DebugDrawScale, FColor::Purple, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0.f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2.f&lt;/span&gt; * DebugDrawScale);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			DebugArrowOffset += FVector::ZAxisVector * DebugDrawScale;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Output.AnimInstanceProxy-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AnimDrawDebugDirectionalArrow&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ComponentTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() + DebugArrowOffset,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ComponentTransform.&lt;span class=&#34;built_in&#34;&gt;GetLocation&lt;/span&gt;() + DebugArrowOffset + ActorForwardDirection * &lt;span class=&#34;number&#34;&gt;100.f&lt;/span&gt; * DebugDrawScale,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;number&#34;&gt;40.f&lt;/span&gt; * DebugDrawScale, FColor::Black, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0.f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2.f&lt;/span&gt; * DebugDrawScale);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Combine our warping and heading offsets to rotate our root bone&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; CombinedRootOffset = FMath::&lt;span class=&#34;built_in&#34;&gt;UnwindRadians&lt;/span&gt;(ActualOrientationAngle * DistributedBoneOrientationAlpha + HeadingOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Rotate Root Bone first, as that cheaply rotates the whole pose with one transformation.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!FMath::&lt;span class=&#34;built_in&#34;&gt;IsNearlyZero&lt;/span&gt;(CombinedRootOffset, KINDA_SMALL_NUMBER))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FQuat RootRotation = &lt;span class=&#34;built_in&#34;&gt;FQuat&lt;/span&gt;(RotationAxisVector, CombinedRootOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FCompactPoseBoneIndex &lt;span class=&#34;title&#34;&gt;RootBoneIndex&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;function&#34;&gt;FTransform &lt;span class=&#34;title&#34;&gt;RootBoneTransform&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Output.Pose.GetComponentSpaceTransform(RootBoneIndex))&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		RootBoneTransform.&lt;span class=&#34;built_in&#34;&gt;SetRotation&lt;/span&gt;(RootRotation * RootBoneTransform.&lt;span class=&#34;built_in&#34;&gt;GetRotation&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		RootBoneTransform.&lt;span class=&#34;built_in&#34;&gt;NormalizeRotation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Output.Pose.&lt;span class=&#34;built_in&#34;&gt;SetComponentSpaceTransform&lt;/span&gt;(RootBoneIndex, RootBoneTransform);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; int32 NumSpineBones = SpineBoneDataArray.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bSpineOrientationAlpha = !FMath::&lt;span class=&#34;built_in&#34;&gt;IsNearlyZero&lt;/span&gt;(DistributedBoneOrientationAlpha, KINDA_SMALL_NUMBER);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bUpdateSpineBones = (NumSpineBones &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;amp;&amp;amp; bSpineOrientationAlpha;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bUpdateSpineBones)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Spine bones counter rotate body orientation evenly across all bones.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (int32 ArrayIndex = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; ArrayIndex &amp;lt; NumSpineBones; ArrayIndex++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FOrientationWarpingSpineBoneData&amp;amp; BoneData = SpineBoneDataArray[ArrayIndex];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FQuat SpineBoneCounterRotation = &lt;span class=&#34;built_in&#34;&gt;FQuat&lt;/span&gt;(RotationAxisVector, -ActualOrientationAngle * DistributedBoneOrientationAlpha * BoneData.Weight);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(BoneData.Weight &amp;gt; &lt;span class=&#34;number&#34;&gt;0.f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;function&#34;&gt;FTransform &lt;span class=&#34;title&#34;&gt;SpineBoneTransform&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Output.Pose.GetComponentSpaceTransform(BoneData.BoneIndex))&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			SpineBoneTransform.&lt;span class=&#34;built_in&#34;&gt;SetRotation&lt;/span&gt;((SpineBoneCounterRotation * SpineBoneTransform.&lt;span class=&#34;built_in&#34;&gt;GetRotation&lt;/span&gt;()));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			SpineBoneTransform.&lt;span class=&#34;built_in&#34;&gt;NormalizeRotation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Output.Pose.&lt;span class=&#34;built_in&#34;&gt;SetComponentSpaceTransform&lt;/span&gt;(BoneData.BoneIndex, SpineBoneTransform);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; IKFootRootOrientationAlpha = &lt;span class=&#34;number&#34;&gt;1.f&lt;/span&gt; - DistributedBoneOrientationAlpha;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bUpdateIKFootRoot = (IKFootData.IKFootRootBoneIndex != &lt;span class=&#34;built_in&#34;&gt;FCompactPoseBoneIndex&lt;/span&gt;(INDEX_NONE)) &amp;amp;&amp;amp; !FMath::&lt;span class=&#34;built_in&#34;&gt;IsNearlyZero&lt;/span&gt;(IKFootRootOrientationAlpha, KINDA_SMALL_NUMBER);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Rotate IK Foot Root&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bUpdateIKFootRoot)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FQuat BoneRotation = &lt;span class=&#34;built_in&#34;&gt;FQuat&lt;/span&gt;(RotationAxisVector, ActualOrientationAngle * IKFootRootOrientationAlpha);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;function&#34;&gt;FTransform &lt;span class=&#34;title&#34;&gt;IKFootRootTransform&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Output.Pose.GetComponentSpaceTransform(IKFootData.IKFootRootBoneIndex))&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		IKFootRootTransform.&lt;span class=&#34;built_in&#34;&gt;SetRotation&lt;/span&gt;(BoneRotation * IKFootRootTransform.&lt;span class=&#34;built_in&#34;&gt;GetRotation&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		IKFootRootTransform.&lt;span class=&#34;built_in&#34;&gt;NormalizeRotation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Output.Pose.&lt;span class=&#34;built_in&#34;&gt;SetComponentSpaceTransform&lt;/span&gt;(IKFootData.IKFootRootBoneIndex, IKFootRootTransform);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// IK Feet &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// These match the root orientation, so don&amp;#x27;t rotate them. Just preserve root rotation. &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// We need to update their translation though, since we rotated their parent (the IK Foot Root bone).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; int32 NumIKFootBones = IKFootData.IKFootBoneIndexArray.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bUpdateIKFootBones = bUpdateIKFootRoot &amp;amp;&amp;amp; (NumIKFootBones &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bUpdateIKFootBones)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FQuat IKFootRotation = &lt;span class=&#34;built_in&#34;&gt;FQuat&lt;/span&gt;(RotationAxisVector, -ActualOrientationAngle * IKFootRootOrientationAlpha);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (int32 ArrayIndex = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; ArrayIndex &amp;lt; NumIKFootBones; ArrayIndex++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FCompactPoseBoneIndex&amp;amp; IKFootBoneIndex = IKFootData.IKFootBoneIndexArray[ArrayIndex];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;function&#34;&gt;FTransform &lt;span class=&#34;title&#34;&gt;IKFootBoneTransform&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Output.Pose.GetComponentSpaceTransform(IKFootBoneIndex))&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				IKFootBoneTransform.&lt;span class=&#34;built_in&#34;&gt;SetRotation&lt;/span&gt;(IKFootRotation * IKFootBoneTransform.&lt;span class=&#34;built_in&#34;&gt;GetRotation&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				IKFootBoneTransform.&lt;span class=&#34;built_in&#34;&gt;NormalizeRotation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				Output.Pose.&lt;span class=&#34;built_in&#34;&gt;SetComponentSpaceTransform&lt;/span&gt;(IKFootBoneIndex, IKFootBoneTransform);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	OutBoneTransforms.&lt;span class=&#34;built_in&#34;&gt;Sort&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;FCompareBoneTransformIndex&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Distance-Match-距离匹配&#34;&gt;&lt;a href=&#34;#Distance-Match-距离匹配&#34; class=&#34;headerlink&#34; title=&#34;Distance Match (距离匹配)&#34;&gt;&lt;/a&gt;Distance Match (距离匹配)&lt;/h3&gt;&lt;p&gt;通过移动输入的实际位移，调整动画，解决起步或者停步时的滑步问题。&lt;/p&gt;
&lt;p&gt;与参考文章有所出入，有些函数已经被移除插件库。&lt;/p&gt;
&lt;p&gt;注释中提到需要跟步幅扭曲有所配合，因为AdvanceTimeByDistanceMatching似乎仅仅是提供了播放速率的调整，并没有调整骨骼。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Engine\Plugins\Animation\AnimationLocomotionLibrary\Source\Runtime\Private\AnimDistanceMatchingLibrary.cpp&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;FSequenceEvaluatorReference &lt;span class=&#34;title&#34;&gt;UAnimDistanceMatchingLibrary::AdvanceTimeByDistanceMatching&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FAnimUpdateContext&amp;amp; UpdateContext, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FSequenceEvaluatorReference&amp;amp; SequenceEvaluator, &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; DistanceTraveled, FName DistanceCurveName, FVector2D PlayRateClamp)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	SequenceEvaluator.&lt;span class=&#34;built_in&#34;&gt;CallAnimNodeFunction&lt;/span&gt;&amp;lt;FAnimNode_SequenceEvaluator&amp;gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;AdvanceTimeByDistanceMatching&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		[&amp;amp;UpdateContext, DistanceTraveled, DistanceCurveName, PlayRateClamp](FAnimNode_SequenceEvaluator&amp;amp; InSequenceEvaluator)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FAnimationUpdateContext* AnimationUpdateContext = UpdateContext.&lt;span class=&#34;built_in&#34;&gt;GetContext&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; DeltaTime = AnimationUpdateContext-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetDeltaTime&lt;/span&gt;(); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (DeltaTime &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; DistanceTraveled &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UAnimSequenceBase* AnimSequence = &lt;span class=&#34;built_in&#34;&gt;Cast&lt;/span&gt;&amp;lt;UAnimSequence&amp;gt;(InSequenceEvaluator.&lt;span class=&#34;built_in&#34;&gt;GetSequence&lt;/span&gt;()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; CurrentTime = InSequenceEvaluator.&lt;span class=&#34;built_in&#34;&gt;GetExplicitTime&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; CurrentAssetLength = InSequenceEvaluator.&lt;span class=&#34;built_in&#34;&gt;GetCurrentAssetLength&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bAllowLooping = InSequenceEvaluator.&lt;span class=&#34;built_in&#34;&gt;GetShouldLoop&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; USkeleton::AnimCurveUID CurveUID = UE::Anim::DistanceMatchingUtility::&lt;span class=&#34;built_in&#34;&gt;GetCurveUID&lt;/span&gt;(AnimSequence, DistanceCurveName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; TimeAfterDistanceTraveled = UE::Anim::DistanceMatchingUtility::&lt;span class=&#34;built_in&#34;&gt;GetTimeAfterDistanceTraveled&lt;/span&gt;(AnimSequence, CurrentTime, DistanceTraveled, CurveUID, bAllowLooping);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;comment&#34;&gt;// Calculate the effective playrate that would result from advancing the animation by the distance traveled.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;comment&#34;&gt;// Account for the animation looping.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (TimeAfterDistanceTraveled &amp;lt; CurrentTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							TimeAfterDistanceTraveled += CurrentAssetLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; EffectivePlayRate = (TimeAfterDistanceTraveled - CurrentTime) / DeltaTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;comment&#34;&gt;// Clamp the effective play rate.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (PlayRateClamp.X &amp;gt;= &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt; &amp;amp;&amp;amp; PlayRateClamp.X &amp;lt; PlayRateClamp.Y)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							EffectivePlayRate = FMath::&lt;span class=&#34;built_in&#34;&gt;Clamp&lt;/span&gt;(EffectivePlayRate, PlayRateClamp.X, PlayRateClamp.Y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;comment&#34;&gt;// Advance animation time by the effective play rate.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; NewTime = CurrentTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						FAnimationRuntime::&lt;span class=&#34;built_in&#34;&gt;AdvanceTime&lt;/span&gt;(bAllowLooping, EffectivePlayRate * DeltaTime, NewTime, CurrentAssetLength);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!InSequenceEvaluator.&lt;span class=&#34;built_in&#34;&gt;SetExplicitTime&lt;/span&gt;(NewTime))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogAnimDistanceMatchingLibrary, Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Could not set explicit time on sequence evaluator, value is not dynamic. Set it as Always Dynamic.&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogAnimDistanceMatchingLibrary, Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Sequence evaluator does not have an anim sequence to play.&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogAnimDistanceMatchingLibrary, Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;AdvanceTimeByDistanceMatching called with invalid context&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; SequenceEvaluator;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;FSequenceEvaluatorReference &lt;span class=&#34;title&#34;&gt;UAnimDistanceMatchingLibrary::DistanceMatchToTarget&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FSequenceEvaluatorReference&amp;amp; SequenceEvaluator, &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; DistanceToTarget, FName DistanceCurveName)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	SequenceEvaluator.&lt;span class=&#34;built_in&#34;&gt;CallAnimNodeFunction&lt;/span&gt;&amp;lt;FAnimNode_SequenceEvaluator&amp;gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;DistanceMatchToTarget&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		[DistanceToTarget, DistanceCurveName](FAnimNode_SequenceEvaluator&amp;amp; InSequenceEvaluator)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UAnimSequenceBase* AnimSequence = &lt;span class=&#34;built_in&#34;&gt;Cast&lt;/span&gt;&amp;lt;UAnimSequence&amp;gt;(InSequenceEvaluator.&lt;span class=&#34;built_in&#34;&gt;GetSequence&lt;/span&gt;()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; USkeleton::AnimCurveUID CurveUID = UE::Anim::DistanceMatchingUtility::&lt;span class=&#34;built_in&#34;&gt;GetCurveUID&lt;/span&gt;(AnimSequence, DistanceCurveName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (AnimSequence-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;HasCurveData&lt;/span&gt;(CurveUID))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;comment&#34;&gt;// By convention, distance curves store the distance to a target as a negative value.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; NewTime = UE::Anim::DistanceMatchingUtility::&lt;span class=&#34;built_in&#34;&gt;GetAnimPositionFromDistance&lt;/span&gt;(AnimSequence, -DistanceToTarget, CurveUID);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!InSequenceEvaluator.&lt;span class=&#34;built_in&#34;&gt;SetExplicitTime&lt;/span&gt;(NewTime))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogAnimDistanceMatchingLibrary, Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Could not set explicit time on sequence evaluator, value is not dynamic. Set it as Always Dynamic.&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogAnimDistanceMatchingLibrary, Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;DistanceMatchToTarget called with invalid DistanceCurveName or animation (%s) is missing a distance curve.&amp;quot;&lt;/span&gt;), *&lt;span class=&#34;built_in&#34;&gt;GetNameSafe&lt;/span&gt;(AnimSequence));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogAnimDistanceMatchingLibrary, Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Sequence evaluator does not have an anim sequence to play.&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; SequenceEvaluator;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;FSequencePlayerReference &lt;span class=&#34;title&#34;&gt;UAnimDistanceMatchingLibrary::SetPlayrateToMatchSpeed&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FSequencePlayerReference&amp;amp; SequencePlayer, &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; SpeedToMatch, FVector2D PlayRateClamp)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	SequencePlayer.&lt;span class=&#34;built_in&#34;&gt;CallAnimNodeFunction&lt;/span&gt;&amp;lt;FAnimNode_SequencePlayer&amp;gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;SetPlayrateToMatchSpeed&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		[SpeedToMatch, PlayRateClamp](FAnimNode_SequencePlayer&amp;amp; InSequencePlayer)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UAnimSequence* AnimSequence = &lt;span class=&#34;built_in&#34;&gt;Cast&lt;/span&gt;&amp;lt;UAnimSequence&amp;gt;(InSequencePlayer.&lt;span class=&#34;built_in&#34;&gt;GetSequence&lt;/span&gt;()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; AnimLength = AnimSequence-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetPlayLength&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!FMath::&lt;span class=&#34;built_in&#34;&gt;IsNearlyZero&lt;/span&gt;(AnimLength))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;comment&#34;&gt;// Calculate the speed as: (distance traveled by the animation) / (length of the animation)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector RootMotionTranslation = AnimSequence-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;ExtractRootMotionFromRange&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;, AnimLength).&lt;span class=&#34;built_in&#34;&gt;GetTranslation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; RootMotionDistance = RootMotionTranslation.&lt;span class=&#34;built_in&#34;&gt;Size2D&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!FMath::&lt;span class=&#34;built_in&#34;&gt;IsNearlyZero&lt;/span&gt;(RootMotionDistance))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; AnimationSpeed = RootMotionDistance / AnimLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; DesiredPlayRate = SpeedToMatch / AnimationSpeed;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (PlayRateClamp.X &amp;gt;= &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt; &amp;amp;&amp;amp; PlayRateClamp.X &amp;lt; PlayRateClamp.Y)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							DesiredPlayRate = FMath::&lt;span class=&#34;built_in&#34;&gt;Clamp&lt;/span&gt;(DesiredPlayRate, PlayRateClamp.X, PlayRateClamp.Y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!InSequencePlayer.&lt;span class=&#34;built_in&#34;&gt;SetPlayRate&lt;/span&gt;(DesiredPlayRate))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogAnimDistanceMatchingLibrary, Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Could not set play rate on sequence player, value is not dynamic. Set it as Always Dynamic.&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogAnimDistanceMatchingLibrary, Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Unable to adjust playrate for animation with no root motion delta (%s).&amp;quot;&lt;/span&gt;), *&lt;span class=&#34;built_in&#34;&gt;GetNameSafe&lt;/span&gt;(AnimSequence));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogAnimDistanceMatchingLibrary, Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Unable to adjust playrate for zero length animation (%s).&amp;quot;&lt;/span&gt;), *&lt;span class=&#34;built_in&#34;&gt;GetNameSafe&lt;/span&gt;(AnimSequence));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogAnimDistanceMatchingLibrary, Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Sequence player does not have an anim sequence to play.&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; SequencePlayer;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Pivot&#34;&gt;&lt;a href=&#34;#Pivot&#34; class=&#34;headerlink&#34; title=&#34;Pivot&#34;&gt;&lt;/a&gt;Pivot&lt;/h3&gt;&lt;p&gt;?回转运动?主要是指进行反方向移动时应该执行的动画，比如前进中收到后退的输入，以现实来说应该先做出减速的动作再往后加速&lt;/p&gt;
&lt;h3 id=&#34;Aim-Offset-瞄准偏移&#34;&gt;&lt;a href=&#34;#Aim-Offset-瞄准偏移&#34; class=&#34;headerlink&#34; title=&#34;Aim Offset (瞄准偏移)&#34;&gt;&lt;/a&gt;Aim Offset (瞄准偏移)&lt;/h3&gt;&lt;h1 id=&#34;Lyra-Inventory-and-Lyra-Equipment&#34;&gt;&lt;a href=&#34;#Lyra-Inventory-and-Lyra-Equipment&#34; class=&#34;headerlink&#34; title=&#34;Lyra Inventory and Lyra Equipment&#34;&gt;&lt;/a&gt;Lyra Inventory and Lyra Equipment&lt;/h1&gt;&lt;h2 id=&#34;Class-Diagram-1&#34;&gt;&lt;a href=&#34;#Class-Diagram-1&#34; class=&#34;headerlink&#34; title=&#34;Class Diagram&#34;&gt;&lt;/a&gt;Class Diagram&lt;/h2&gt;&lt;img data-src=&#34;/2023/06/20/Lyra/Unreal%20Engine%205%20Lyra%20Starter%20Game%20Weapon%20Class%20Diagram.png&#34; class=&#34;&#34; title=&#34;Inventory and Equipment&#34;&gt;

&lt;h2 id=&#34;Key-Class-3&#34;&gt;&lt;a href=&#34;#Key-Class-3&#34; class=&#34;headerlink&#34; title=&#34;Key Class&#34;&gt;&lt;/a&gt;Key Class&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ULyraInventoryManagerComponent&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;Lyra-Abilities&#34;&gt;&lt;a href=&#34;#Lyra-Abilities&#34; class=&#34;headerlink&#34; title=&#34;Lyra Abilities&#34;&gt;&lt;/a&gt;Lyra Abilities&lt;/h1&gt;&lt;p&gt;使用游戏技能系统来构建玩法内容，同时也会依赖Game Features来动态装卸玩法内容。&lt;/p&gt;
&lt;h2 id=&#34;Key-Class-4&#34;&gt;&lt;a href=&#34;#Key-Class-4&#34; class=&#34;headerlink&#34; title=&#34;Key Class&#34;&gt;&lt;/a&gt;Key Class&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;FLyraAbilityGrant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lyra技能结构体，有UGameplayAbility成员，意义大概是定义要赋予的技能。UInputAction成员目前被注释掉了，并且提到该成员可以留空。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FLyraAttributeSetGrant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lyra属性集结构体，有UAtrributeSet成员和UDataTable成员，意义大概也是定义要赋予的属性集，UDatatable成员是用来存储初始化数据，可以留空。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ULyraAbilitySet&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Non-mutable data asset used to grant gameplay abilities and gameplay effects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UPrimaryDataAsset，用来赋予给Actor的技能和玩法效果的不可变数据资产。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FGameFeatureAbilitiesEntry&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在Game Feature中使用的Gameplay Ability System的数据结构单位，包含有FLyraAbiltyGrant成员数组、FLyraAttributeSetGrant成员数组、ULyraAbilitySet成员数组，另外还有一个Actor成员，意义是该结构体的技能要添加到的Actor。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UGameFeatureAction_AddAbilities&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;GameFeatureAction responsible for granting abilities (and attributes) to actors of a specified type.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UGameFeatureAction_WorldActionBase，负责赋予Actor特定技能和激活技能相关的逻辑。Abilities相关的Game Feature激活时会调用此类定义的回调函数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ULyraGameplayAbility&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The base gameplay ability class used by this project.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承UGameplayAbility，Lyra的游戏技能基类。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ULyraGameplayAbility_FromEquipment&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;An ability granted by and associated with an equipment instance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承ULyraGameplayAbility，一种与装备实例相关的技能类。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ULyraGameplayAbility_RangedWeapon&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;An ability granted by and associated with a ranged weapon instance&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继承ULyraGameplayAbility_FromEquipment，一种与远程武器实例相关的技能类。&lt;/p&gt;
&lt;h2 id=&#34;Flow-Chart&#34;&gt;&lt;a href=&#34;#Flow-Chart&#34; class=&#34;headerlink&#34; title=&#34;Flow Chart&#34;&gt;&lt;/a&gt;Flow Chart&lt;/h2&gt;&lt;p&gt;需要结合游戏技能系统的工作流程来构造成一个Lyra项目下完整的技能工作流程。&lt;/p&gt;


&lt;h2 id=&#34;Implementation&#34;&gt;&lt;a href=&#34;#Implementation&#34; class=&#34;headerlink&#34; title=&#34;Implementation&#34;&gt;&lt;/a&gt;Implementation&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;LyraStarterGame\Source\LyraGame\GameFeatures\GameFeatureAciton_AddAbilities.cpp&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameFeatureAction_AddAbilities::AddToWorld&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FWorldContext&amp;amp; WorldContext, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameFeatureStateChangeContext&amp;amp; ChangeContext)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UWorld* World = WorldContext.&lt;span class=&#34;built_in&#34;&gt;World&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UGameInstance* GameInstance = WorldContext.OwningGameInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FPerContextData&amp;amp; ActiveData = ContextData.&lt;span class=&#34;built_in&#34;&gt;FindOrAdd&lt;/span&gt;(ChangeContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((GameInstance != &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;) &amp;amp;&amp;amp; (World != &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;) &amp;amp;&amp;amp; World-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;IsGameWorld&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (UGameFrameworkComponentManager* ComponentMan = UGameInstance::&lt;span class=&#34;built_in&#34;&gt;GetSubsystem&lt;/span&gt;&amp;lt;UGameFrameworkComponentManager&amp;gt;(GameInstance))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			int32 EntryIndex = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameFeatureAbilitiesEntry&amp;amp; Entry : AbilitiesList)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!Entry.ActorClass.&lt;span class=&#34;built_in&#34;&gt;IsNull&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					UGameFrameworkComponentManager::FExtensionHandlerDelegate AddAbilitiesDelegate = UGameFrameworkComponentManager::FExtensionHandlerDelegate::&lt;span class=&#34;built_in&#34;&gt;CreateUObject&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &amp;amp;UGameFeatureAction_AddAbilities::HandleActorExtension, EntryIndex, ChangeContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					TSharedPtr&amp;lt;FComponentRequestHandle&amp;gt; ExtensionRequestHandle = ComponentMan-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AddExtensionHandler&lt;/span&gt;(Entry.ActorClass, AddAbilitiesDelegate);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					ActiveData.ComponentRequests.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(ExtensionRequestHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					EntryIndex++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameFeatureAction_AddAbilities::HandleActorExtension&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(AActor* Actor, FName EventName, int32 EntryIndex, FGameFeatureStateChangeContext ChangeContext)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FPerContextData* ActiveData = ContextData.&lt;span class=&#34;built_in&#34;&gt;Find&lt;/span&gt;(ChangeContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (AbilitiesList.&lt;span class=&#34;built_in&#34;&gt;IsValidIndex&lt;/span&gt;(EntryIndex) &amp;amp;&amp;amp; ActiveData)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameFeatureAbilitiesEntry&amp;amp; Entry = AbilitiesList[EntryIndex];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((EventName == UGameFrameworkComponentManager::NAME_ExtensionRemoved) || (EventName == UGameFrameworkComponentManager::NAME_ReceiverRemoved))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;RemoveActorAbilities&lt;/span&gt;(Actor, *ActiveData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((EventName == UGameFrameworkComponentManager::NAME_ExtensionAdded) || (EventName == ALyraPlayerState::NAME_LyraAbilityReady))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;AddActorAbilities&lt;/span&gt;(Actor, Entry, *ActiveData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UGameFeatureAction_AddAbilities::AddActorAbilities&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(AActor* Actor, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameFeatureAbilitiesEntry&amp;amp; AbilitiesEntry, FPerContextData&amp;amp; ActiveData)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(Actor);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!Actor-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;HasAuthority&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// early out if Actor already has ability extensions applied&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ActiveData.ActiveExtensions.&lt;span class=&#34;built_in&#34;&gt;Find&lt;/span&gt;(Actor) != &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (UAbilitySystemComponent* AbilitySystemComponent = &lt;span class=&#34;built_in&#34;&gt;FindOrAddComponentForActor&lt;/span&gt;&amp;lt;UAbilitySystemComponent&amp;gt;(Actor, AbilitiesEntry, ActiveData))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FActorExtensions AddedExtensions;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		AddedExtensions.Abilities.&lt;span class=&#34;built_in&#34;&gt;Reserve&lt;/span&gt;(AbilitiesEntry.GrantedAbilities.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		AddedExtensions.Attributes.&lt;span class=&#34;built_in&#34;&gt;Reserve&lt;/span&gt;(AbilitiesEntry.GrantedAttributes.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		AddedExtensions.AbilitySetHandles.&lt;span class=&#34;built_in&#34;&gt;Reserve&lt;/span&gt;(AbilitiesEntry.GrantedAbilitySets.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FLyraAbilityGrant&amp;amp; Ability : AbilitiesEntry.GrantedAbilities)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!Ability.AbilityType.&lt;span class=&#34;built_in&#34;&gt;IsNull&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;function&#34;&gt;FGameplayAbilitySpec &lt;span class=&#34;title&#34;&gt;NewAbilitySpec&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Ability.AbilityType.LoadSynchronous())&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				FGameplayAbilitySpecHandle AbilityHandle = AbilitySystemComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GiveAbility&lt;/span&gt;(NewAbilitySpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				AddedExtensions.Abilities.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(AbilityHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FLyraAttributeSetGrant&amp;amp; Attributes : AbilitiesEntry.GrantedAttributes)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!Attributes.AttributeSetType.&lt;span class=&#34;built_in&#34;&gt;IsNull&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				TSubclassOf&amp;lt;UAttributeSet&amp;gt; SetType = Attributes.AttributeSetType.&lt;span class=&#34;built_in&#34;&gt;LoadSynchronous&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (SetType)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					UAttributeSet* NewSet = &lt;span class=&#34;built_in&#34;&gt;NewObject&lt;/span&gt;&amp;lt;UAttributeSet&amp;gt;(AbilitySystemComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetOwner&lt;/span&gt;(), SetType);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!Attributes.InitializationData.&lt;span class=&#34;built_in&#34;&gt;IsNull&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						UDataTable* InitData = Attributes.InitializationData.&lt;span class=&#34;built_in&#34;&gt;LoadSynchronous&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (InitData)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							NewSet-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;InitFromMetaDataTable&lt;/span&gt;(InitData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					AddedExtensions.Attributes.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(NewSet);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					AbilitySystemComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AddAttributeSetSubobject&lt;/span&gt;(NewSet);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ULyraAbilitySystemComponent* LyraASC = &lt;span class=&#34;built_in&#34;&gt;CastChecked&lt;/span&gt;&amp;lt;ULyraAbilitySystemComponent&amp;gt;(AbilitySystemComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; TSoftObjectPtr&amp;lt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; ULyraAbilitySet&amp;gt;&amp;amp; SetPtr : AbilitiesEntry.GrantedAbilitySets)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; ULyraAbilitySet* Set = SetPtr.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				Set-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GiveToAbilitySystem&lt;/span&gt;(LyraASC, &amp;amp;AddedExtensions.AbilitySetHandles.&lt;span class=&#34;built_in&#34;&gt;AddDefaulted_GetRef&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ActiveData.ActiveExtensions.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(Actor, AddedExtensions);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogGameFeatures, Error, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Failed to find/add an ability component to &amp;#x27;%s&amp;#x27;. Abilities will not be granted.&amp;quot;&lt;/span&gt;), *Actor-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetPathName&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;LyraStarterGame\Source\LyraGame\AbilitySystem\LyraAbilitySet.cpp&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ULyraAbilitySet::GiveToAbilitySystem&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(ULyraAbilitySystemComponent* LyraASC, FLyraAbilitySet_GrantedHandles* OutGrantedHandles, UObject* SourceObject)&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(LyraASC);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!LyraASC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;IsOwnerActorAuthoritative&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Must be authoritative to give or take ability sets.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Grant the gameplay abilities.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (int32 AbilityIndex = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; AbilityIndex &amp;lt; GrantedGameplayAbilities.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;(); ++AbilityIndex)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FLyraAbilitySet_GameplayAbility&amp;amp; AbilityToGrant = GrantedGameplayAbilities[AbilityIndex];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;(AbilityToGrant.Ability))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogLyraAbilitySystem, Error, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;GrantedGameplayAbilities[%d] on ability set [%s] is not valid.&amp;quot;&lt;/span&gt;), AbilityIndex, *&lt;span class=&#34;built_in&#34;&gt;GetNameSafe&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ULyraGameplayAbility* AbilityCDO = AbilityToGrant.Ability-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetDefaultObject&lt;/span&gt;&amp;lt;ULyraGameplayAbility&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;function&#34;&gt;FGameplayAbilitySpec &lt;span class=&#34;title&#34;&gt;AbilitySpec&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(AbilityCDO, AbilityToGrant.AbilityLevel)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		AbilitySpec.SourceObject = SourceObject;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		AbilitySpec.DynamicAbilityTags.&lt;span class=&#34;built_in&#34;&gt;AddTag&lt;/span&gt;(AbilityToGrant.InputTag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilitySpecHandle AbilitySpecHandle = LyraASC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GiveAbility&lt;/span&gt;(AbilitySpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OutGrantedHandles)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			OutGrantedHandles-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AddAbilitySpecHandle&lt;/span&gt;(AbilitySpecHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Grant the gameplay effects.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (int32 EffectIndex = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; EffectIndex &amp;lt; GrantedGameplayEffects.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;(); ++EffectIndex)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FLyraAbilitySet_GameplayEffect&amp;amp; EffectToGrant = GrantedGameplayEffects[EffectIndex];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;(EffectToGrant.GameplayEffect))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogLyraAbilitySystem, Error, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;GrantedGameplayEffects[%d] on ability set [%s] is not valid&amp;quot;&lt;/span&gt;), EffectIndex, *&lt;span class=&#34;built_in&#34;&gt;GetNameSafe&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UGameplayEffect* GameplayEffect = EffectToGrant.GameplayEffect-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetDefaultObject&lt;/span&gt;&amp;lt;UGameplayEffect&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FActiveGameplayEffectHandle GameplayEffectHandle = LyraASC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;ApplyGameplayEffectToSelf&lt;/span&gt;(GameplayEffect, EffectToGrant.EffectLevel, LyraASC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;MakeEffectContext&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OutGrantedHandles)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			OutGrantedHandles-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AddGameplayEffectHandle&lt;/span&gt;(GameplayEffectHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Grant the attribute sets.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (int32 SetIndex = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; SetIndex &amp;lt; GrantedAttributes.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;(); ++SetIndex)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FLyraAbilitySet_AttributeSet&amp;amp; SetToGrant = GrantedAttributes[SetIndex];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;built_in&#34;&gt;IsValid&lt;/span&gt;(SetToGrant.AttributeSet))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogLyraAbilitySystem, Error, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;GrantedAttributes[%d] on ability set [%s] is not valid&amp;quot;&lt;/span&gt;), SetIndex, *&lt;span class=&#34;built_in&#34;&gt;GetNameSafe&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		UAttributeSet* NewSet = &lt;span class=&#34;built_in&#34;&gt;NewObject&lt;/span&gt;&amp;lt;UAttributeSet&amp;gt;(LyraASC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetOwner&lt;/span&gt;(), SetToGrant.AttributeSet);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		LyraASC-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AddAttributeSetSubobject&lt;/span&gt;(NewSet);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OutGrantedHandles)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			OutGrantedHandles-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AddAttributeSet&lt;/span&gt;(NewSet);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Class-Diagram-2&#34;&gt;&lt;a href=&#34;#Class-Diagram-2&#34; class=&#34;headerlink&#34; title=&#34;Class Diagram&#34;&gt;&lt;/a&gt;Class Diagram&lt;/h2&gt;&lt;h2 id=&#34;Conclusion-for-myself&#34;&gt;&lt;a href=&#34;#Conclusion-for-myself&#34; class=&#34;headerlink&#34; title=&#34;Conclusion for myself&#34;&gt;&lt;/a&gt;Conclusion for myself&lt;/h2&gt;&lt;p&gt;在Actor初始化后，会触发委托，Game Feature会开始通过Actor的技能组件，把技能添加到所属的Actor。&lt;/p&gt;
&lt;h2 id=&#34;具体逻辑样例实现&#34;&gt;&lt;a href=&#34;#具体逻辑样例实现&#34; class=&#34;headerlink&#34; title=&#34;具体逻辑样例实现&#34;&gt;&lt;/a&gt;具体逻辑样例实现&lt;/h2&gt;&lt;h3 id=&#34;武器开火到伤害应用&#34;&gt;&lt;a href=&#34;#武器开火到伤害应用&#34; class=&#34;headerlink&#34; title=&#34;武器开火到伤害应用&#34;&gt;&lt;/a&gt;武器开火到伤害应用&lt;/h3&gt;&lt;h4 id=&#34;Flow-Chart-1&#34;&gt;&lt;a href=&#34;#Flow-Chart-1&#34; class=&#34;headerlink&#34; title=&#34;Flow Chart&#34;&gt;&lt;/a&gt;Flow Chart&lt;/h4&gt;&lt;h4 id=&#34;Key-Implmentation&#34;&gt;&lt;a href=&#34;#Key-Implmentation&#34; class=&#34;headerlink&#34; title=&#34;Key Implmentation&#34;&gt;&lt;/a&gt;Key Implmentation&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;LyraStarterGame\Source\LyraGame\Weapons\LyraGameplayAbility_RangedWeapon.cpp&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;246&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;247&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;248&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;249&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;250&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;251&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;252&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;253&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;254&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;257&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;258&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;259&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;260&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;261&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;262&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;263&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;264&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;265&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;266&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;267&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;268&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;269&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;270&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;271&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;272&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;273&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;274&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;275&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;276&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;277&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;278&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;279&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;280&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;281&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;282&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;283&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;284&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;285&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;286&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;287&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;288&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;289&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;291&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;292&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;293&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;294&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;295&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;296&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;297&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;298&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;299&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;300&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;301&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;302&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;303&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;304&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;305&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;306&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;307&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;308&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;309&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;310&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;311&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;312&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;313&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;314&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;315&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;316&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;317&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;318&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;319&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;320&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ULyraGameplayAbility_RangedWeapon::StartRangedWeaponTargeting&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(CurrentActorInfo);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	AActor* AvatarActor = CurrentActorInfo-&amp;gt;AvatarActor.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(AvatarActor);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UAbilitySystemComponent* MyAbilityComponent = CurrentActorInfo-&amp;gt;AbilitySystemComponent.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(MyAbilityComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	AController* Controller = &lt;span class=&#34;built_in&#34;&gt;GetControllerFromActorInfo&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(Controller);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ULyraWeaponStateComponent* WeaponStateComponent = Controller-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;FindComponentByClass&lt;/span&gt;&amp;lt;ULyraWeaponStateComponent&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;FScopedPredictionWindow &lt;span class=&#34;title&#34;&gt;ScopedPrediction&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(MyAbilityComponent, CurrentActivationInfo.GetActivationPredictionKey())&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	TArray&amp;lt;FHitResult&amp;gt; FoundHits;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;PerformLocalTargeting&lt;/span&gt;(&lt;span class=&#34;comment&#34;&gt;/*out*/&lt;/span&gt; FoundHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Fill out the target data from the hit results&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FGameplayAbilityTargetDataHandle TargetData;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	TargetData.UniqueId = WeaponStateComponent ? WeaponStateComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetUnconfirmedServerSideHitMarkerCount&lt;/span&gt;() : &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (FoundHits.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;() &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; int32 CartridgeID = FMath::&lt;span class=&#34;built_in&#34;&gt;Rand&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FHitResult&amp;amp; FoundHit : FoundHits)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			FLyraGameplayAbilityTargetData_SingleTargetHit* NewTargetData = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;FLyraGameplayAbilityTargetData_SingleTargetHit&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			NewTargetData-&amp;gt;HitResult = FoundHit;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			NewTargetData-&amp;gt;CartridgeID = CartridgeID;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			TargetData.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(NewTargetData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Send hit marker information&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bProjectileWeapon = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!bProjectileWeapon &amp;amp;&amp;amp; (WeaponStateComponent != &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		WeaponStateComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AddUnconfirmedServerSideHitMarkers&lt;/span&gt;(TargetData, FoundHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Process the target data immediately&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;OnTargetDataReadyCallback&lt;/span&gt;(TargetData, &lt;span class=&#34;built_in&#34;&gt;FGameplayTag&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ULyraGameplayAbility_RangedWeapon::PerformLocalTargeting&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(OUT TArray&amp;lt;FHitResult&amp;gt;&amp;amp; OutHits)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	APawn* &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; AvatarPawn = &lt;span class=&#34;built_in&#34;&gt;Cast&lt;/span&gt;&amp;lt;APawn&amp;gt;(&lt;span class=&#34;built_in&#34;&gt;GetAvatarActorFromActorInfo&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ULyraRangedWeaponInstance* WeaponData = &lt;span class=&#34;built_in&#34;&gt;GetWeaponInstance&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (AvatarPawn &amp;amp;&amp;amp; AvatarPawn-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;IsLocallyControlled&lt;/span&gt;() &amp;amp;&amp;amp; WeaponData)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FRangedWeaponFiringInput InputData;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		InputData.WeaponData = WeaponData;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		InputData.bCanPlayBulletFX = (AvatarPawn-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetNetMode&lt;/span&gt;() != NM_DedicatedServer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//@&lt;span class=&#34;doctag&#34;&gt;TODO:&lt;/span&gt; Should do more complicated logic here when the player is close to a wall, etc...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FTransform TargetTransform = &lt;span class=&#34;built_in&#34;&gt;GetTargetingTransform&lt;/span&gt;(AvatarPawn, ELyraAbilityTargetingSource::CameraTowardsFocus);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		InputData.AimDir = TargetTransform.&lt;span class=&#34;built_in&#34;&gt;GetUnitAxis&lt;/span&gt;(EAxis::X);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		InputData.StartTrace = TargetTransform.&lt;span class=&#34;built_in&#34;&gt;GetTranslation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		InputData.EndAim = InputData.StartTrace + InputData.AimDir * WeaponData-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetMaxDamageRange&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ENABLE_DRAW_DEBUG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (LyraConsoleVariables::DrawBulletTracesDuration &amp;gt; &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; DebugThickness = &lt;span class=&#34;number&#34;&gt;2.0f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;DrawDebugLine&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;GetWorld&lt;/span&gt;(), InputData.StartTrace, InputData.StartTrace + (InputData.AimDir * &lt;span class=&#34;number&#34;&gt;100.0f&lt;/span&gt;), FColor::Yellow, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;, LyraConsoleVariables::DrawBulletTracesDuration, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, DebugThickness);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;TraceBulletsInCartridge&lt;/span&gt;(InputData, &lt;span class=&#34;comment&#34;&gt;/*out*/&lt;/span&gt; OutHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ULyraGameplayAbility_RangedWeapon::TraceBulletsInCartridge&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FRangedWeaponFiringInput&amp;amp; InputData, OUT TArray&amp;lt;FHitResult&amp;gt;&amp;amp; OutHits)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ULyraRangedWeaponInstance* WeaponData = InputData.WeaponData;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(WeaponData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; int32 BulletsPerCartridge = WeaponData-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetBulletsPerCartridge&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (int32 BulletIndex = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; BulletIndex &amp;lt; BulletsPerCartridge; ++BulletIndex)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; BaseSpreadAngle = WeaponData-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetCalculatedSpreadAngle&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; SpreadAngleMultiplier = WeaponData-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetCalculatedSpreadAngleMultiplier&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; ActualSpreadAngle = BaseSpreadAngle * SpreadAngleMultiplier;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; HalfSpreadAngleInRadians = FMath::&lt;span class=&#34;built_in&#34;&gt;DegreesToRadians&lt;/span&gt;(ActualSpreadAngle * &lt;span class=&#34;number&#34;&gt;0.5f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector BulletDir = &lt;span class=&#34;built_in&#34;&gt;VRandConeNormalDistribution&lt;/span&gt;(InputData.AimDir, HalfSpreadAngleInRadians, WeaponData-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetSpreadExponent&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector EndTrace = InputData.StartTrace + (BulletDir * WeaponData-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetMaxDamageRange&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FVector HitLocation = EndTrace;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		TArray&amp;lt;FHitResult&amp;gt; AllImpacts;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FHitResult Impact = &lt;span class=&#34;built_in&#34;&gt;DoSingleBulletTrace&lt;/span&gt;(InputData.StartTrace, EndTrace, WeaponData-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetBulletTraceSweepRadius&lt;/span&gt;(), &lt;span class=&#34;comment&#34;&gt;/*bIsSimulated=*/&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;, &lt;span class=&#34;comment&#34;&gt;/*out*/&lt;/span&gt; AllImpacts);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; AActor* HitActor = Impact.&lt;span class=&#34;built_in&#34;&gt;GetActor&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (HitActor)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ENABLE_DRAW_DEBUG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (LyraConsoleVariables::DrawBulletHitDuration &amp;gt; &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;DrawDebugPoint&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;GetWorld&lt;/span&gt;(), Impact.ImpactPoint, LyraConsoleVariables::DrawBulletHitRadius, FColor::Red, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;, LyraConsoleVariables::DrawBulletHitRadius);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (AllImpacts.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;() &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				OutHits.&lt;span class=&#34;built_in&#34;&gt;Append&lt;/span&gt;(AllImpacts);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			HitLocation = Impact.ImpactPoint;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Make sure there&amp;#x27;s always an entry in OutHits so the direction can be used for tracers, etc...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (OutHits.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;() == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!Impact.bBlockingHit)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// Locate the fake &amp;#x27;impact&amp;#x27; at the end of the trace&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				Impact.Location = EndTrace;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				Impact.ImpactPoint = EndTrace;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			OutHits.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(Impact);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;FHitResult &lt;span class=&#34;title&#34;&gt;ULyraGameplayAbility_RangedWeapon::DoSingleBulletTrace&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector&amp;amp; StartTrace, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector&amp;amp; EndTrace, &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; SweepRadius, &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bIsSimulated, OUT TArray&amp;lt;FHitResult&amp;gt;&amp;amp; OutHits)&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ENABLE_DRAW_DEBUG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (LyraConsoleVariables::DrawBulletTracesDuration &amp;gt; &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; DebugThickness = &lt;span class=&#34;number&#34;&gt;1.0f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;DrawDebugLine&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;GetWorld&lt;/span&gt;(), StartTrace, EndTrace, FColor::Red, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;, LyraConsoleVariables::DrawBulletTracesDuration, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, DebugThickness);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;// ENABLE_DRAW_DEBUG&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FHitResult Impact;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Trace and process instant hit if something was hit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// First trace without using sweep radius&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;FindFirstPawnHitResult&lt;/span&gt;(OutHits) == INDEX_NONE)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Impact = &lt;span class=&#34;built_in&#34;&gt;WeaponTrace&lt;/span&gt;(StartTrace, EndTrace, &lt;span class=&#34;comment&#34;&gt;/*SweepRadius=*/&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;, bIsSimulated, &lt;span class=&#34;comment&#34;&gt;/*out*/&lt;/span&gt; OutHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;FindFirstPawnHitResult&lt;/span&gt;(OutHits) == INDEX_NONE)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// If this weapon didn&amp;#x27;t hit anything with a line trace and supports a sweep radius, try that&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (SweepRadius &amp;gt; &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			TArray&amp;lt;FHitResult&amp;gt; SweepHits;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Impact = &lt;span class=&#34;built_in&#34;&gt;WeaponTrace&lt;/span&gt;(StartTrace, EndTrace, SweepRadius, bIsSimulated, &lt;span class=&#34;comment&#34;&gt;/*out*/&lt;/span&gt; SweepHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// If the trace with sweep radius enabled hit a pawn, check if we should use its hit results&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; int32 FirstPawnIdx = &lt;span class=&#34;built_in&#34;&gt;FindFirstPawnHitResult&lt;/span&gt;(SweepHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (SweepHits.&lt;span class=&#34;built_in&#34;&gt;IsValidIndex&lt;/span&gt;(FirstPawnIdx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// If we had a blocking hit in our line trace that occurs in SweepHits before our&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;// hit pawn, we should just use our initial hit results since the Pawn hit should be blocked&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bUseSweepHits = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (int32 Idx = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; Idx &amp;lt; FirstPawnIdx; ++Idx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FHitResult&amp;amp; CurHitResult = SweepHits[Idx];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; Pred = [&amp;amp;CurHitResult](&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FHitResult&amp;amp; Other)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Other.HitObjectHandle == CurHitResult.HitObjectHandle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (CurHitResult.bBlockingHit &amp;amp;&amp;amp; OutHits.&lt;span class=&#34;built_in&#34;&gt;ContainsByPredicate&lt;/span&gt;(Pred))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						bUseSweepHits = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bUseSweepHits)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					OutHits = SweepHits;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Impact;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;FHitResult &lt;span class=&#34;title&#34;&gt;ULyraGameplayAbility_RangedWeapon::WeaponTrace&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector&amp;amp; StartTrace, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FVector&amp;amp; EndTrace, &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; SweepRadius, &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bIsSimulated, OUT TArray&amp;lt;FHitResult&amp;gt;&amp;amp; OutHitResults)&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	TArray&amp;lt;FHitResult&amp;gt; HitResults;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;FCollisionQueryParams &lt;span class=&#34;title&#34;&gt;TraceParams&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(SCENE_QUERY_STAT(WeaponTrace), &lt;span class=&#34;comment&#34;&gt;/*bTraceComplex=*/&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;, &lt;span class=&#34;comment&#34;&gt;/*IgnoreActor=*/&lt;/span&gt; GetAvatarActorFromActorInfo())&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	TraceParams.bReturnPhysicalMaterial = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;AddAdditionalTraceIgnoreActors&lt;/span&gt;(TraceParams);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//TraceParams.bDebugQuery = true;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; ECollisionChannel TraceChannel = &lt;span class=&#34;built_in&#34;&gt;DetermineTraceChannel&lt;/span&gt;(TraceParams, bIsSimulated);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (SweepRadius &amp;gt; &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;GetWorld&lt;/span&gt;()-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;SweepMultiByChannel&lt;/span&gt;(HitResults, StartTrace, EndTrace, FQuat::Identity, TraceChannel, FCollisionShape::&lt;span class=&#34;built_in&#34;&gt;MakeSphere&lt;/span&gt;(SweepRadius), TraceParams);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;GetWorld&lt;/span&gt;()-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;LineTraceMultiByChannel&lt;/span&gt;(HitResults, StartTrace, EndTrace, TraceChannel, TraceParams);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;FHitResult &lt;span class=&#34;title&#34;&gt;Hit&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(ForceInit)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (HitResults.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;() &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Filter the output list to prevent multiple hits on the same actor;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// this is to prevent a single bullet dealing damage multiple times to&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// a single actor if using an overlap trace&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (FHitResult&amp;amp; CurHitResult : HitResults)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; Pred = [&amp;amp;CurHitResult](&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FHitResult&amp;amp; Other)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Other.HitObjectHandle == CurHitResult.HitObjectHandle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!OutHitResults.&lt;span class=&#34;built_in&#34;&gt;ContainsByPredicate&lt;/span&gt;(Pred))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				OutHitResults.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(CurHitResult);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Hit = OutHitResults.&lt;span class=&#34;built_in&#34;&gt;Last&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Hit.TraceStart = StartTrace;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Hit.TraceEnd = EndTrace;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Hit;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ULyraGameplayAbility_RangedWeapon::OnTargetDataReadyCallback&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilityTargetDataHandle&amp;amp; InData, FGameplayTag ApplicationTag)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UAbilitySystemComponent* MyAbilityComponent = CurrentActorInfo-&amp;gt;AbilitySystemComponent.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(MyAbilityComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayAbilitySpec* AbilitySpec = MyAbilityComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;FindAbilitySpecFromHandle&lt;/span&gt;(CurrentSpecHandle))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;function&#34;&gt;FScopedPredictionWindow	&lt;span class=&#34;title&#34;&gt;ScopedPrediction&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(MyAbilityComponent)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Take ownership of the target data to make sure no callbacks into game code invalidate it out from under us&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;function&#34;&gt;FGameplayAbilityTargetDataHandle &lt;span class=&#34;title&#34;&gt;LocalTargetDataHandle&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(MoveTemp(&lt;span class=&#34;keyword&#34;&gt;const_cast&lt;/span&gt;&amp;lt;FGameplayAbilityTargetDataHandle&amp;amp;&amp;gt;(InData)))&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bShouldNotifyServer = CurrentActorInfo-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;IsLocallyControlled&lt;/span&gt;() &amp;amp;&amp;amp; !CurrentActorInfo-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;IsNetAuthority&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bShouldNotifyServer)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			MyAbilityComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;CallServerSetReplicatedTargetData&lt;/span&gt;(CurrentSpecHandle, CurrentActivationInfo.&lt;span class=&#34;built_in&#34;&gt;GetActivationPredictionKey&lt;/span&gt;(), LocalTargetDataHandle, ApplicationTag, MyAbilityComponent-&amp;gt;ScopedPredictionKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bIsTargetDataValid = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; bProjectileWeapon = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; WITH_SERVER_CODE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!bProjectileWeapon)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (AController* Controller = &lt;span class=&#34;built_in&#34;&gt;GetControllerFromActorInfo&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Controller-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetLocalRole&lt;/span&gt;() == ROLE_Authority)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;comment&#34;&gt;// Confirm hit markers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ULyraWeaponStateComponent* WeaponStateComponent = Controller-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;FindComponentByClass&lt;/span&gt;&amp;lt;ULyraWeaponStateComponent&amp;gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						TArray&amp;lt;uint8&amp;gt; HitReplaces;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (uint8 i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; (i &amp;lt; LocalTargetDataHandle.&lt;span class=&#34;built_in&#34;&gt;Num&lt;/span&gt;()) &amp;amp;&amp;amp; (i &amp;lt; &lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;); ++i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (FGameplayAbilityTargetData_SingleTargetHit* SingleTargetHit = &lt;span class=&#34;built_in&#34;&gt;static_cast&lt;/span&gt;&amp;lt;FGameplayAbilityTargetData_SingleTargetHit*&amp;gt;(LocalTargetDataHandle.&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;(i)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;								&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (SingleTargetHit-&amp;gt;bHitReplaced)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;								&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;									HitReplaces.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;								&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						WeaponStateComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;ClientConfirmTargetData&lt;/span&gt;(LocalTargetDataHandle.UniqueId, bIsTargetDataValid, HitReplaces);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;//WITH_SERVER_CODE&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// See if we still have ammo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bIsTargetDataValid &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;CommitAbility&lt;/span&gt;(CurrentSpecHandle, CurrentActorInfo, CurrentActivationInfo))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// We fired the weapon, add spread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ULyraRangedWeaponInstance* WeaponData = &lt;span class=&#34;built_in&#34;&gt;GetWeaponInstance&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(WeaponData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			WeaponData-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AddSpread&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;// Let the blueprint do stuff like apply effects to the targets&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;OnRangedWeaponTargetDataReady&lt;/span&gt;(LocalTargetDataHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogLyraAbilitySystem, Warning, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Weapon ability %s failed to commit (bIsTargetDataValid=%d)&amp;quot;&lt;/span&gt;), *&lt;span class=&#34;built_in&#34;&gt;GetPathName&lt;/span&gt;(), bIsTargetDataValid ? &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;K2_EndAbility&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// We&amp;#x27;ve processed the data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	MyAbilityComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;ConsumeClientReplicatedTargetData&lt;/span&gt;(CurrentSpecHandle, CurrentActivationInfo.&lt;span class=&#34;built_in&#34;&gt;GetActivationPredictionKey&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;LyraStarterGame\Source\LyraGame\AbilitySystem\Executions\LyraDamageExecution.cpp&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ULyraDamageExecution::Execute_Implementation&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayEffectCustomExecutionParameters&amp;amp; ExecutionParams, FGameplayEffectCustomExecutionOutput&amp;amp; OutExecutionOutput)&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; WITH_SERVER_CODE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayEffectSpec&amp;amp; Spec = ExecutionParams.&lt;span class=&#34;built_in&#34;&gt;GetOwningSpec&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FLyraGameplayEffectContext* TypedContext = FLyraGameplayEffectContext::&lt;span class=&#34;built_in&#34;&gt;ExtractEffectContext&lt;/span&gt;(Spec.&lt;span class=&#34;built_in&#34;&gt;GetContext&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;check&lt;/span&gt;(TypedContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayTagContainer* SourceTags = Spec.CapturedSourceTags.&lt;span class=&#34;built_in&#34;&gt;GetAggregatedTags&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FGameplayTagContainer* TargetTags = Spec.CapturedTargetTags.&lt;span class=&#34;built_in&#34;&gt;GetAggregatedTags&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FAggregatorEvaluateParameters EvaluateParameters;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	EvaluateParameters.SourceTags = SourceTags;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	EvaluateParameters.TargetTags = TargetTags;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; BaseDamage = &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ExecutionParams.&lt;span class=&#34;built_in&#34;&gt;AttemptCalculateCapturedAttributeMagnitude&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;DamageStatics&lt;/span&gt;().BaseDamageDef, EvaluateParameters, BaseDamage);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; AActor* EffectCauser = TypedContext-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetEffectCauser&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FHitResult* HitActorResult = TypedContext-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetHitResult&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	AActor* HitActor = &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FVector ImpactLocation = FVector::ZeroVector;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FVector ImpactNormal = FVector::ZeroVector;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FVector StartTrace = FVector::ZeroVector;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FVector EndTrace = FVector::ZeroVector;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Calculation of hit actor, surface, zone, and distance all rely on whether the calculation has a hit result or not.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Effects just being added directly w/o having been targeted will always come in without a hit result, which must default&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// to some fallback information.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (HitActorResult)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FHitResult&amp;amp; CurHitResult = *HitActorResult;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		HitActor = CurHitResult.HitObjectHandle.&lt;span class=&#34;built_in&#34;&gt;FetchActor&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (HitActor)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ImpactLocation = CurHitResult.ImpactPoint;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ImpactNormal = CurHitResult.ImpactNormal;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			StartTrace = CurHitResult.TraceStart;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			EndTrace = CurHitResult.TraceEnd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Handle case of no hit result or hit result not actually returning an actor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	UAbilitySystemComponent* TargetAbilitySystemComponent = ExecutionParams.&lt;span class=&#34;built_in&#34;&gt;GetTargetAbilitySystemComponent&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!HitActor)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		HitActor = TargetAbilitySystemComponent ? TargetAbilitySystemComponent-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetAvatarActor_Direct&lt;/span&gt;() : &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (HitActor)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ImpactLocation = HitActor-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetActorLocation&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Apply rules for team damage/self damage/etc...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; DamageInteractionAllowedMultiplier = &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (HitActor)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ULyraTeamSubsystem* TeamSubsystem = HitActor-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetWorld&lt;/span&gt;()-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetSubsystem&lt;/span&gt;&amp;lt;ULyraTeamSubsystem&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;ensure&lt;/span&gt;(TeamSubsystem))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			DamageInteractionAllowedMultiplier = TeamSubsystem-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;CanCauseDamage&lt;/span&gt;(EffectCauser, HitActor) ? &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; : &lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Determine distance&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;double&lt;/span&gt; Distance = WORLD_MAX;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (TypedContext-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;HasOrigin&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Distance = FVector::&lt;span class=&#34;built_in&#34;&gt;Dist&lt;/span&gt;(TypedContext-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetOrigin&lt;/span&gt;(), ImpactLocation);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (EffectCauser)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Distance = FVector::&lt;span class=&#34;built_in&#34;&gt;Dist&lt;/span&gt;(EffectCauser-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetActorLocation&lt;/span&gt;(), ImpactLocation);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;ensureMsgf&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Damage Calculation cannot deduce a source location for damage coming from %s; Falling back to WORLD_MAX dist!&amp;quot;&lt;/span&gt;), *&lt;span class=&#34;built_in&#34;&gt;GetPathNameSafe&lt;/span&gt;(Spec.Def));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Apply ability source modifiers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; PhysicalMaterialAttenuation = &lt;span class=&#34;number&#34;&gt;1.0f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; DistanceAttenuation = &lt;span class=&#34;number&#34;&gt;1.0f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; ILyraAbilitySourceInterface* AbilitySource = TypedContext-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetAbilitySource&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; UPhysicalMaterial* PhysMat = TypedContext-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetPhysicalMaterial&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			PhysicalMaterialAttenuation = AbilitySource-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetPhysicalMaterialAttenuation&lt;/span&gt;(PhysMat, SourceTags, TargetTags);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		DistanceAttenuation = AbilitySource-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetDistanceAttenuation&lt;/span&gt;(Distance, SourceTags, TargetTags);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	DistanceAttenuation = FMath::&lt;span class=&#34;built_in&#34;&gt;Max&lt;/span&gt;(DistanceAttenuation, &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// Clamping is done when damage is converted to -health&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; DamageDone = FMath::&lt;span class=&#34;built_in&#34;&gt;Max&lt;/span&gt;(BaseDamage * DistanceAttenuation * PhysicalMaterialAttenuation * DamageInteractionAllowedMultiplier, &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (DamageDone &amp;gt; &lt;span class=&#34;number&#34;&gt;0.0f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Apply a damage modifier, this gets turned into - health on the target&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		OutExecutionOutput.&lt;span class=&#34;built_in&#34;&gt;AddOutputModifier&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;FGameplayModifierEvaluatedData&lt;/span&gt;(ULyraHealthSet::&lt;span class=&#34;built_in&#34;&gt;GetDamageAttribute&lt;/span&gt;(), EGameplayModOp::Additive, DamageDone));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;// #if WITH_SERVER_CODE&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;Conclusion-for-myself-1&#34;&gt;&lt;a href=&#34;#Conclusion-for-myself-1&#34; class=&#34;headerlink&#34; title=&#34;Conclusion for myself&#34;&gt;&lt;/a&gt;Conclusion for myself&lt;/h4&gt;&lt;p&gt;该方案是射线检测，根据瞄准和枪械的参数进行搜索，然后通过游戏技能系统和Game Feature去调用执行伤害计算，最终再通过游戏技能系统和Game Feature应用伤害至目标Actor。&lt;/p&gt;
&lt;p&gt;Modifier让我有点熟悉，是Dota 2创意工坊的文档中有提过，并且有过编写，Modifier可以当作Buff或者Debuff对象，与这里遇到的Modifier有一定程度的相似。&lt;/p&gt;
&lt;h1 id=&#34;Lyra-Camera&#34;&gt;&lt;a href=&#34;#Lyra-Camera&#34; class=&#34;headerlink&#34; title=&#34;Lyra Camera&#34;&gt;&lt;/a&gt;Lyra Camera&lt;/h1&gt;&lt;h1 id=&#34;Lyra-AI-Behavior-Tree&#34;&gt;&lt;a href=&#34;#Lyra-AI-Behavior-Tree&#34; class=&#34;headerlink&#34; title=&#34;Lyra AI Behavior Tree&#34;&gt;&lt;/a&gt;Lyra AI Behavior Tree&lt;/h1&gt;&lt;h1 id=&#34;Conclusion-for-myself-2&#34;&gt;&lt;a href=&#34;#Conclusion-for-myself-2&#34; class=&#34;headerlink&#34; title=&#34;Conclusion for myself&#34;&gt;&lt;/a&gt;Conclusion for myself&lt;/h1&gt;&lt;p&gt;Lyra的代码设计大量采用ECS架构设计，能用来缓解AActor、ACharacter、AController在Gameplay代码设计上的臃肿问题。&lt;br&gt;相比Unreal Engine 4时期的ShooterGame样例，Lyra样例更加复杂，提供了更好的独立游戏模板，更好的功能模块细分思路可供参考，偏向一个AAA级游戏开发工业的细分方式。&lt;br&gt;动态装卸玩法的框架设计非常适合网游或者长期运营的游戏，但是可能不一定适用于一些大型单机游戏。用来做RPG为主的混合类型游戏相当合适，但是不代表做别的游戏类型不合适，因为其中的代码架构设计也可以用来做别的游戏。&lt;br&gt;EnhancedInput比旧版本的输入提供了更多的轮子，比如长按、点按等方式不用自己造了，但是将配置、输入方式、配置映射、游戏逻辑分开，用起来其实有一点麻烦，但是其可扩展性和灵活性相当的好。不单止可以做普通的角色射击，还可以加其他载具相关的。&lt;br&gt;第一次接触动画向开发相关的结构，Lyra动画方案提供了更优的模块化，争取了更高的实时性能。&lt;br&gt;数据驱动型的Gameplay框架，可将玩法设计完全交给了设计师。但是要求设计师有写蓝图脚本的能力，不太清楚国内的团队，国外成熟的开发团队确实可以采用这个方案，因为我了解到的国外成熟团队设计师确实具备写脚本的技能。&lt;/p&gt;
&lt;h1 id=&#34;Reference&#34;&gt;&lt;a href=&#34;#Reference&#34; class=&#34;headerlink&#34; title=&#34;Reference&#34;&gt;&lt;/a&gt;Reference&lt;/h1&gt;&lt;h2 id=&#34;Official-Documentation&#34;&gt;&lt;a href=&#34;#Official-Documentation&#34; class=&#34;headerlink&#34; title=&#34;Official Documentation&#34;&gt;&lt;/a&gt;Official Documentation&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLnVucmVhbGVuZ2luZS5jb20vNS4yL2VuLVVTL2VuaGFuY2VkLWlucHV0LWluLXVucmVhbC1lbmdpbmUv&#34;&gt;Enhanced Input in Unreal Engine | Unreal Engine 5.2 Documentation&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLnVucmVhbGVuZ2luZS5jb20vNS4yL2VuLVVTL2dhbWVwbGF5LWFiaWxpdHktc3lzdGVtLWZvci11bnJlYWwtZW5naW5lLw==&#34;&gt;Gameplay Ability System for Unreal Engine | Unreal Engine 5.2 Documentation&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLnVucmVhbGVuZ2luZS5jb20vNS4yL2VuLVVTL2x5cmEtaW5wdXQtc2V0dGluZ3MtaW4tdW5yZWFsLWVuZ2luZS8=&#34;&gt;Lyra Input Settings in Unreal Engine | Unreal Engine 5.2 Documentation&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLnVucmVhbGVuZ2luZS5jb20vNS4yL2VuLVVTL2FiaWxpdGllcy1pbi1seXJhLWluLXVucmVhbC1lbmdpbmUv&#34;&gt;Abilities in Lyra in Unreal Engine | Unreal Engine 5.2 Documentation&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLnVucmVhbGVuZ2luZS5jb20vNS4yL2VuLVVTL2x5cmEtaW52ZW50b3J5LWFuZC1lcXVpcG1lbnQtaW4tdW5yZWFsLWVuZ2luZS8=&#34;&gt;Lyra Inventory and Equipment in Unreal Engine | Unreal Engine 5.2 Documentation&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Third-Party-Articles&#34;&gt;&lt;a href=&#34;#Third-Party-Articles&#34; class=&#34;headerlink&#34; title=&#34;Third-Party Articles&#34;&gt;&lt;/a&gt;Third-Party Articles&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZ2RjdmF1bHQuY29tL3BsYXkvMTAyNDAwMS8tT3ZlcndhdGNoLUdhbWVwbGF5LUFyY2hpdGVjdHVyZS1hbmQ=&#34;&gt;GDC Vault - ‘Overwatch’ Gameplay Architecture and Netcode&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zMDUzODYyNg==&#34;&gt;游戏开发中的ECS架构概述 – 知乎&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NzM1MzU4NTQ=&#34;&gt;《InsideUE5》GameFeatures架构（三）初始化 - 知乎&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80ODQ3NjM3MjI=&#34;&gt;《InsideUE5》GameFeatures架构（四）状态机 - 知乎&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80OTI4OTMwMDI=&#34;&gt;《InsideUE5》GameFeatures架构（五）AddComponents - 知乎&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NDAxNjgyNjA=&#34;&gt;UE的GAS原理深入探究一：ASC组件与GA - 知乎&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81Mzc5NDk4NzA=&#34;&gt;UE5 – Lyra中的输入模块(Input) - 知乎&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NzA5NDk0MjI=&#34;&gt;UE5 – EnhancedInput(输入增强系统) - 知乎&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNzg5NDgyNzc=&#34;&gt;UE5 Motion Warping(运动扭曲)原理剖析及UE4适配 – 知乎&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NDU1NTk4MzQ=&#34;&gt;UE5 Distance Matching插件应用与源码解析 - 知乎&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NTU5ODQ3MTI=&#34;&gt;上万字详解UE5动画新特性Pose Warping原理与应用 – 知乎&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81MTczNjgxODQ=&#34;&gt;UE5的动画蓝图（Lyra工程）- 知乎&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82MTQ3MTgyODY=&#34;&gt;UE5新项目Gameplay框架设计(以Lyra为例) - 知乎&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2023-06-20T07:25:08.856Z</updated>
    </entry>
</feed>
