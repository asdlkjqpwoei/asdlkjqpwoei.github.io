<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Jager的工地 • Posts by &#34;computer network&#34; category</title>
        <link>https://asdlkjqpwoei.github.io</link>
        <description>游戏开发</description>
        <language>default</language>
        <pubDate>Wed, 21 Jun 2023 17:32:43 +0800</pubDate>
        <lastBuildDate>Wed, 21 Jun 2023 17:32:43 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://asdlkjqpwoei.github.io/2023/06/21/ComputerNetwork/</guid>
            <title>Computer Network Basis</title>
            <link>https://asdlkjqpwoei.github.io/2023/06/21/ComputerNetwork/</link>
            <pubDate>Wed, 21 Jun 2023 17:32:43 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;OSI七层模型&#34;&gt;&lt;a href=&#34;#OSI七层模型&#34; class=&#34;headerlink&#34; title=&#34;OSI七层模型&#34;&gt;&lt;/a&gt;OSI七层模型&lt;/h1&gt;&lt;h1 id=&#34;应用层&#34;&gt;&lt;a href=&#34;#应用层&#34; class=&#34;headerlink&#34; title=&#34;应用层&#34;&gt;&lt;/a&gt;应用层&lt;/h1&gt;&lt;h1 id=&#34;表示层&#34;&gt;&lt;a href=&#34;#表示层&#34; class=&#34;headerlink&#34; title=&#34;表示层&#34;&gt;&lt;/a&gt;表示层&lt;/h1&gt;&lt;h1 id=&#34;会话层&#34;&gt;&lt;a href=&#34;#会话层&#34; class=&#34;headerlink&#34; title=&#34;会话层&#34;&gt;&lt;/a&gt;会话层&lt;/h1&gt;&lt;h1 id=&#34;传输层&#34;&gt;&lt;a href=&#34;#传输层&#34; class=&#34;headerlink&#34; title=&#34;传输层&#34;&gt;&lt;/a&gt;传输层&lt;/h1&gt;&lt;h1 id=&#34;网络层&#34;&gt;&lt;a href=&#34;#网络层&#34; class=&#34;headerlink&#34; title=&#34;网络层&#34;&gt;&lt;/a&gt;网络层&lt;/h1&gt;&lt;h1 id=&#34;数据链路层&#34;&gt;&lt;a href=&#34;#数据链路层&#34; class=&#34;headerlink&#34; title=&#34;数据链路层&#34;&gt;&lt;/a&gt;数据链路层&lt;/h1&gt;&lt;h1 id=&#34;物理层&#34;&gt;&lt;a href=&#34;#物理层&#34; class=&#34;headerlink&#34; title=&#34;物理层&#34;&gt;&lt;/a&gt;物理层&lt;/h1&gt;&lt;h1 id=&#34;传输控制协议-Transport-Control-Protocol&#34;&gt;&lt;a href=&#34;#传输控制协议-Transport-Control-Protocol&#34; class=&#34;headerlink&#34; title=&#34;传输控制协议(Transport Control Protocol)&#34;&gt;&lt;/a&gt;传输控制协议(Transport Control Protocol)&lt;/h1&gt;&lt;h2 id=&#34;初次建立通信连接的的过程&#34;&gt;&lt;a href=&#34;#初次建立通信连接的的过程&#34; class=&#34;headerlink&#34; title=&#34;初次建立通信连接的的过程&#34;&gt;&lt;/a&gt;初次建立通信连接的的过程&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;客户端向服务器发送请求报文段，SYN标志位为1，并且包含一个随机的起始序号seq。&lt;/li&gt;
&lt;li&gt;服务器接收到请求报文段，并同意建立连接以后，就回复客户端一个确认报文段，SYN标志位和ACK标志位都为1，还有个确认号字段为客户端起始序号+1(seq+1)，并且包含一个随机起始序号。&lt;/li&gt;
&lt;li&gt;客户端收到确认报文段以后，向服务器发出确认报文，并且给该连接分配缓存和变量。ACK标志位为1，起始序号字段为客户端起始序号+1，服务端确认号ACK为服务端起始序号+1。&lt;/li&gt;
&lt;li&gt;建立连接完成，开始传输。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;断开通信连接的过程&#34;&gt;&lt;a href=&#34;#断开通信连接的过程&#34; class=&#34;headerlink&#34; title=&#34;断开通信连接的过程&#34;&gt;&lt;/a&gt;断开通信连接的过程&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;客户端关闭连接时，向服务器发送释放连接报文段，请求释放连接。&lt;/li&gt;
&lt;li&gt;服务器收到该报文段后，回复确认报文段。（为了回复客户端我收到请求了，但此时并未开始释放，为的是传输剩余的数据）&lt;/li&gt;
&lt;li&gt;服务器数据传输完毕时，向客户端发出请求释放连接报文段。&lt;/li&gt;
&lt;li&gt;客户端收到释放报文段后，回复一个确认报文段。服务端接收后会释放连接，客户端在一段时间后才会释放。&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
    </channel>
</rss>
